/*! For license information please see api-client.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["@bugfender/sdk"]=t():e["@bugfender/sdk"]=t()}(self,(()=>(()=>{"use strict";var e={};return(()=>{var t=e;Object.defineProperty(t,"__esModule",{value:!0}),t.ApiClient=void 0,t.ApiClient=class{constructor(e,t){this.appKey=e,this.http=t}getDeviceStatus(e){const t={app_token:this.appKey,device:e};return this.http.post("/app/device-status",t).then((e=>{const t=void 0!==e.error,s=!t||t&&-1004!==e.error.code;return{isDeviceEnabled:void 0!==e.logger_enabled&&e.logger_enabled,isAppValid:s}}))}sendSession(e){return this.http.post("/session",e)}sendLogs(e,t){return this.http.post("/log/batch",{session_id:e,logs:t})}sendIssue(e,t,s,i,o,p){const n={uid:e,title:s,text:i,app:{key:this.appKey},type:o,session_id:p};return this.http.post("/issue",n).then((()=>({uuid:e,issueURL:t})))}setDeviceKey(e,t,s){return this.http.post("/device/keyvalue",{app_key:this.appKey,device_id:e,key:t,value:s})}}})(),e})()));
//# sourceMappingURL=api-client.js.map