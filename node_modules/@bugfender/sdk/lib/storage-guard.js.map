{"version":3,"file":"storage-guard.js","mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAQ,kBAAoBD,IAE5BD,EAAK,kBAAoBC,GAC1B,CATD,CASGK,MAAM,IACT,gDCTAC,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQQ,kBAAe,EAiCvBR,EAAQQ,aAhCR,MACIC,YAAYC,EAAKC,EAAQC,EAAQC,GAC7BC,KAAKJ,IAAMA,EACXI,KAAKH,OAASA,EACdG,KAAKF,OAASA,EACdE,KAAKD,QAAUA,EACfC,KAAKC,oBAAqB,EAC1BD,KAAKE,YAAa,EAClBF,KAAKG,iBAAkB,EAEvBH,KAAKI,uBACLC,YAAYL,KAAKI,qBAAqBE,KAAKN,MAFJ,IAG3C,CACAO,aAEI,OADAP,KAAKF,OAAOU,IAAI,aAAc,CAAEN,WAAYF,KAAKE,WAAYC,gBAAiBH,KAAKG,gBAAiBF,mBAAoBD,KAAKC,qBACtHD,KAAKE,aAAeF,KAAKG,iBAAmBH,KAAKC,mBAC5D,CACAQ,WACI,OAAOT,KAAKE,UAChB,CACAE,uBACI,MAAMM,EAAaV,KAAKH,OAAOc,QAAQX,KAAKD,SAC5C,OAAOC,KAAKJ,IAAIgB,gBAAgBF,GAAYG,MAAMC,IAC9Cd,KAAKE,WAAaY,EAAOZ,WACzBF,KAAKG,gBAAkBW,EAAOX,eAAe,IAC9C,QAEP,CACAY,sBAAsBC,GAClBhB,KAAKC,mBAAqBe,CAC9B,UDvBJ","sources":["webpack://@bugfender/sdk/webpack/universalModuleDefinition","webpack://@bugfender/sdk/./src/storage-guard.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@bugfender/sdk\"] = factory();\n\telse\n\t\troot[\"@bugfender/sdk\"] = factory();\n})(self, () => {\nreturn ","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StorageGuard = void 0;\nclass StorageGuard {\n    constructor(api, device, logger, options) {\n        this.api = api;\n        this.device = device;\n        this.logger = logger;\n        this.options = options;\n        this.deviceForceEnabled = false;\n        this.isAppValid = true;\n        this.isDeviceEnabled = false;\n        const checkIsDeviceEnabledIntervalMs = 5 * 60 * 1000;\n        this.checkIsDeviceEnabled();\n        setInterval(this.checkIsDeviceEnabled.bind(this), checkIsDeviceEnabledIntervalMs);\n    }\n    canProcess() {\n        this.logger.log('canProcess', { isAppValid: this.isAppValid, isDeviceEnabled: this.isDeviceEnabled, deviceForceEnabled: this.deviceForceEnabled });\n        return this.isAppValid && (this.isDeviceEnabled || this.deviceForceEnabled);\n    }\n    canWrite() {\n        return this.isAppValid;\n    }\n    checkIsDeviceEnabled() {\n        const deviceInfo = this.device.getInfo(this.options);\n        return this.api.getDeviceStatus(deviceInfo).then((status) => {\n            this.isAppValid = status.isAppValid;\n            this.isDeviceEnabled = status.isDeviceEnabled;\n        }, () => {\n        });\n    }\n    setDeviceForceEnabled(state) {\n        this.deviceForceEnabled = state;\n    }\n}\nexports.StorageGuard = StorageGuard;\n"],"names":["root","factory","exports","module","define","amd","self","Object","defineProperty","value","StorageGuard","constructor","api","device","logger","options","this","deviceForceEnabled","isAppValid","isDeviceEnabled","checkIsDeviceEnabled","setInterval","bind","canProcess","log","canWrite","deviceInfo","getInfo","getDeviceStatus","then","status","setDeviceForceEnabled","state"],"sourceRoot":""}