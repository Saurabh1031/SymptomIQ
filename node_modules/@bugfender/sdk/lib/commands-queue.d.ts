import { LogEntry, LogLevel } from '@bugfender/common';
import { ICallInfoFactory } from './call-info-factory';
import { StorageWriterHub } from './storage-writer.hub';
import { ITimer } from './timer';
import { NullableDeviceKeyValue } from './types/device';
import { IssueType } from './types/issue';
import { IUUIDFactory } from './uuid-factory';
export declare class CommandsQueue {
    private readonly callInfoFactory;
    private readonly timer;
    private readonly uuidFactory;
    private queue;
    private storageDeferred;
    constructor(callInfoFactory: ICallInfoFactory, timer: ITimer, uuidFactory: IUUIDFactory);
    init(storage: StorageWriterHub): void;
    private handleCommand;
    private add;
    addIssue(issueType: IssueType, title: string, text: string): Promise<string>;
    addLogEntry(log: LogEntry): void;
    addLogMessage(level: LogLevel, parameters: unknown[]): void;
    forceSendOnce(): void;
    setDeviceKey(key: string, value: NullableDeviceKeyValue): void;
}
