import { DeviceKeyValue } from '@bugfender/common';
import { IDeviceInfo, NullableDeviceKeyValue } from './types/device';
import { IUUIDFactory } from './uuid-factory';
import { IBrowser } from './browser';
import { ISDKPrivateOptions } from './types/sdk-options';
export interface IDevice {
    getDeviceData(): Record<string, DeviceKeyValue>;
    getInfo(options: ISDKPrivateOptions): IDeviceInfo;
    getUDID(): string;
    setDeviceKey(key: string, value: NullableDeviceKeyValue): void;
}
export declare class Device implements IDevice {
    protected browser: IBrowser;
    protected localStorage: Storage;
    protected sdkVersion: number;
    protected uuidFactory: IUUIDFactory;
    constructor(browser: IBrowser, localStorage: Storage, sdkVersion: number, uuidFactory: IUUIDFactory);
    getDeviceData(): Record<string, DeviceKeyValue>;
    getInfo(options: ISDKPrivateOptions): IDeviceInfo;
    getUDID(): string;
    setDeviceKey(key: string, value: NullableDeviceKeyValue): void;
}
