import { DeviceKeyValue, LogEntryShort } from '@bugfender/common';
import { IDeviceInfo, NullableDeviceKeyValue } from './types/device';
import { ISession } from './types/session';
import { IssueType } from './types/issue';
import { HttpClient } from './http-client';
export interface IDeviceStatus {
    isAppValid: boolean;
    isDeviceEnabled: boolean;
}
export interface IIssueInfo {
    uuid: string;
    issueURL: string;
}
export interface IApiClient {
    getDeviceStatus(deviceInfo: IDeviceInfo): Promise<IDeviceStatus>;
    sendSession(session: ISession): Promise<ISession>;
    sendLogs(sessionId: number, logs: LogEntryShort[]): Promise<void>;
    sendIssue(uuid: string, issueURL: string, title: string, text: string, type: IssueType, sessionId: number): Promise<IIssueInfo>;
    setDeviceKey(deviceId: string, key: string, value: NullableDeviceKeyValue): Promise<void>;
}
export declare class ApiClient implements IApiClient {
    private readonly appKey;
    private readonly http;
    constructor(appKey: string, http: HttpClient);
    getDeviceStatus(deviceInfo: IDeviceInfo): Promise<IDeviceStatus>;
    sendSession(session: ISession): Promise<ISession>;
    sendLogs(sessionId: number, logs: LogEntryShort[]): Promise<void>;
    sendIssue(uuid: string, issueURL: string, title: string, text: string, type: IssueType, sessionId: number): Promise<IIssueInfo>;
    setDeviceKey(deviceId: string, key: string, value: DeviceKeyValue): Promise<void>;
}
