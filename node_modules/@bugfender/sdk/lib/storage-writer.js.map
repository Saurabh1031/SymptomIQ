{"version":3,"file":"storage-writer.js","mappings":"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","sources":["webpack://@bugfender/sdk/webpack/universalModuleDefinition","webpack://@bugfender/sdk/webpack/startup","webpack://@bugfender/sdk/./src/storage-writer.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@bugfender/sdk\"] = factory();\n\telse\n\t\troot[\"@bugfender/sdk\"] = factory();\n})(self, () => {\nreturn ","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[5041](0, __webpack_exports__);\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StorageWriter = void 0;\nclass StorageWriter {\n    constructor(deviceKeysTable, issuesTable, logFactory, logsTable) {\n        this.deviceKeysTable = deviceKeysTable;\n        this.issuesTable = issuesTable;\n        this.logFactory = logFactory;\n        this.logsTable = logsTable;\n        this.isClearingSpace = false;\n        this.logsQueue = [];\n    }\n    handleMessage(msg) {\n        return __awaiter(this, void 0, void 0, function* () {\n            switch (msg.type) {\n                case 'device-key':\n                    return this.addDeviceKey(msg.data.key, msg.data.value, msg.data.callInfo, msg.data.time);\n                case 'init': {\n                    this.options = msg.data.options;\n                    this.sessionUUID = msg.data.sessionUUID;\n                    break;\n                }\n                case 'issue':\n                    return this.addIssue(msg.data.type, msg.data.title, msg.data.text, msg.data.uuid, msg.data.callInfo, msg.data.time);\n                case 'log-entry':\n                    return this.addLogEntry(msg.data.log, msg.data.callInfo, msg.data.time);\n            }\n        });\n    }\n    addDeviceKey(key, value, callInfo, time) {\n        this.deviceKeysTable.add({\n            sessionUUID: this.sessionUUID,\n            data: { key, value },\n        });\n        this.addLog(this.logFactory.createFromDeviceKey(key, value, callInfo, time));\n    }\n    addLog(log) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const entry = {\n                sessionUUID: this.sessionUUID,\n                data: log,\n            };\n            if (this.isClearingSpace) {\n                this.logsQueue.push(entry);\n            }\n            else {\n                try {\n                    yield this.logsTable.add(entry);\n                }\n                catch (err) {\n                    if (this.isQuotaExceededError(err)) {\n                        this.logsQueue.push(entry);\n                        this.isClearingSpace = true;\n                        yield this.logsTable.deleteOldLogs(this.sessionUUID);\n                        yield this.processLogsQueue();\n                        this.isClearingSpace = false;\n                    }\n                }\n            }\n        });\n    }\n    addLogEntry(log, callInfo, time) {\n        this.addLog(this.logFactory.createFromEntry(log, callInfo, time));\n    }\n    addIssue(type, title, text, uuid, callInfo, time) {\n        this.issuesTable.add({\n            sessionUUID: this.sessionUUID,\n            data: { title, text, type, uuid },\n        });\n        this.addLog(this.logFactory.createFromIssue(uuid, callInfo, time));\n    }\n    isQuotaExceededError(err) {\n        var _a;\n        return ((err.name === 'QuotaExceededError') ||\n            (((_a = err.inner) === null || _a === void 0 ? void 0 : _a.name) === 'QuotaExceededError'));\n    }\n    processLogsQueue() {\n        return __awaiter(this, void 0, void 0, function* () {\n            while (this.logsQueue.length > 0) {\n                const entry = this.logsQueue[0];\n                try {\n                    yield this.logsTable.add(entry);\n                    this.logsQueue.shift();\n                }\n                catch (err) {\n                    if (this.isQuotaExceededError(err)) {\n                        yield this.logsTable.deleteOldLogs(this.sessionUUID);\n                    }\n                }\n            }\n        });\n    }\n}\nexports.StorageWriter = StorageWriter;\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_exports__","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","StorageWriter","constructor","deviceKeysTable","issuesTable","logFactory","logsTable","isClearingSpace","logsQueue","handleMessage","msg","type","addDeviceKey","data","key","callInfo","time","options","sessionUUID","addIssue","title","text","uuid","addLogEntry","log","add","addLog","createFromDeviceKey","entry","push","err","isQuotaExceededError","deleteOldLogs","processLogsQueue","createFromEntry","createFromIssue","_a","name","inner","length","shift"],"sourceRoot":""}