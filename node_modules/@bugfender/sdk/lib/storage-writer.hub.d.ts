import { PrintToConsole } from '@bugfender/common';
import { IUUIDFactory } from './uuid-factory';
import { ISDKPrivateOptions } from './types/sdk-options';
import { IChannel } from './channel';
import { IDevice } from './device';
import { StorageWriterSanitizer } from './storage-writer.sanitizer';
import { StorageWriterMessage } from './storage-writer';
import { IStorageGuard } from './storage-guard';
import { ICurrentSession } from './current-session';
import { IStorageWriterHandler } from './storage-writer.handler';
import { AddIssueCommand, AddLogEntryCommand, AddLogMessageCommand, SetDeviceKeyCommand } from './commands';
import { EventPrinter } from './browser-integration/event.printer';
export declare class StorageWriterHub {
    protected channel: IChannel;
    protected device: IDevice;
    protected handler: IStorageWriterHandler;
    protected eventPrinter: EventPrinter;
    protected options: ISDKPrivateOptions;
    protected printToConsole: PrintToConsole;
    protected session: ICurrentSession;
    protected storageGuard: IStorageGuard;
    protected uuidFactory: IUUIDFactory;
    protected window: Window;
    protected sanitizer: StorageWriterSanitizer;
    constructor(channel: IChannel, device: IDevice, handler: IStorageWriterHandler, eventPrinter: EventPrinter, options: ISDKPrivateOptions, printToConsole: PrintToConsole, session: ICurrentSession, storageGuard: IStorageGuard, uuidFactory: IUUIDFactory, window: Window);
    init(options: ISDKPrivateOptions): void;
    protected postMessage(message: StorageWriterMessage, checkStorageGuard?: boolean): void;
    addDeviceKey(cmd: SetDeviceKeyCommand): void;
    addLogEntry(cmd: AddLogEntryCommand, printLog?: boolean): void;
    private isJsEventLogEntry;
    private mapToLogEntryText;
    addLogMessage(cmd: AddLogMessageCommand): void;
    addIssue(cmd: AddIssueCommand): void;
    forceSendOnce(): void;
}
