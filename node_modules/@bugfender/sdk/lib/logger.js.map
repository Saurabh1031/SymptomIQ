{"version":3,"file":"logger.js","mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAQ,kBAAoBD,IAE5BD,EAAK,kBAAoBC,GAC1B,CATD,CASGK,MAAM,IACT,gDCTAC,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQQ,WAAaR,EAAQS,mBAAgB,EAC7C,MAAMA,EACFC,YAAYC,EAASC,GACjBC,KAAKF,QAAUA,EACfE,KAAKD,IAAMA,CACf,CACAE,MAAMC,EAAKC,GAEPD,EAAM,WADMF,KAAKD,IAAM,IAAIC,KAAKD,QAAU,KACnBG,IACnBC,EACAH,KAAKF,QAAQM,IAAIF,EAAKC,GAGtBH,KAAKF,QAAQM,IAAIF,EAEzB,CACAG,UAAUN,GACN,OAAO,IAAIH,EAAcI,KAAKF,QAASC,EAC3C,CACAK,IAAIF,EAAKC,GAELD,EAAM,WADMF,KAAKD,IAAM,IAAIC,KAAKD,QAAU,KACnBG,IACnBC,EACAH,KAAKF,QAAQM,IAAIF,EAAKC,GAGtBH,KAAKF,QAAQM,IAAIF,EAEzB,EAEJf,EAAQS,cAAgBA,EACxB,MAAMD,EACFM,QAEA,CACAI,YACI,OAAO,IAAIV,CACf,CACAS,MAEA,EAEJjB,EAAQQ,WAAaA,SDlCrB","sources":["webpack://@bugfender/sdk/webpack/universalModuleDefinition","webpack://@bugfender/sdk/./src/logger.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@bugfender/sdk\"] = factory();\n\telse\n\t\troot[\"@bugfender/sdk\"] = factory();\n})(self, () => {\nreturn ","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoopLogger = exports.ConsoleLogger = void 0;\nclass ConsoleLogger {\n    constructor(console, tag) {\n        this.console = console;\n        this.tag = tag;\n    }\n    error(msg, data) {\n        const tag = this.tag ? `[${this.tag}] ` : '';\n        msg = `[BF-SDK]${tag}${msg}`;\n        if (data) {\n            this.console.log(msg, data);\n        }\n        else {\n            this.console.log(msg);\n        }\n    }\n    getTagged(tag) {\n        return new ConsoleLogger(this.console, tag);\n    }\n    log(msg, data) {\n        const tag = this.tag ? `[${this.tag}] ` : '';\n        msg = `[BF-SDK]${tag}${msg}`;\n        if (data) {\n            this.console.log(msg, data);\n        }\n        else {\n            this.console.log(msg);\n        }\n    }\n}\nexports.ConsoleLogger = ConsoleLogger;\nclass NoopLogger {\n    error() {\n        return;\n    }\n    getTagged() {\n        return new NoopLogger();\n    }\n    log() {\n        return;\n    }\n}\nexports.NoopLogger = NoopLogger;\n"],"names":["root","factory","exports","module","define","amd","self","Object","defineProperty","value","NoopLogger","ConsoleLogger","constructor","console","tag","this","error","msg","data","log","getTagged"],"sourceRoot":""}