import { LogEntry, LogLevel } from '@bugfender/common';
import { Time } from './timer';
import { NullableDeviceKeyValue } from './types/device';
import { ICallInfo } from './types/error';
import { IssueType } from './types/issue';
import { Deferred } from './utils';
export declare enum CommandType {
    AddIssue = "add-issue",
    AddLogEntry = "add-log-entry",
    AddLogMessage = "add-log-message",
    ForceSendOnce = "force-send-once",
    SetDeviceKey = "set-device-key"
}
export interface AddIssueCommand {
    type: CommandType.AddIssue;
    issueType: IssueType;
    title: string;
    text: string;
    uuid: string;
    callInfo: ICallInfo;
    url: Deferred<string>;
    time: Time;
}
export interface AddLogEntryCommand {
    type: CommandType.AddLogEntry;
    log: LogEntry;
    callInfo: ICallInfo;
    time: Time;
}
export interface AddLogMessageCommand {
    type: CommandType.AddLogMessage;
    level: LogLevel;
    parameters: unknown[];
    callInfo: ICallInfo;
    time: Time;
}
export interface ForceSendOnceCommand {
    type: CommandType.ForceSendOnce;
}
export interface SetDeviceKeyCommand {
    type: CommandType.SetDeviceKey;
    key: string;
    value: NullableDeviceKeyValue;
    callInfo: ICallInfo;
    time: Time;
}
export type Command = AddIssueCommand | AddLogEntryCommand | AddLogMessageCommand | ForceSendOnceCommand | SetDeviceKeyCommand;
