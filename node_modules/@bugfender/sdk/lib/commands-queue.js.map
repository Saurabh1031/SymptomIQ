{"version":3,"file":"commands-queue.js","mappings":";CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAQ,kBAAoBD,IAE5BD,EAAK,kBAAoBC,GAC1B,CATD,CASGK,MAAM,IACT,uCCNA,IAAWC,EAHXC,OAAOC,eAAeP,EAAS,aAAc,CAAEQ,OAAO,IACtDR,EAAQK,iBAAc,GAEXA,EAMML,EAAQK,cAAgBL,EAAQK,YAAc,CAAC,IALtC,SAAI,YAC1BA,EAAyB,YAAI,gBAC7BA,EAA2B,cAAI,kBAC/BA,EAA2B,cAAI,kBAC/BA,EAA0B,aAAI,+BCRlCC,OAAOC,eAAeP,EAAS,aAAc,CAAEQ,OAAO,IACtDR,EAAQS,aAAeT,EAAQU,SAAWV,EAAQW,kBAAoBX,EAAQY,qBAAuBZ,EAAQa,sBAAwBb,EAAQc,oBAAiB,EA2B9Jd,EAAQc,eA1BR,WACI,MAAMC,EAAW,CACbC,aAAa,EACbC,YAAY,EACZC,YAAY,GAoBhB,OAlBAH,EAASI,QAAU,IAAIC,SAAQ,CAACC,EAASC,KACrCP,EAASM,QAAWb,IAChB,MAAMe,EAAWR,EACjBQ,EAASP,aAAc,EACvBO,EAASN,YAAa,EACtBM,EAASL,YAAa,EACtBK,EAASf,MAAQA,EACjBa,EAAQb,EAAM,EAElBO,EAASO,OAAUE,IACf,MAAMC,EAAWV,EACjBU,EAAST,aAAc,EACvBS,EAASR,YAAa,EACtBQ,EAASP,YAAa,EACtBO,EAASC,IAAMF,EACfF,EAAOE,EAAO,CACjB,IAEET,CACX,EAeAf,EAAQa,sBAbR,SAA+Bc,GAC3B,OAAO,WACH,OAAO,SAAUC,EAAGC,EAAaC,GAC7B,MAAMC,EAASD,EAAWtB,MAC1BsB,EAAWtB,MAAQ,WAIf,OAHKmB,EAAMK,IAAIH,IACXF,EAAMM,IAAIJ,EAAaE,EAAOG,MAAMC,OAEjCR,EAAMS,IAAIP,EACrB,CACJ,CACJ,CACJ,EAEA,MAAMjB,UAA6ByB,MAC/BC,YAAYC,GACRC,MAAM,qBAAqBC,KAAKC,UAAUH,KAC9C,EAEJvC,EAAQY,qBAAuBA,EAgB/BZ,EAAQW,kBAfR,MACI2B,YAAYK,GACRR,KAAKQ,KAAOA,EACZR,KAAKS,OAAS,IAAIC,GACtB,CACAC,IAAIC,EAAIC,GACAb,KAAKS,OAAOZ,IAAIe,IAChBE,aAAad,KAAKS,OAAOR,IAAIW,IAEjCZ,KAAKS,OAAOX,IAAIc,EAAIG,YAAW,KAC3BF,IACAb,KAAKS,OAAOO,OAAOJ,EAAG,GACvBZ,KAAKQ,MACZ,GAsCJ3C,EAAQU,SAnCR,SAAkBqC,GACd,IAAIK,EAAWL,EACf,GAAIK,aAAoBC,SAAWD,EAASE,GACxC,MAAO,YAAcF,EAASE,GAAK,KAEvC,MAAMC,EAAQ,GACd,KAAOH,GAAYA,aAAoBC,SAAS,CAC5C,MAAMG,EAASJ,EACf,IAAIK,EAAuB,EACvBC,GAAkB,EAClBC,EAAUH,EAAOI,gBACrB,KAAOD,GACCA,EAAQE,WAAaC,KAAKC,oBAC1BJ,EAAQK,WAAaR,EAAOQ,UAC5BP,IAEJE,EAAUA,EAAQC,gBAGtB,IADAD,EAAUH,EAAOS,YACVN,GAAS,CACZ,GAAIA,EAAQK,WAAaR,EAAOQ,SAAU,CACtCN,GAAkB,EAClB,KACJ,CACAC,EAAUA,EAAQM,WACtB,CACA,MAAMC,EAASV,EAAOU,OAASV,EAAOU,OAAS,IAAM,GAC/CC,EAAMV,GAAwBC,EAC9B,IAAID,EAAuB,KAC3B,GACNF,EAAMa,KAAKF,EAASV,EAAOa,UAAYF,GACvCf,EAAWI,EAAOc,UACtB,CACA,OAAOf,EAAMgB,OAAS,IAAMhB,EAAMiB,UAAUC,KAAK,KAAO,EAC5D,EAMAzE,EAAQS,aAJR,SAAsBiE,GAClB,IAAIC,EACJ,OAAsH,QAA9GA,EAAKC,SAASC,SAASH,EAAOE,SAAU,KAAME,YAAYC,wBAAyB,MAAMC,uBAAoC,IAAPL,EAAgBA,OAAKM,CACvJ,ICxGIC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBH,IAAjBI,EACH,OAAOA,EAAarF,QAGrB,IAAIC,EAASiF,EAAyBE,GAAY,CAGjDpF,QAAS,CAAC,GAOX,OAHAsF,EAAoBF,GAAUnF,EAAQA,EAAOD,QAASmF,GAG/ClF,EAAOD,OACf,8BCrBAM,OAAOC,eAAeP,EAAS,aAAc,CAAEQ,OAAO,IACtDR,EAAQuF,mBAAgB,EACxB,MAAMC,EAAa,EAAQ,MACrBC,EAAU,EAAQ,MA6FxBzF,EAAQuF,cA5FR,MACIjD,YAAYoD,EAAiBC,EAAOC,GAChCzD,KAAKuD,gBAAkBA,EACvBvD,KAAKwD,MAAQA,EACbxD,KAAKyD,YAAcA,EACnBzD,KAAK0D,MAAQ,GACb1D,KAAK2D,iBAAkB,EAAIL,EAAQ3E,iBACvC,CACAiF,KAAKC,GACD7D,KAAK2D,gBAAgBzE,QAAQ2E,GAC7B7D,KAAK0D,MAAMI,SAAQC,IACf/D,KAAKgE,cAAcD,EAAI,GAE/B,CACAC,cAAcD,GACV,GAAK/D,KAAK2D,gBAAgB5E,WAG1B,OAAQgF,EAAIE,MACR,KAAKZ,EAAWnF,YAAYgG,SACxBlE,KAAK2D,gBAAgBtF,MAAM8F,SAASJ,GACpC,MACJ,KAAKV,EAAWnF,YAAYkG,YACxBpE,KAAK2D,gBAAgBtF,MAAMgG,YAAYN,GACvC,MACJ,KAAKV,EAAWnF,YAAYoG,cACxBtE,KAAK2D,gBAAgBtF,MAAMkG,cAAcR,GACzC,MACJ,KAAKV,EAAWnF,YAAYsG,cACxBxE,KAAK2D,gBAAgBtF,MAAMoG,gBAC3B,MACJ,KAAKpB,EAAWnF,YAAYwG,aACxB1E,KAAK2D,gBAAgBtF,MAAMsG,aAAaZ,GACxC,MACJ,QACI,MAAM,IAAIT,EAAQ7E,qBAAqBsF,GAEnD,CACAa,IAAIb,GACI/D,KAAK2D,gBAAgB9E,YACrBmB,KAAKgE,cAAcD,GAGnB/D,KAAK0D,MAAMzB,KAAK8B,EAExB,CACAI,SAASU,EAAWC,EAAOC,GACvB,MAAMC,GAAM,EAAI1B,EAAQ3E,kBAWxB,OAVAqB,KAAK4E,IAAI,CACLX,KAAMZ,EAAWnF,YAAYgG,SAC7BW,YACAC,QACAC,OACAE,KAAMjF,KAAKyD,YAAYyB,SACvBC,SAAUnF,KAAKuD,gBAAgB2B,SAC/BF,MACAI,KAAMpF,KAAKwD,MAAM6B,YAEdL,EAAIhG,OACf,CACAqF,YAAYiB,GACRtF,KAAK4E,IAAI,CACLX,KAAMZ,EAAWnF,YAAYkG,YAC7BkB,MACAH,SAAUnF,KAAKuD,gBAAgB2B,SAC/BE,KAAMpF,KAAKwD,MAAM6B,WAEzB,CACAd,cAAcgB,EAAOC,GACjBxF,KAAK4E,IAAI,CACLX,KAAMZ,EAAWnF,YAAYoG,cAC7BiB,QACAC,aACAL,SAAUnF,KAAKuD,gBAAgB2B,SAC/BE,KAAMpF,KAAKwD,MAAM6B,WAEzB,CACAZ,gBACIzE,KAAK4E,IAAI,CACLX,KAAMZ,EAAWnF,YAAYsG,eAErC,CACAiB,aAAaC,EAAKrH,GACd2B,KAAK4E,IAAI,CACLX,KAAMZ,EAAWnF,YAAYwG,aAC7BgB,MACArH,QACA8G,SAAUnF,KAAKuD,gBAAgB2B,SAC/BE,KAAMpF,KAAKwD,MAAM6B,WAEzB,UJrFJ","sources":["webpack://@bugfender/sdk/webpack/universalModuleDefinition","webpack://@bugfender/sdk/./src/commands.ts","webpack://@bugfender/sdk/./src/utils.ts","webpack://@bugfender/sdk/webpack/bootstrap","webpack://@bugfender/sdk/./src/commands-queue.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@bugfender/sdk\"] = factory();\n\telse\n\t\troot[\"@bugfender/sdk\"] = factory();\n})(self, () => {\nreturn ","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommandType = void 0;\nvar CommandType;\n(function (CommandType) {\n    CommandType[\"AddIssue\"] = \"add-issue\";\n    CommandType[\"AddLogEntry\"] = \"add-log-entry\";\n    CommandType[\"AddLogMessage\"] = \"add-log-message\";\n    CommandType[\"ForceSendOnce\"] = \"force-send-once\";\n    CommandType[\"SetDeviceKey\"] = \"set-device-key\";\n})(CommandType = exports.CommandType || (exports.CommandType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getElByXPath = exports.getXPath = exports.DebounceByElement = exports.UnreachableCaseError = exports.CacheDecoratorFactory = exports.createDeferred = void 0;\nfunction createDeferred() {\n    const deferred = {\n        isFulfilled: false,\n        isRejected: false,\n        isResolved: false,\n    };\n    deferred.promise = new Promise((resolve, reject) => {\n        deferred.resolve = (value) => {\n            const resolved = deferred;\n            resolved.isFulfilled = true;\n            resolved.isRejected = false;\n            resolved.isResolved = true;\n            resolved.value = value;\n            resolve(value);\n        };\n        deferred.reject = (reason) => {\n            const rejected = deferred;\n            rejected.isFulfilled = true;\n            rejected.isRejected = true;\n            rejected.isResolved = false;\n            rejected.err = reason;\n            reject(reason);\n        };\n    });\n    return deferred;\n}\nexports.createDeferred = createDeferred;\nfunction CacheDecoratorFactory(cache) {\n    return function CacheDecorator() {\n        return function (_, propertyKey, descriptor) {\n            const method = descriptor.value;\n            descriptor.value = function () {\n                if (!cache.has(propertyKey)) {\n                    cache.set(propertyKey, method.apply(this));\n                }\n                return cache.get(propertyKey);\n            };\n        };\n    };\n}\nexports.CacheDecoratorFactory = CacheDecoratorFactory;\nclass UnreachableCaseError extends Error {\n    constructor(val) {\n        super(`Unreachable case: ${JSON.stringify(val)}`);\n    }\n}\nexports.UnreachableCaseError = UnreachableCaseError;\nclass DebounceByElement {\n    constructor(wait) {\n        this.wait = wait;\n        this.timers = new Map();\n    }\n    run(el, cb) {\n        if (this.timers.has(el)) {\n            clearTimeout(this.timers.get(el));\n        }\n        this.timers.set(el, setTimeout(() => {\n            cb();\n            this.timers.delete(el);\n        }, this.wait));\n    }\n}\nexports.DebounceByElement = DebounceByElement;\nfunction getXPath(el) {\n    let nodeElem = el;\n    if (nodeElem instanceof Element && nodeElem.id) {\n        return `//*[@id=\"` + nodeElem.id + `\"]`;\n    }\n    const parts = [];\n    while (nodeElem && nodeElem instanceof Element) {\n        const currEl = nodeElem;\n        let nbOfPreviousSiblings = 0;\n        let hasNextSiblings = false;\n        let sibling = currEl.previousSibling;\n        while (sibling) {\n            if (sibling.nodeType !== Node.DOCUMENT_TYPE_NODE &&\n                sibling.nodeName === currEl.nodeName) {\n                nbOfPreviousSiblings++;\n            }\n            sibling = sibling.previousSibling;\n        }\n        sibling = currEl.nextSibling;\n        while (sibling) {\n            if (sibling.nodeName === currEl.nodeName) {\n                hasNextSiblings = true;\n                break;\n            }\n            sibling = sibling.nextSibling;\n        }\n        const prefix = currEl.prefix ? currEl.prefix + ':' : '';\n        const nth = nbOfPreviousSiblings || hasNextSiblings\n            ? `[${nbOfPreviousSiblings + 1}]`\n            : '';\n        parts.push(prefix + currEl.localName + nth);\n        nodeElem = currEl.parentNode;\n    }\n    return parts.length ? '/' + parts.reverse().join('/') : '';\n}\nexports.getXPath = getXPath;\nfunction getElByXPath(xpath) {\n    var _a;\n    return (_a = document.evaluate(xpath, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue) !== null && _a !== void 0 ? _a : undefined;\n}\nexports.getElByXPath = getElByXPath;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommandsQueue = void 0;\nconst commands_1 = require(\"./commands\");\nconst utils_1 = require(\"./utils\");\nclass CommandsQueue {\n    constructor(callInfoFactory, timer, uuidFactory) {\n        this.callInfoFactory = callInfoFactory;\n        this.timer = timer;\n        this.uuidFactory = uuidFactory;\n        this.queue = [];\n        this.storageDeferred = (0, utils_1.createDeferred)();\n    }\n    init(storage) {\n        this.storageDeferred.resolve(storage);\n        this.queue.forEach(cmd => {\n            this.handleCommand(cmd);\n        });\n    }\n    handleCommand(cmd) {\n        if (!this.storageDeferred.isResolved) {\n            return;\n        }\n        switch (cmd.type) {\n            case commands_1.CommandType.AddIssue:\n                this.storageDeferred.value.addIssue(cmd);\n                break;\n            case commands_1.CommandType.AddLogEntry:\n                this.storageDeferred.value.addLogEntry(cmd);\n                break;\n            case commands_1.CommandType.AddLogMessage:\n                this.storageDeferred.value.addLogMessage(cmd);\n                break;\n            case commands_1.CommandType.ForceSendOnce:\n                this.storageDeferred.value.forceSendOnce();\n                break;\n            case commands_1.CommandType.SetDeviceKey:\n                this.storageDeferred.value.addDeviceKey(cmd);\n                break;\n            default:\n                throw new utils_1.UnreachableCaseError(cmd);\n        }\n    }\n    add(cmd) {\n        if (this.storageDeferred.isFulfilled) {\n            this.handleCommand(cmd);\n        }\n        else {\n            this.queue.push(cmd);\n        }\n    }\n    addIssue(issueType, title, text) {\n        const url = (0, utils_1.createDeferred)();\n        this.add({\n            type: commands_1.CommandType.AddIssue,\n            issueType,\n            title,\n            text,\n            uuid: this.uuidFactory.create(),\n            callInfo: this.callInfoFactory.create(),\n            url,\n            time: this.timer.getTime(),\n        });\n        return url.promise;\n    }\n    addLogEntry(log) {\n        this.add({\n            type: commands_1.CommandType.AddLogEntry,\n            log,\n            callInfo: this.callInfoFactory.create(),\n            time: this.timer.getTime(),\n        });\n    }\n    addLogMessage(level, parameters) {\n        this.add({\n            type: commands_1.CommandType.AddLogMessage,\n            level,\n            parameters,\n            callInfo: this.callInfoFactory.create(),\n            time: this.timer.getTime(),\n        });\n    }\n    forceSendOnce() {\n        this.add({\n            type: commands_1.CommandType.ForceSendOnce\n        });\n    }\n    setDeviceKey(key, value) {\n        this.add({\n            type: commands_1.CommandType.SetDeviceKey,\n            key,\n            value,\n            callInfo: this.callInfoFactory.create(),\n            time: this.timer.getTime(),\n        });\n    }\n}\nexports.CommandsQueue = CommandsQueue;\n"],"names":["root","factory","exports","module","define","amd","self","CommandType","Object","defineProperty","value","getElByXPath","getXPath","DebounceByElement","UnreachableCaseError","CacheDecoratorFactory","createDeferred","deferred","isFulfilled","isRejected","isResolved","promise","Promise","resolve","reject","resolved","reason","rejected","err","cache","_","propertyKey","descriptor","method","has","set","apply","this","get","Error","constructor","val","super","JSON","stringify","wait","timers","Map","run","el","cb","clearTimeout","setTimeout","delete","nodeElem","Element","id","parts","currEl","nbOfPreviousSiblings","hasNextSiblings","sibling","previousSibling","nodeType","Node","DOCUMENT_TYPE_NODE","nodeName","nextSibling","prefix","nth","push","localName","parentNode","length","reverse","join","xpath","_a","document","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","undefined","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","CommandsQueue","commands_1","utils_1","callInfoFactory","timer","uuidFactory","queue","storageDeferred","init","storage","forEach","cmd","handleCommand","type","AddIssue","addIssue","AddLogEntry","addLogEntry","AddLogMessage","addLogMessage","ForceSendOnce","forceSendOnce","SetDeviceKey","addDeviceKey","add","issueType","title","text","url","uuid","create","callInfo","time","getTime","log","level","parameters","setDeviceKey","key"],"sourceRoot":""}