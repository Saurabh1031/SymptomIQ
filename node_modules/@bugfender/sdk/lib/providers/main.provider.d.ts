import { PrintToConsole, RegisterErrorHandler } from '@bugfender/common';
import { OverrideConsoleMethods } from '../browser-integration/override-console-methods';
import { RegisterBrowserEventsHandler } from '../browser-integration/register-browser-events-handler';
import { RegisterUIEventsHandler } from '../browser-integration/register-ui-events-handler';
import { IChannel } from '../channel';
import { Connection } from '../connection';
import { ICurrentSession } from '../current-session';
import { IDevice } from '../device';
import { ILogger } from '../logger';
import { IResetStorage } from '../reset-storage';
import { IStorageGuard } from '../storage-guard';
import { StorageProcessor } from '../storage-processor';
import { StorageWriterHub } from '../storage-writer.hub';
import { ISDKPrivateOptions } from '../types/sdk-options';
import { Deferred } from '../utils';
import { IPreInitProvider } from './pre-init.provider';
export interface IMainProvider {
    getChannel(): Promise<IChannel>;
    getConnection(): Connection;
    getCurrentSession(): Promise<ICurrentSession>;
    getDevice(): IDevice;
    getInitDeferred(): Deferred<void>;
    getLogger(tag?: string): ILogger;
    getOverrideConsoleMethods(): OverrideConsoleMethods;
    getPrintToConsole(): PrintToConsole;
    getRegisterBrowserEventsHandler(): RegisterBrowserEventsHandler;
    getRegisterErrorHandler(): RegisterErrorHandler;
    getRegisterUIEventsHandler(): RegisterUIEventsHandler;
    getResetStorage(): Promise<IResetStorage>;
    getStorageGuard(): IStorageGuard;
    getStorageProcessor(): Promise<StorageProcessor>;
    getStorageWriterHub(): Promise<StorageWriterHub>;
}
export declare class MainProvider implements IMainProvider {
    private readonly options;
    private readonly preInitProvider;
    private readonly sdkUserAgent;
    private readonly version;
    private apiFeatures;
    private commandsQueue;
    private console;
    private operationModes;
    private uuidFactory;
    private window;
    constructor(options: ISDKPrivateOptions, preInitProvider: IPreInitProvider, sdkUserAgent: string, version: number);
    private getApiClient;
    getChannel(): Promise<IChannel>;
    getConnection(): Connection;
    getCurrentSession(): Promise<ICurrentSession>;
    private getDatabase;
    getDevice(): IDevice;
    getInitDeferred(): Deferred<void>;
    private getDeviceKeysTable;
    private getIssuesTable;
    getLogger(tag?: string): ILogger;
    private getLogsTable;
    getOverrideConsoleMethods(): OverrideConsoleMethods;
    getPrintToConsole(): PrintToConsole;
    getRegisterBrowserEventsHandler(): RegisterBrowserEventsHandler;
    getRegisterErrorHandler(): RegisterErrorHandler;
    getRegisterUIEventsHandler(): RegisterUIEventsHandler;
    getResetStorage(): Promise<IResetStorage>;
    getStorageGuard(): IStorageGuard;
    getStorageProcessor(): Promise<StorageProcessor>;
    getStorageWriterHub(): Promise<StorageWriterHub>;
    private getLocalStorage;
    private getSessionStorage;
    private getSessionsTable;
}
