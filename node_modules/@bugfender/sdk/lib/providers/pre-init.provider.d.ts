import { IBrowser } from '../browser';
import { CommandsQueue } from '../commands-queue';
import { APIFeatureDetection } from '../feature-detection/api-feature-detection';
import { OperationModes } from '../feature-detection/operation-modes';
import { SDKOptionsValidator } from '../sdk-options-validator';
import { UserFeedback } from '../user-feedback';
import { IUUIDFactory } from '../uuid-factory';
type WindowGlobalThis = Window & typeof globalThis;
export interface IPreInitProvider {
    provideAPIFeatureDetection(): APIFeatureDetection;
    provideBrowser(): IBrowser;
    provideCommandsQueue(): CommandsQueue;
    provideOperationModes(): OperationModes;
    provideSDKOptionsValidator(): SDKOptionsValidator;
    provideUserFeedback(): UserFeedback;
    provideUUIDFactory(): IUUIDFactory;
    provideWindow(): WindowGlobalThis;
}
export declare class PreInitProvider implements IPreInitProvider {
    private readonly window;
    constructor(window: WindowGlobalThis);
    provideAPIFeatureDetection(): APIFeatureDetection;
    provideBrowser(): IBrowser;
    provideCommandsQueue(): CommandsQueue;
    provideOperationModes(): OperationModes;
    provideSDKOptionsValidator(): SDKOptionsValidator;
    provideUserFeedback(): UserFeedback;
    provideUUIDFactory(): IUUIDFactory;
    provideWindow(): WindowGlobalThis;
}
export {};
