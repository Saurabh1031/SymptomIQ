import { BugfenderFacade } from "../index";
import { RegisterEventsHandlerBase } from "./register-events-handler.base";
type AnyFunction = (...args: any[]) => any;
type OverrideFnFactory = (originalFn: AnyFunction) => AnyFunction;
/**
 * Registers a global event handler that will trigger Browser Events in Bugfender
 */
export declare class RegisterBrowserEventsHandler extends RegisterEventsHandlerBase {
    protected bugfender: BugfenderFacade;
    protected window: Window;
    constructor(bugfender: BugfenderFacade, window: Window);
    init(): void;
    /**
     * Wrap a given object method with a higher-order function
     *
     * @param object The object that contains the method to be wrapped.
     * @param method Name of method to be wrapped.
     * @param overrideFactory Factory function that returns the function that will override the original method
     */
    protected override(object: Record<string, any>, method: string, overrideFactory: OverrideFnFactory): void;
}
export {};
