import { BugfenderFacade, LogEntry } from "../index";
export interface JsEventLogEntry extends LogEntry {
    tag: "js_event";
    text: string;
    url: string;
}
interface JsEventDOMContentLoaded {
    event: "DOMContentLoaded";
}
interface JsEventHashChange {
    event: "hashchange";
    hash: string;
}
interface JsEventPageLoaded {
    event: "PageLoaded";
    performance: Performance;
}
interface JsEventPopState {
    event: "popstate";
    location: string;
    state: string;
}
interface JsEventPushState {
    event: "pushstate";
    to: string;
    state: string | null;
}
export type JsEventUiType = "keyup" | "click" | "focus" | "blur" | "submit";
export interface JsEventUi {
    event: JsEventUiType;
    url: string;
    xpath: string;
    tag: string;
    id: string;
    text?: string;
    action: string;
}
export type JsEvent = JsEventDOMContentLoaded | JsEventHashChange | JsEventPageLoaded | JsEventPopState | JsEventPushState | JsEventUi;
export declare class RegisterEventsHandlerBase {
    protected bugfender: BugfenderFacade;
    protected window: Window;
    constructor(bugfender: BugfenderFacade, window: Window);
    protected addJsEventLogEntry(event: JsEvent): void;
    protected getURL(): string;
    /**
     * Safely detecting passive events support
     * See: https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#safely_detecting_option_support
     */
    protected supportsPassiveEvents(): boolean;
}
export {};
