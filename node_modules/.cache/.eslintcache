[{"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/index.tsx":"1","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/reportWebVitals.ts":"2","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/App.tsx":"3","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/azure/azureApp.tsx":"4","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/azure/index.ts":"5","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/azure/navigantion.tsx":"6","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/azure/azureRouting.tsx":"7","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/layout/layout.tsx":"8","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/azure/authConfig.tsx":"9","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/azure/azureAuthentication.tsx":"10","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/azure/graphConfig.tsx":"11","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/layout/layout-components.tsx":"12","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/svaasloginloader.tsx":"13","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/routes/index.ts":"14","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/utils/index.ts":"15","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/utils/general.ts":"16","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/utils/location.ts":"17","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/routes/routes.tsx":"18","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/deeplink.config.ts":"19","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/Home.tsx":"20","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/symptoms-duration/symptoms-duration.tsx":"21","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/homescreen/homescreen.tsx":"22","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/medical-history/medical-history.tsx":"23","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/symptoms/symptoms.tsx":"24","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/extra-symptoms/extra-symptoms.tsx":"25","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/outcome/outcome.tsx":"26","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/habits/habits.tsx":"27","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/symptoms-severity/symptoms-severity.tsx":"28","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/cross-symbol.tsx":"29","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/SymptomComponents.tsx":"30","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/SympAnalyzer.tsx":"31","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/symptoms-duration/symp-duration-components.tsx":"32","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/homescreen/homescreen-components.tsx":"33","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/asthama.tsx":"34","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/medical-history/medical-history-components.tsx":"35","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/svaasLoader.tsx":"36","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/diabetis.tsx":"37","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/extra-symptoms/extra-symptoms-components.tsx":"38","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/symptoms/symptoms-components.tsx":"39","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/checkbox/checkbox.tsx":"40","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/outcome/outcome-components.tsx":"41","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/habits/habits-component.tsx":"42","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/symptoms-severity/severity-components.tsx":"43","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/stepper/Stepper.tsx":"44","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/welcome-screen/welcome-screen.tsx":"45","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/leaving-popup/leaving-popup.tsx":"46","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/error-page/error-page.tsx":"47","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/search-bar/search-bar.tsx":"48","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/side-nav/side-nav.tsx":"49","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/index.ts":"50","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/svaas-header/index.ts":"51","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/checkbox/index.ts":"52","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/@services/index.ts":"53","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/loader-screen/index.ts":"54","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/SecondPage.tsx":"55","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/Symptoms.tsx":"56","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/checkbox/checkbox-component.tsx":"57","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/tick.tsx":"58","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/error-page/error-component.tsx":"59","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/welcome-screen/welcome-screen-components.tsx":"60","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/leaving-popup/leaving-popup-component.tsx":"61","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/search-bar/searchbar-components.tsx":"62","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/blueCross.tsx":"63","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/side-nav/side-nav-component.tsx":"64","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/circle-exclamation.tsx":"65","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/bodyache.tsx":"66","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/nausea.tsx":"67","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/fever.tsx":"68","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/running-nose.tsx":"69","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/loose-motions.tsx":"70","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/left-angle.tsx":"71","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/stroke.tsx":"72","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/sore-throat.tsx":"73","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/stomach-pain.tsx":"74","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/heart-disease.tsx":"75","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/arthritis.tsx":"76","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/headache.tsx":"77","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/kidney-disease.tsx":"78","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/hyper-tension.tsx":"79","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/warn.tsx":"80","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/hypo-thyrodism.tsx":"81","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/halfCircle.tsx":"82","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/search-icon.tsx":"83","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/backarrow.tsx":"84","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/Sinusitis.tsx":"85","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/HalfCirclebg.tsx":"86","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/homeIcon.tsx":"87","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/bacteria.tsx":"88","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/doctorIcon.tsx":"89","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/svaas-header/svaas-header.tsx":"90","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/loader-screen/loader-screen.tsx":"91","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/SymptomsAnalyser.tsx":"92","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/@services/common-apis/index.ts":"93","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/svaas-header/svaas-header-component.tsx":"94","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/loader-screen/loader-screen-components.tsx":"95","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/styles/index.ts":"96","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/SymptomsAnalyserSlider.tsx":"97","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/@services/common-apis/common-apis.tsx":"98","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/styles/colors.ts":"99","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/styles/font-styles.ts":"100","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/styles/screen-size.ts":"101","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/RelatedSymptoms.tsx":"102","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/@services/interceptor.ts":"103"},{"size":2114,"mtime":1694516917165,"results":"104","hashOfConfig":"105"},{"size":425,"mtime":1694505214422,"results":"106","hashOfConfig":"105"},{"size":276,"mtime":1694505214410,"results":"107","hashOfConfig":"105"},{"size":915,"mtime":1694505214418,"results":"108","hashOfConfig":"105"},{"size":127,"mtime":1694505214418,"results":"109","hashOfConfig":"105"},{"size":951,"mtime":1694505214418,"results":"110","hashOfConfig":"105"},{"size":1825,"mtime":1696313630037,"results":"111","hashOfConfig":"105"},{"size":1337,"mtime":1697624137152,"results":"112","hashOfConfig":"105"},{"size":677,"mtime":1694516884177,"results":"113","hashOfConfig":"105"},{"size":604,"mtime":1694505214418,"results":"114","hashOfConfig":"105"},{"size":1828,"mtime":1694505214418,"results":"115","hashOfConfig":"105"},{"size":1755,"mtime":1694505214418,"results":"116","hashOfConfig":"105"},{"size":3190,"mtime":1696313630037,"results":"117","hashOfConfig":"105"},{"size":57,"mtime":1694505214422,"results":"118","hashOfConfig":"105"},{"size":87,"mtime":1694505214422,"results":"119","hashOfConfig":"105"},{"size":4436,"mtime":1696313630037,"results":"120","hashOfConfig":"105"},{"size":1720,"mtime":1694505214422,"results":"121","hashOfConfig":"105"},{"size":1442,"mtime":1694505214422,"results":"122","hashOfConfig":"105"},{"size":933,"mtime":1694505214418,"results":"123","hashOfConfig":"105"},{"size":4398,"mtime":1703341038598,"results":"124","hashOfConfig":"105"},{"size":9092,"mtime":1703341038818,"results":"125","hashOfConfig":"105"},{"size":11430,"mtime":1703341038842,"results":"126","hashOfConfig":"105"},{"size":9051,"mtime":1703341038694,"results":"127","hashOfConfig":"105"},{"size":7397,"mtime":1703341038834,"results":"128","hashOfConfig":"105"},{"size":7857,"mtime":1703341038722,"results":"129","hashOfConfig":"105"},{"size":12789,"mtime":1703341038702,"results":"130","hashOfConfig":"105"},{"size":13574,"mtime":1703341038694,"results":"131","hashOfConfig":"105"},{"size":7695,"mtime":1703341038726,"results":"132","hashOfConfig":"105"},{"size":499,"mtime":1694505214414,"results":"133","hashOfConfig":"105"},{"size":10860,"mtime":1694505214418,"results":"134","hashOfConfig":"105"},{"size":6120,"mtime":1703341038614,"results":"135","hashOfConfig":"105"},{"size":3061,"mtime":1694505214418,"results":"136","hashOfConfig":"105"},{"size":4123,"mtime":1694505214418,"results":"137","hashOfConfig":"105"},{"size":691,"mtime":1694505214414,"results":"138","hashOfConfig":"105"},{"size":4207,"mtime":1694505214418,"results":"139","hashOfConfig":"105"},{"size":1713,"mtime":1694505214414,"results":"140","hashOfConfig":"105"},{"size":1635,"mtime":1694505214414,"results":"141","hashOfConfig":"105"},{"size":3643,"mtime":1695879260611,"results":"142","hashOfConfig":"105"},{"size":3697,"mtime":1694505214422,"results":"143","hashOfConfig":"105"},{"size":513,"mtime":1695879260611,"results":"144","hashOfConfig":"105"},{"size":13922,"mtime":1697624061029,"results":"145","hashOfConfig":"105"},{"size":3418,"mtime":1694505214418,"results":"146","hashOfConfig":"105"},{"size":2620,"mtime":1695879260611,"results":"147","hashOfConfig":"105"},{"size":988,"mtime":1694505214418,"results":"148","hashOfConfig":"105"},{"size":1233,"mtime":1703341038694,"results":"149","hashOfConfig":"105"},{"size":1578,"mtime":1703341038622,"results":"150","hashOfConfig":"105"},{"size":1373,"mtime":1703340866540,"results":"151","hashOfConfig":"105"},{"size":5968,"mtime":1695879260611,"results":"152","hashOfConfig":"105"},{"size":2715,"mtime":1694505214418,"results":"153","hashOfConfig":"105"},{"size":1356,"mtime":1695879260611,"results":"154","hashOfConfig":"105"},{"size":42,"mtime":1694505214418,"results":"155","hashOfConfig":"105"},{"size":38,"mtime":1694505214418,"results":"156","hashOfConfig":"105"},{"size":31,"mtime":1694505214410,"results":"157","hashOfConfig":"105"},{"size":43,"mtime":1695879260611,"results":"158","hashOfConfig":"105"},{"size":2354,"mtime":1694505214418,"results":"159","hashOfConfig":"105"},{"size":6719,"mtime":1694505214418,"results":"160","hashOfConfig":"105"},{"size":381,"mtime":1694505214418,"results":"161","hashOfConfig":"105"},{"size":308,"mtime":1694505214414,"results":"162","hashOfConfig":"105"},{"size":1650,"mtime":1695879260611,"results":"163","hashOfConfig":"105"},{"size":1272,"mtime":1694505214422,"results":"164","hashOfConfig":"105"},{"size":1719,"mtime":1695879260611,"results":"165","hashOfConfig":"105"},{"size":3546,"mtime":1697624137152,"results":"166","hashOfConfig":"105"},{"size":343,"mtime":1694505214414,"results":"167","hashOfConfig":"105"},{"size":2829,"mtime":1694505214418,"results":"168","hashOfConfig":"105"},{"size":1170,"mtime":1694505214414,"results":"169","hashOfConfig":"105"},{"size":2282,"mtime":1694505214414,"results":"170","hashOfConfig":"105"},{"size":5510,"mtime":1694505214414,"results":"171","hashOfConfig":"105"},{"size":1003,"mtime":1694505214414,"results":"172","hashOfConfig":"105"},{"size":2811,"mtime":1694505214414,"results":"173","hashOfConfig":"105"},{"size":3480,"mtime":1694505214414,"results":"174","hashOfConfig":"105"},{"size":854,"mtime":1694505214414,"results":"175","hashOfConfig":"105"},{"size":1646,"mtime":1694505214414,"results":"176","hashOfConfig":"105"},{"size":10372,"mtime":1694505214414,"results":"177","hashOfConfig":"105"},{"size":1423,"mtime":1694505214414,"results":"178","hashOfConfig":"105"},{"size":2103,"mtime":1694505214414,"results":"179","hashOfConfig":"105"},{"size":2071,"mtime":1694505214414,"results":"180","hashOfConfig":"105"},{"size":4211,"mtime":1694505214414,"results":"181","hashOfConfig":"105"},{"size":1648,"mtime":1694505214414,"results":"182","hashOfConfig":"105"},{"size":3603,"mtime":1694505214414,"results":"183","hashOfConfig":"105"},{"size":1411,"mtime":1694505214414,"results":"184","hashOfConfig":"105"},{"size":3035,"mtime":1694505214414,"results":"185","hashOfConfig":"105"},{"size":2010,"mtime":1694505214414,"results":"186","hashOfConfig":"105"},{"size":717,"mtime":1694505214414,"results":"187","hashOfConfig":"105"},{"size":274,"mtime":1694505214414,"results":"188","hashOfConfig":"105"},{"size":11081,"mtime":1694505214414,"results":"189","hashOfConfig":"105"},{"size":1036,"mtime":1694505214414,"results":"190","hashOfConfig":"105"},{"size":1889,"mtime":1694505214414,"results":"191","hashOfConfig":"105"},{"size":2655,"mtime":1695879260611,"results":"192","hashOfConfig":"105"},{"size":3097,"mtime":1694505214414,"results":"193","hashOfConfig":"105"},{"size":2655,"mtime":1694505214418,"results":"194","hashOfConfig":"105"},{"size":952,"mtime":1695879260611,"results":"195","hashOfConfig":"105"},{"size":4852,"mtime":1694505214418,"results":"196","hashOfConfig":"105"},{"size":31,"mtime":1694505214410,"results":"197","hashOfConfig":"105"},{"size":7065,"mtime":1694505214418,"results":"198","hashOfConfig":"105"},{"size":811,"mtime":1695879260611,"results":"199","hashOfConfig":"105"},{"size":85,"mtime":1694505214422,"results":"200","hashOfConfig":"105"},{"size":2255,"mtime":1694505214418,"results":"201","hashOfConfig":"105"},{"size":8159,"mtime":1695879328063,"results":"202","hashOfConfig":"105"},{"size":3505,"mtime":1694505214422,"results":"203","hashOfConfig":"105"},{"size":313,"mtime":1694505214422,"results":"204","hashOfConfig":"105"},{"size":199,"mtime":1694505214422,"results":"205","hashOfConfig":"105"},{"size":2098,"mtime":1694505214418,"results":"206","hashOfConfig":"105"},{"size":1594,"mtime":1694505214410,"results":"207","hashOfConfig":"105"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210"},"1yxje4z",{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":56,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449"},"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/index.tsx",["450","451","452","453","454"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {\n  PublicClientApplication,\n  EventType,\n  EventMessage,\n  AuthenticationResult,\n} from \"@azure/msal-browser\";\nimport { azureAuthentication, msalConfig } from \"./modules/azure\";\nimport AzureApp from \"./modules/azure/azureApp\";\nimport App from \"./App\";\n\nexport const msalInstance: any = new PublicClientApplication(msalConfig);\nconst AZUREAUTHENTICATION: boolean = azureAuthentication.run();\n//bridge?name=sandeep&dob=14/01/1990&gender=male&userid=123\nconst queryParams = new URLSearchParams(window.location.search);\nconst name = queryParams.get('name') || \"\";\nconst dob = queryParams.get('dob') || \"\"\nconst gender = queryParams.get('gender') || \"\";\nconst userid = queryParams.get('userid') || \"\";\nconst svaasToken = queryParams.get('svaasToken') || \"\";\n//console.log(\"userid: \", userid);\n//console.log(\"window.location.search \", window.location.search);\nif (name != \"\" && dob != \"\" && gender != \"\" && userid != \"\" && svaasToken != \"\") {\n  localStorage.setItem('name', name);\n  localStorage.setItem('dob', dob);\n  localStorage.setItem('gender', gender);\n  localStorage.setItem('userid', userid);\n  localStorage.setItem('svaasToken', atob(svaasToken));\n}\nif (AZUREAUTHENTICATION) {\n  // Account selection logic is app dependent. Adjust as needed for different use cases.\n  // console.log(\"msalConfig \", msalConfig);\n  // console.log(\"msalInstance \", msalInstance);\n  const accounts = msalInstance.getAllAccounts();\n  if (accounts.length > 0) {\n    msalInstance.setActiveAccount(accounts[0]);\n  }\n\n  msalInstance.addEventCallback((event: EventMessage) => {\n    if (event.eventType === EventType.LOGIN_SUCCESS && event.payload) {\n      const payload = event.payload as AuthenticationResult;\n      const account = payload.account;\n      msalInstance.setActiveAccount(account);\n    }\n  });\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    {AZUREAUTHENTICATION ? <AzureApp pca={msalInstance} /> : <App />}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/reportWebVitals.ts",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/App.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/azure/azureApp.tsx",["455","456"],"\nimport React from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\n// MSAL imports\nimport { MsalProvider } from \"@azure/msal-react\";\nimport { IPublicClientApplication } from \"@azure/msal-browser\";\nimport { CustomNavigationClient } from \"./navigantion\";\nimport AzureRoute from \"./azureRouting\";\n\ntype AppProps = {\n  pca: IPublicClientApplication;\n};\ninterface RouteParams {\n  name: string;\n  // Add other parameters if needed\n}\n\n\nfunction AzureApp({ pca }: AppProps) {\n  // The next 3 lines are optional. This is how you configure MSAL to take advantage of the router's navigate functions when MSAL redirects between pages in your app\n  const history = useHistory();\n  const navigationClient = new CustomNavigationClient(history);\n  pca.setNavigationClient(navigationClient);\n\n  return (\n    <MsalProvider instance={pca}>\n      <AzureRoute />\n    </MsalProvider>\n  );\n}\n\nexport default AzureApp;\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/azure/index.ts",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/azure/navigantion.tsx",["457"],"import { NavigationClient, NavigationOptions } from \"@azure/msal-browser\";\nimport { History } from \"history\";\nimport {  useLocation } from \"react-router\";\n\n/**\n * This is an example for overriding the default function MSAL uses to navigate to other urls in your webpage\n */\nexport class CustomNavigationClient extends NavigationClient {\n  private history: History;\n\n  constructor(history: History) {\n    super();\n    this.history = history;\n  }\n\n  /**\n   * Navigates to other pages within the same web application\n   * You can use the useHistory hook provided by react-router-dom to take advantage of client-side routing\n   * @param url\n   * @param options\n   */\n  async navigateInternal(url: string, options: NavigationOptions) {\n    const relativePath = url.replace(window.location.origin, \"\");\n    if (options.noHistory) {\n      this.history.replace(relativePath);\n    } else {\n      this.history.push(relativePath);\n    }\n\n    return false;\n  }\n}\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/azure/azureRouting.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/layout/layout.tsx",["458","459","460","461","462","463","464","465","466","467","468"],"import { useLocation as move, validateSession } from \"@app/utils\";\nimport { Routes } from \"@app/routes\";\nimport { Redirect, Route, useHistory } from \"react-router\";\nimport {\n  Container,\n  PageContainer,\n  PageContent,\n} from \"./layout-components\";\nimport NewHeader from \"../../components/svaas-header\"\nimport Stepper from \"../stepper/Stepper\";\nimport { useEffect, useState } from \"react\";\nexport default function Layout() {\n  const history = useHistory();\n  const session = validateSession();\n  const steps = [\"About\", \"Symptoms\", \"History\", \"Outcome\"];\n  const [currentStep, setCurrentStep] = useState<number>(1);\n  const [completedStep, setCompletedStep] = useState(false);\n  // useEffect(() => {\n  //   return history.listen((location) => {\n  //     // netcorePageBrowseEvent();\n  //     console.log(\"location: \", location);\n  //   });\n\n  // }, [history]);\n  return (\n    <Container>\n      <PageContainer>\n        <PageContent className=\"layoutcontent\">\n          {/* <Redirect to=\"/home\" /> */}\n          <Route\n            exact\n            path=\"/\"\n            render={() => <Redirect to=\"/home\" />}\n          />\n          <Route\n            exact\n            path=\"/bridge\"\n            render={() => <Redirect to=\"/home\" />}\n          />\n          <Routes />\n        </PageContent>\n      </PageContainer>\n    </Container>\n  );\n}\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/azure/authConfig.tsx",["469","470"],"import { Configuration, PopupRequest } from \"@azure/msal-browser\";\n\n// Config object to be passed to Msal on creation\nexport const msalConfig: any = {\n  auth: {\n    clientId: process.env.REACT_APP_AZURE_CLIENT_ID,\n    authority: process.env.REACT_APP_AZURE_AUTHORITY,\n    knownAuthorities: [process.env.REACT_APP_AZURE_KNOWN_AUTHORITIES],\n    redirectUri: `${process.env.REACT_APP_HOST}app/healthbot/`,\n    postLogoutRedirectUri: `${process.env.REACT_APP_HOST}`,\n    navigateToLoginRequestUrl: false,\n  },\n};\n// Add here scopes for id token to be used at MS Identity Platform endpoints.\nexport const loginRequest: any = {\n  scopes: [process.env.REACT_APP_AZURE_SCOPES_URL],\n};\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/azure/azureAuthentication.tsx",["471","472","473","474","475","476"],"import React from \"react\";\n// import * as msal from \"msal\";\nimport { AzureException, detectDevice, fnBrowserDetect, FetchDeepLink } from '@app/utils';\nconst url: any = window.location; //// This will store before page redirection.\nvar azureAuthentication = {\n  run: () => {\n    if (process.env.REACT_APP_ENABLE_AZURE == 'true') {\n      //detectDevice();\n      //FetchDeepLink(url);\n      if (AzureException() || sessionStorage.getItem(\"AzureException\")) {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      return false;\n    }\n  },\n};\nexport default azureAuthentication;","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/azure/graphConfig.tsx",["477"],"import { loginRequest } from \"./authConfig\";\nimport { msalInstance } from \"../../index\";\nimport { InteractionRequiredAuthError } from \"@azure/msal-browser\";\nimport { getPatientId } from \"@app/utils\";\n\nexport async function callMsGraph(accessRequest = \"\") {\n  //const history: any = useHistory();\n  const account = msalInstance.getActiveAccount();\n  if (!account) {\n    throw Error(\n      \"No active account! Verify a user has been signed in and setActiveAccount has been called.\"\n    );\n  }\n  var request = {\n    scopes: [process.env.REACT_APP_AZURE_SCOPES_URL],\n    loginHint: account.name,\n  };\n\n  const response = await msalInstance\n    .acquireTokenSilent({\n      ...loginRequest,\n      account: account,\n      //forceRefresh: false,\n    })\n    .catch((error) => {\n      if (error instanceof InteractionRequiredAuthError) {\n        // fallback to interaction when silent call fails\n        //console.log(\"regenerating....\")\n        return msalInstance.acquireTokenRedirect(request);\n      }\n    });\n  const headers = new Headers();\n  const bearer = `Bearer ${response.accessToken}`;\n  headers.append(\"Authorization\", bearer);\n  if (response) {\n    localStorage.setItem(\"symptoms_analyzer_pwa_access_token\", response.accessToken);\n    if (accessRequest == \"New\") {\n      console.info(\n        \"%cA new token has been generated, Proceeding with member re sign in.\",\n        \"color: #494E9D; background: #494e9d21; font-size: 10px\"\n      );\n      let patientId = getPatientId();\n      if (patientId) {\n        // memberSignIn({ svassUserId: patientId }).then((response: any) => {\n        //   if (response.status == 200) {\n        //     window.location.reload()\n        //   }\n        // });\n      } else {\n        //window.location.href = `${process.env.REACT_APP_HOMEPAGE}/homescreen`\n      }\n    }\n  }\n  return response;\n}\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/layout/layout-components.tsx",["478"],"import styled from \"styled-components\";\ntype Props = {\n  status?: Boolean;\n};\nexport const Container = styled.div`\n  height: 100%;\n  overflow: hidden;\n`;\nexport const DContent = styled.div`\n  padding: 15px;\n  max-width: 60%;\n  margin: 0 auto;\n  text-align: center;\n  line-height: 24px;\n`;\nexport const PageContainer = styled.div`\n  height: 100%;\n`;\nexport const PageContent = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  position: relative;\n`;\nexport const TenantList = styled.div`\n  text-align: center;\n  margin-top: 50vh;\n  color: red;\n`;\n\nexport const FlexedContainer = styled.div`\n  flex: 1;\n  overflow: hidden;\n  .memberSelect {\n    padding-bottom: 30px;\n  }\n`;\n\nexport const PageContentWrapper = styled.div`\n  height: calc(100vh - 200px);\n  overflow: auto;\n  &.FromMyAddress {\n    height: calc(100vh - 100px);\n  }\n  &.consultation-questionare {\n    height: calc(100vh - 145px);\n  }\n  &.height {\n    height: 100%;\n  }\n`;\nexport const HCHeader = styled.div`\n  position: absolute;\n  top: 0;\n  width: 100%;\n`;\nexport const HCHeaderRow = styled.div`\n  display: flex;\n  height: 25px;\n  padding: 0 17px;\n  gap: 6px;\n  align-items: center;\n  cursor: pointer;\n  svg {\n    width: 12px;\n    height: 12px;\n    path {\n      stroke: #494e9d;\n    }\n  }\n`;\n\nexport const HCHeaderLeft = styled.div`\n  font-family: \"Nunito Sans\";\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  color: #5a5a5a;\n  display: flex;\n  align-items: center;\n`;\nexport const AccountName = styled.div`\n  font-family: \"Nunito Sans\";\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  color: #494e9d;\n  padding-left: 6px;\n`;\n\nexport const HCHeaderRight = styled.div`\n  svg {\n    position: relative;\n    top: 1px;\n  }\n`;\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/svaasloginloader.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/routes/index.ts",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/utils/index.ts",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/utils/general.ts",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/utils/location.ts",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/routes/routes.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/deeplink.config.ts",["479"],"export default function VALIDATEDDEEPLINK(url: any) {\n  let pathurl = url.pathname.toLowerCase();\n  let pathstring = url.pathname;\n\n  const ALLOWEDURLS = [\n    `${process.env.REACT_APP_HOMEPAGE}/homescreen`,\n    `${process.env.REACT_APP_HOMEPAGE}/appointments`,\n    `${process.env.REACT_APP_HOMEPAGE}/me`,\n    `${process.env.REACT_APP_HOMEPAGE}/doctor/appointment/`,\n  ];\n  const ALLOWEDSTRINGS = [];\n\n  let ISALLOWEDSEGMENTS = ALLOWEDSTRINGS.find((val: string) => {\n    //val = val.toLowerCase();\n    return pathstring.includes(val);\n  })\n    ? true\n    : false;\n\n  let ISALLOWEDURL = ALLOWEDURLS.find((val: string) => {\n    val = val.toLowerCase();\n    return pathurl.includes(val);\n  })\n    ? true\n    : false;\n\n  // console.log(\"path\", path)\n  // console.log(\"ISRESTRICTEDURLS\", ISRESTRICTEDURLS)\n  // console.log(\"ISBLOCKEDSEGMENTS\", ISBLOCKEDSEGMENTS)\n\n  if (ISALLOWEDURL) {\n    return true;\n  } else {\n    return false;\n  }\n}\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/Home.tsx",["480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498"],"import React, { forwardRef, useState } from \"react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { AiOutlineLeft } from \"react-icons/ai\";\nimport CrossSymbol from \"../assets/icons/cross-symbol\";\n//@ts-ignore\nimport doctorPatientImage from \"../assets/images/doctorPatient.png\";\nimport {\n  Title,\n  CloseIcon,\n  Content,\n  Button,\n  HomeContainer,\n  AppContainer,\n  ContentHeading,\n  Options,\n  Option,\n  ExtraDetails,\n  GenderOptions,\n  Gender,\n  SympChekerParent,\n  SymptomAnalyserTitle,\n  ExclamationCircle,\n  WelcomeHeading,\n  DatePickerBox,\n  InputDateIcon,\n  Svg,\n  Name,\n  HiText,\n  ContentSubHeading,\n  BoldContent,\n  HContainer,\n} from \"./SymptomComponents\";\nimport SecondPage from \"./SecondPage\";\nimport Symptoms from \"./Symptoms\";\nimport SymptomAnalyzer from \"./SympAnalyzer\";\nimport SvaasLoader from \"@app/assets/icons/svaasLoader\";\n\nexport default function Home() {\n  const search = window.location.search;\n  const name = new URLSearchParams(search).get(\"name\");\n  const dob = new URLSearchParams(search).get(\"dob\");\n  const gender = new URLSearchParams(search).get(\"gender\");\n  const userid = new URLSearchParams(search).get(\"userid\");\n  const email = new URLSearchParams(search).get(\"email\");\n  console.log(name, dob, gender, userid, email);\n  const [homeContainer, setHomeContainer] = useState<boolean>(true);\n  const [isHomeClass, setHomeClass] = useState<boolean>(true);\n  const [addictDetails, setAddictDetails] = useState({\n    smoke: \"\",\n    drink: \"\",\n  });\n  const [showPages, setShowPages] = useState({\n    firstPage: false,\n    secondPage: false,\n    thirdPage: false,\n    fourthPage: false,\n    sympAnalyzer: false,\n  });\n  const [pregnant, setPregnant] = useState(\"\");\n  const [date, setDate] = useState();\n  const CustomDatePicker = forwardRef(\n    ({ value, onClick, onChange }: any, ref: any) => (\n      <InputDateIcon\n        placeholder=\"DD-MM-YYYY\"\n        value={value}\n        onClick={onClick}\n        onChange={onChange}\n        ref={ref}\n      ></InputDateIcon>\n    )\n  );\n  const setSecondPageDetails = (name: string, value: string) => {\n    if (name === \"pregnant\") {\n      setPregnant(value);\n    } else {\n      setAddictDetails({ ...addictDetails, [name]: value });\n    }\n  };\n\n  const handleClick = () => {\n    setHomeContainer(false);\n    setHomeClass(false);\n    setShowPages({ ...showPages, firstPage: true });\n    setTimeout(() => {\n      setShowPages({ ...showPages, firstPage: false, sympAnalyzer: true });\n    }, 5000);\n    //currentStep === steps.length && setCompletedStep(true);\n  };\n  const changeDatePicker = (d: any) => {\n    setDate(d);\n    setShowPages({ ...showPages, secondPage: true });\n  };\n  return (\n    <AppContainer>\n      {homeContainer ? (\n        <HContainer>\n          <CloseIcon>\n            <Svg>{CrossSymbol()}</Svg>\n          </CloseIcon>\n          <HomeContainer>\n            <Title style={{ color: \"#494e9d\" }}>Disclaimer</Title>\n            <Content>\n              This Symptom checker is not a substitute for professional medical\n              advice or treatment. If you have severe symptoms or suspects a\n              serious condition, seek immediate medical attention. While this\n              tool can be helpful in identifying potential health concerns,\n              don't disregard or delay professional advice.\n            </Content>\n          </HomeContainer>\n          <Button onClick={handleClick} className=\"enableBg\">\n            I agree and continue\n          </Button>\n        </HContainer>\n      ) : null}\n      {showPages.firstPage ? (\n        <Content>\n          <WelcomeHeading>\n            <HiText>Hi</HiText>\n            <br />\n            <Name>\n              {name?.charAt(0).toUpperCase()}\n              {name?.slice(1)}\n            </Name>\n          </WelcomeHeading>\n          <img\n            src={doctorPatientImage}\n            alt=\"doctor patient pic\"\n            style={{ marginTop: \"30px\", width: \"100%\" }}\n          />\n          <ContentHeading style={{ textAlign: \"center\" }}>\n            Welcome to the <BoldContent>SymptomIQ!</BoldContent>\n            <ContentSubHeading>\n              Please answer the following questions to find out what might be\n              causing your symptoms\n            </ContentSubHeading>\n          </ContentHeading>\n        </Content>\n      ) : null}\n      {showPages.sympAnalyzer ? <SymptomAnalyzer /> : null}\n    </AppContainer>\n  );\n}\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/symptoms-duration/symptoms-duration.tsx",["499","500","501","502","503","504","505","506","507","508"],"//@ts-nocheck\nimport Stepper from \"@app/components/stepper/Stepper\";\nimport NewHeader from \"@app/components/svaas-header\"\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { ApplyContainer, ApplyToAll, Checkbox, Container, DurationContainer, DurationHeaderText, FirstRow, Input, SecondRow, Select, StepperContainer, SubText, SubmitButton } from \"./symp-duration-components\";\nimport CheckBox from \"../../components/checkbox\";\nconst SymptomsDuration = () => {\n    const history = useHistory();\n    const steps = [\"About\", \"Symptoms\", \"History\", \"Outcome\"];\n    const [currentStep, setCurrentStep] = useState<number>(2);\n    const [completedStep, setCompletedStep] = useState(false);\n    const [data, setData] = useState([]);\n    const onlySymptomsNames = history.location.state?.symptomsArray || [];\n    const [enabled, setEnabled] = useState<boolean>(true);\n    const [isChecked, setIsChecked] = useState<boolean>(false);\n    const userType = localStorage.getItem(\"userType\") || \"myself\";\n    const someone_else_gender = localStorage.getItem(\"someone_else_gender\") || \"\";\n    const dayArr = [\n        { label: \"Hour(s)\", value: \"hours\" },\n        { label: \"Day(s)\", value: \"days\" },\n        { label: \"Week(s)\", value: \"weeks\" },\n        { label: \"Month(s)\", value: \"months\" },\n        { label: \"Year(s)\", value: \"years\" },\n    ];\n    useEffect(() => {\n        const newArr = [...onlySymptomsNames];\n        //const newArr = [\"Fever\", \"Nausea\", \"Body Stiffness\"];\n        const arrData: any = newArr.map((a: any) => {\n            return {\n                name: a,\n                duration_number: \"\",\n                duration: \"days\",\n                checked: false,\n            };\n        });\n        setData(arrData);\n    }, []);\n    const handleCheckBox = () => {\n        if (isChecked) {\n            let arr: any = [...data];\n            let firstData: any = data[0];\n            data.map((_, ind: number) => {\n                if (ind > 0) {\n                    return (arr[ind] = {\n                        ...arr[ind],\n                        duration_number: firstData.duration_number,\n                        duration: firstData.duration,\n                    });\n                }\n            });\n            setData(arr);\n        }\n    };\n    useEffect(() => {\n        handleCheckBox();\n    }, [isChecked])\n    const checkButtonDisability = () => {\n        setEnabled(true);\n        data.map((d: any) => {\n            if (d.duration_number === null || d.duration_number === \"\") {\n                setEnabled(false);\n            }\n        })\n    }\n    const checkDurationMatch = () => {\n        setIsChecked(true);\n        var firstData = {\n            number: data[0]?.duration_number === \"\" ? \"NA\" : data[0]?.duration_number,\n            days: data[0]?.duration === \"\" ? \"NA\" : data[0]?.duration,\n        }\n        for (var i = 1; i < data.length; i++) {\n            if (data[i].duration_number != firstData.number || data[i].duration != firstData.days) {\n                setIsChecked(false);\n                break;\n            }\n        }\n    }\n    useEffect(() => {\n        checkButtonDisability();\n        checkDurationMatch();\n    }, [data])\n    const selectDuration = (ind: any, e: any) => {\n        let newData: any = [...data];\n        let selectedData: any = newData[ind];\n        selectedData.duration = e.target.value;\n        newData[ind] = selectedData;\n        const plusObj = newData[ind + 1];\n        if (plusObj && plusObj.checked) {\n            newData[ind + 1] = { ...plusObj, duration: e.target.value };\n        }\n        setData(newData);\n    };\n    const handleOnSubmit = () => {\n        history.push({\n            pathname: \"/severity\",\n            state: {\n                symptomsList: data,\n            }\n        })\n    }\n    var checkboxHidden = data[0]?.duration_number === null || data[0]?.duration_number === \"\";\n    return (\n        <>\n            <NewHeader\n                className=\"specialities\"\n                title=\"SymptomIQ\"\n                showBackButton={true}\n                onBack={() => {\n                    history.push({ pathname: \"/symptoms\" });\n                }}\n            />\n            <StepperContainer>\n                <Stepper\n                    steps={steps}\n                    currentStep={currentStep}\n                    completedStep={completedStep}\n                />\n            </StepperContainer>\n            <Container>\n                <DurationHeaderText>\n                    {\n                        userType === \"myself\" ? \"Sorry to hear that, can you tell since how long have you been experiencing these symptoms?\" :\n                            someone_else_gender === \"male\" ? \"Sorry to hear that, can you tell since how long is he having the following symptoms?\" :\n                                someone_else_gender === \"female\" ? \"Sorry to hear that, can you tell since how long is she having the following symptoms?\" :\n                                    \"Sorry to hear that, can you tell since how long are they experiencing these symptoms?\"\n                    }\n                </DurationHeaderText>\n                <DurationContainer>\n                    {data.length > 0 &&\n                        data.map((item: any, ind: number) => (\n                            <div>\n                                <FirstRow>\n                                    {item.name}\n                                </FirstRow>\n                                <SecondRow className=\"secondrow\">\n                                    <Input\n                                        type=\"number\"\n                                        value={item.duration_number}\n                                        min=\"1\"\n                                        onChange={(e) => {\n                                            let Inputvalue = e.target.value;\n                                            let isWholeNumber = /^[1-9]\\d*$/.test(Inputvalue);\n                                            if (Inputvalue < 1 || Inputvalue > 999 || !isWholeNumber) {\n                                                let newData: any = [...data];\n                                                let selectedData: any = newData[ind];\n                                                selectedData.duration_number = \"\";\n                                                newData[ind] = selectedData;\n                                                const plusObj = newData[ind + 1];\n                                                if (plusObj && plusObj.checked) {\n                                                    newData[ind + 1] = { ...plusObj, duration: \"\" };\n                                                }\n                                                setData(newData);\n                                            } else {\n                                                let newData: any = [...data];\n                                                let selectedData: any = newData[ind];\n                                                selectedData.duration_number = Inputvalue;\n                                                newData[ind] = selectedData;\n                                                const plusObj = newData[ind + 1];\n                                                if (plusObj && plusObj.checked) {\n                                                    newData[ind + 1] = { ...plusObj, duration: Inputvalue };\n                                                }\n                                                setData(newData);\n                                            }\n                                        }}\n                                    />\n                                    <Select\n                                        value={item.duration}\n                                        onChange={(e) => {\n                                            // handleSelection(e, ind);\n                                            selectDuration(ind, e);\n                                        }}\n                                    >\n                                        {dayArr.map((opt) => (\n                                            <option value={opt.value}>{opt.label}</option>\n                                        ))}\n                                    </Select>\n                                    {(ind === 0 && data.length > 1 && !checkboxHidden) && (\n                                        <ApplyContainer>\n                                            <CheckBox isChecked={isChecked} setIsChecked={setIsChecked} />\n                                            <ApplyToAll>Apply to All</ApplyToAll>\n                                        </ApplyContainer>\n                                    )}\n                                </SecondRow>\n                            </div>\n                        ))}\n                </DurationContainer>\n            </Container>\n            <SubmitButton onClick={handleOnSubmit} disabled={!enabled}>\n                <SubText>Next</SubText>\n            </SubmitButton>\n        </>\n\n    )\n}\nexport default SymptomsDuration;","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/homescreen/homescreen.tsx",["509","510","511","512","513","514","515","516","517","518"],"//@ts-nocheck\nimport { useEffect, useState } from \"react\";\nimport Stepper from \"@app/components/stepper/Stepper\";\nimport NewHeader from \"../../components/svaas-header\";\nimport {\n  AboutContainer,\n  AboutHeader,\n  AgeParent,\n  AgeTitle,\n  Container,\n  DashedLine,\n  DetailsHeading,\n  Gender,\n  GenderOptions,\n  GenderTitle,\n  Input,\n  InputLabel,\n  InputYears,\n  NameItem,\n  NamesList,\n  SpanYears,\n  StepperContainer,\n  SubText,\n  SubmitButton,\n  SymptomsText,\n} from \"./homescreen-components\";\nimport { useHistory } from \"react-router\";\nimport { create_chat } from \"@app/@services\";\nimport WelcomeScreen from \"../welcome-screen/welcome-screen\";\nimport SvaasLoader from \"@app/assets/icons/svaasLoader\";\nimport LeavingMidway from \"@app/components/leaving-popup/leaving-popup\";\nconst HomeScreen = () => {\n  const name = localStorage.getItem('name') || \"\";\n  const genderName = localStorage.getItem('gender')?.toLowerCase() || \"\";\n  const dob = localStorage.getItem('dob') || \"\";\n  const userid = localStorage.getItem('userid') || \"\";\n  const calculateAge = (dateOfBirth) => {\n    const dobParts = dateOfBirth ? dateOfBirth.split('-') : [0, 0, 0];\n    const dob = new Date(dobParts[0], dobParts[1] - 1, dobParts[2]); // Month is 0-indexed in JavaScript Date\n    const currentDate = new Date();\n\n    let age = currentDate.getFullYear() - dob.getFullYear();\n\n    // Check if the birthday hasn't occurred yet this year\n    if (\n      currentDate.getMonth() < dob.getMonth() ||\n      (currentDate.getMonth() === dob.getMonth() && currentDate.getDate() < dob.getDate())\n    ) {\n      age--;\n    }\n\n    return age;\n  }\n  const ageFromDob = calculateAge(dob);\n  const steps = [\"About\", \"Symptoms\", \"History\", \"Outcome\"];\n  const [currentStep, setCurrentStep] = useState<number>(1);\n  const [completedStep, setCompletedStep] = useState(false);\n  const [userType, setUserType] = useState<any>(\"\");\n  const [gender, setGender] = useState<any>(genderName);\n  const [age, setAge] = useState<any>(ageFromDob);\n  const [isPregnant, setIsPregnant] = useState<any>();\n  const [showWelcome, setShowWelcome] = useState<boolean>(true);\n  const [loading, setLoading] = useState(false);\n  const [leavingMidway, setLeavingMidway] = useState<boolean>(false);\n  const history = useHistory();\n  const [timeoutId, setTimeoutId] = useState(null);\n  const UserNames = [\n    {\n      label: \"Myself\",\n      value: \"myself\",\n    },\n    {\n      label: \"Someone else\",\n      value: \"someone else\",\n    },\n  ];\n  const GenderList = [{\n    label: \"Male\",\n    value: \"male\"\n  }, {\n    label: \"Female\",\n    value: \"female\"\n  }, {\n    label: \"Others\",\n    value: \"others\"\n  }]\n  const PregnancyStatuses = [{\n    label: \"Pregnant\",\n    value: true\n  }, {\n    label: \"Not Pregnant\",\n    value: false\n  }]\n  useEffect(() => {\n    const handleBackButton = () => {\n      //console.log('Back button was clicked on /home!');\n      sessionStorage.clear();\n    };\n    window.addEventListener('popstate', handleBackButton);\n    return () => {\n      window.removeEventListener('popstate', handleBackButton);\n    };\n  }, []);\n  const getUserInformations = async (param: any) => {\n    setLoading(true);\n    await create_chat(param).then((res) => {\n      if (res.status === 200 || res.status === 201) {\n        localStorage.setItem(\"create_chat\", JSON.stringify(param));\n        localStorage.setItem(\"chatid\", res.data);\n        setLoading(false);\n        history.push({ pathname: \"/symptoms\" });\n      } else {\n        setLoading(false);\n        //console.log(\"API failed\");\n      }\n    })\n  }\n  const handleGenderchange = (gen: any) => {\n    if (userType === \"someone else\" && age) {\n      localStorage.setItem(\"someone_else_gender\", gen.value)\n      setGender(gen.value);\n      if (gen.value === \"male\") {\n        setIsPregnant(false);\n        const param = {\n          user_id: userid,\n          tenant: \"svaas\",\n          channel: \"app\",\n          self_flag: userType === \"myself\" ? true : false,\n          gender: \"male\",\n          age: age,\n          is_pregnant: false,\n        }\n        getUserInformations(param);\n      } else if (gen.value === \"others\") {\n        setIsPregnant(false);\n        const param = {\n          user_id: userid,\n          tenant: \"svaas\",\n          channel: \"app\",\n          self_flag: userType === \"myself\" ? true : false,\n          gender: \"non-binary\",\n          age: age,\n          is_pregnant: false,\n        }\n        getUserInformations(param);\n      } else {  //female\n        if (age < 18 || age > 50) {\n          setIsPregnant(false);\n          const param = {\n            user_id: userid,\n            tenant: \"svaas\",\n            channel: \"app\",\n            self_flag: userType === \"myself\" ? true : false,\n            gender: \"female\",\n            age: age,\n            is_pregnant: false,\n          }\n          getUserInformations(param);\n        }\n      }\n    }\n  }\n  const handleUserTypeSelection = (name: any) => {\n    var showForFewSeconds;\n    setUserType(name.value);\n    localStorage.setItem(\"userType\", name.value);\n    if (name.value === \"myself\") {\n      if (genderName === \"male\") {\n        const param = {\n          user_id: userid,\n          tenant: \"svaas\",\n          channel: \"app\",\n          self_flag: true,\n          gender: \"male\",\n          age: ageFromDob,\n          is_pregnant: false\n        }\n        showForFewSeconds = setTimeout(() => getUserInformations(param), 3000);\n        setTimeoutId(showForFewSeconds);\n        return () => {\n          if (timeoutId) {\n            clearTimeout(timeoutId);\n          }\n        };\n      } else if (genderName === \"others\") {\n        const param = {\n          user_id: userid,\n          tenant: \"svaas\",\n          channel: \"app\",\n          self_flag: true,\n          gender: \"non-binary\",\n          age: ageFromDob,\n          is_pregnant: false\n        }\n        showForFewSeconds = setTimeout(() => getUserInformations(param), 3000);\n        setTimeoutId(showForFewSeconds);\n        return () => {\n          if (timeoutId) {\n            clearTimeout(timeoutId);\n          }\n        };\n      } else {  //female \n        if (ageFromDob < 18 || ageFromDob > 50) {\n          const param = {\n            user_id: userid,\n            tenant: \"svaas\",\n            channel: \"app\",\n            self_flag: true,\n            gender: \"female\",\n            age: ageFromDob,\n            is_pregnant: false\n          }\n          showForFewSeconds = setTimeout(() => getUserInformations(param), 3000);\n          setTimeoutId(showForFewSeconds);\n          return () => {\n            if (timeoutId) {\n              clearTimeout(timeoutId);\n            }\n          };\n        }\n      }\n      setAge(ageFromDob);\n      setGender(genderName);\n      setIsPregnant(\"\");\n    } else if (name.value === \"someone else\") {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        setTimeoutId(null);\n      }\n      setAge(\"\");\n      setGender(\"\");\n      setIsPregnant(\"\");\n    }\n  }\n  const handlePregnancySelection = (status) => {\n    if (age) {\n      setIsPregnant(status.value);\n      const param = {\n        user_id: userid,\n        tenant: \"svaas\",\n        channel: \"app\",\n        self_flag: userType === \"myself\" ? true : false,\n        gender: \"female\",\n        age: age,\n        is_pregnant: status.value\n      }\n      getUserInformations(param);\n    }\n  }\n  useEffect(() => {\n    setTimeout(() => {\n      setShowWelcome(false);\n    }, 3000);\n    sessionStorage.clear();\n  }, [])\n  const handleBackClick = () => {\n    setLeavingMidway(true);\n  }\n  const onChangeAgeHandler = (e: any) => {\n    let age = e.target.value;\n    let isWholeNumber = /^[1-9]\\d*$/.test(age);\n    if (age < 1 || age > 120 || !isWholeNumber)\n      setAge(\"\");\n    else\n      setAge(age);\n    setGender(\"\");\n    setIsPregnant(\"\");\n  }\n  return (\n    <>\n      {\n        showWelcome ? <WelcomeScreen name={name} /> :\n          <>\n            <NewHeader\n              className=\"specialities\"\n              title=\"SymptomIQ\"\n              showBackButton={true}\n              onBack={() => {\n                //handleBackClick();\n              }}\n            />\n            <StepperContainer>\n              <Stepper\n                steps={steps}\n                currentStep={currentStep}\n                completedStep={completedStep}\n              />\n            </StepperContainer>\n            <Container>\n              {loading && <SvaasLoader />}\n              <SymptomsText>Who are you checking symptoms for?</SymptomsText>\n              <NamesList>\n                {UserNames &&\n                  UserNames.map((name, idx) => {\n                    return (\n                      <NameItem\n                        key={idx}\n                        selected={userType === name.value}\n                        onClick={() => handleUserTypeSelection(name)}\n                      >\n                        {name.label}\n                      </NameItem>\n                    );\n                  })}\n              </NamesList>\n              {userType &&\n                <AboutContainer>\n                  <DetailsHeading>Please describe more about {userType === \"myself\" ? \"yourself...\" : \"them...\"}</DetailsHeading>\n                  <DashedLine />\n                  <AgeTitle>Age</AgeTitle>\n                  <AgeParent>\n                    <Input\n                      value={userType == \"myself\" ? ageFromDob : age}\n                      min=\"1\"\n                      max=\"120\"\n                      type=\"number\"\n                      onChange={(e) => onChangeAgeHandler(e)}\n                      disabled={userType === \"myself\"}\n                    />\n                    <SpanYears>Years</SpanYears>\n                  </AgeParent>\n                  <GenderTitle>Gender</GenderTitle>\n                  <GenderOptions>\n                    {GenderList.map((gen, idx) => (\n                      <Gender\n                        key={idx}\n                        className={userType == \"myself\" ? (gen.value === genderName ? \"selected\" : \"\") : !age ? \"disabled\" : gen.value === gender ? \"selected\" : \"\"}\n                        onClick={() => handleGenderchange(gen)}\n                      >\n                        {gen.label}\n                      </Gender>\n                    ))}\n                  </GenderOptions>\n                  {((userType === \"someone else\" && gender === \"female\" && (age >= 18 && age <= 50)) || (userType === \"myself\" && genderName === \"female\" && (ageFromDob >= 18 && ageFromDob <= 50))) &&\n                    <>\n                      <GenderTitle>Pregnancy Status</GenderTitle>\n                      <GenderOptions>\n                        {PregnancyStatuses.map((status, idx) => (\n                          <Gender\n                            key={idx}\n                            className={!age ? \"disabled\" : status.value === isPregnant ? \"selected\" : \"\"}\n                            onClick={() => handlePregnancySelection(status)}\n                          >\n                            {status.label}\n                          </Gender>\n                        ))}\n                      </GenderOptions>\n                    </>}\n                </AboutContainer>}\n              {/* <SubmitButton disabled={false} onClick={handleOnSubmit}>\n                <SubText>Next</SubText>\n              </SubmitButton> */}\n            </Container>\n          </>\n      }\n      {leavingMidway ? <LeavingMidway onclose={setLeavingMidway} /> : null}\n    </>\n  );\n\n};\nexport default HomeScreen;\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/medical-history/medical-history.tsx",["519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537"],"//@ts-nocheck\nimport NewHeader from \"../../components/svaas-header\"\nimport Stepper from \"@app/components/stepper/Stepper\";\nimport { Checkbox, ContentHeading, InputSearch, RelatedSymptomsCheckBox, RelatedSymptomsSubtext, SearchBlock, SearchContainer, SpanCross, SpanSearchIcon, StepperContainer, StyleNamefilter, SubText, SubTextNext, SubmitButton, Svg, Symptom, SymptomName, SymptomsContainer, SymptomsData, SymptomsFlex, SymptomsParentContainer } from \"./medical-history-components\";\nimport { useEffect, useState } from \"react\";\nimport { Bodyache, Fever, Headache, HeartDisease, HyperTension, HypoThyrodism, KidneyDisease, LooseMotions, Nausea, RunningNose, SearchIcon, SoreThroat, StomachPain } from \"@app/assets/icons\";\nimport { useHistory } from \"react-router\";\nimport { get_pre_conditions, update_pre_conditions } from \"@app/@services\";\nimport Diabetis from \"@app/assets/icons/diabetis\";\nimport Asthama from \"@app/assets/icons/asthama\";\nimport SearchBar from \"@app/components/search-bar/search-bar\";\nimport SvaasLoader from \"@app/assets/icons/svaasLoader\";\nimport ErrorPage from \"@app/components/error-page/error-page\";\nimport CheckBox from \"../../components/checkbox\";\nconst MedicalHistory = () => {\n    const history = useHistory();\n    const steps = [\"About\", \"Symptoms\", \"History\", \"Outcome\"];\n    const [currentStep, setCurrentStep] = useState<number>(3);\n    const [completedStep, setCompletedStep] = useState(false);\n    const [selectedConditions, setSelectedConditions] = useState<any>([]);\n    const [disabled, setDisabled] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [errorScreen, setErrorScreen] = useState<boolean>(false);\n    const [conditionsList, setConditionsList] = useState([]);\n    const [isChecked, setIsChecked] = useState<boolean>(false);\n    const userType = localStorage.getItem(\"userType\") || \"\";\n    const someone_else_gender = localStorage.getItem(\"someone_else_gender\") || \"\";\n    const userDetails = JSON.parse(localStorage.getItem(\"create_chat\")) || {};\n    const medical_conditions = [\n        { icon: Diabetis, name: \"Diabetes\", value: \"Diabetes\" },\n        { icon: HyperTension, name: \"Hypertension\", value: \"Hypertension\" },\n        { icon: HeartDisease, name: \"Heart disease\", value: \"Heart disease\" },\n        { icon: HypoThyrodism, name: \"Hypothyroid\", value: \"Hypothyroid\" },\n        { icon: KidneyDisease, name: \"Kidney disease\", value: \"Kidney disease\" },\n        { icon: Asthama, name: \"Asthma\", value: \"Asthma\" },\n        { icon: RunningNose, name: \"Brain stroke\", value: \"Brain stroke\" },\n        { icon: SoreThroat, name: \"High cholesterol\", value: \"High cholesterol\" },\n    ];\n    const [searchBarConditions, setSearchBarConditions] = useState<any>([]);\n    const handleSelectConditions = (condition: any, idx: number) => {\n        if (!disabled) {\n            const lowercaseConditionName = condition.value.toLowerCase();\n            if (selectedConditions.some(existingCondition => existingCondition.toLowerCase() === lowercaseConditionName) ||\n                searchBarConditions.some(existingCondition => existingCondition.toLowerCase() === lowercaseConditionName)) {\n                let arr = selectedConditions.filter((value) => value.toLowerCase() !== condition.value.toLowerCase())\n                setSelectedConditions(arr);\n            } else {\n                setSelectedConditions([...selectedConditions, condition.value]);\n            }\n        }\n    };\n    const getAllPreMedicalConditions = async () => {\n        setLoading(true);\n        setErrorScreen(false);\n        await get_pre_conditions().then((res) => {\n            if (res.status === 200 || res.status === 201) {\n                //console.log(res.data);\n                let arr = res.data && res.data.map((condition: string) => {\n                    return {\n                        label: condition,\n                        value: condition\n                    }\n                })\n                const filteredArr = arr.filter((item2: any) => !medical_conditions.some(item1 => item1.value.toLowerCase() === item2.value.toLowerCase()));\n                //console.log(\"filteredArr: \", filteredArr);\n                setConditionsList(filteredArr);\n                setLoading(false);\n            } else {\n                setLoading(false);\n                setErrorScreen(true);\n                //console.log(\"API FAILED\");\n            }\n        })\n    }\n    useEffect(() => {\n        getAllPreMedicalConditions();\n    }, [])\n\n    useEffect(() => {\n        setSelectedConditions([]);\n        setSearchBarConditions([]);\n        setDisabled(isChecked);\n    }, [isChecked])\n\n    useEffect(() => {\n        const filteredArr = selectedConditions && selectedConditions.filter((item2: any) => !searchBarConditions.some(item1 => item1.toLowerCase() === item2.toLowerCase()));\n        setSelectedConditions(filteredArr);\n    }, [searchBarConditions])\n\n    const handleOnSubmit = async () => {\n        setLoading(true);\n        setErrorScreen(false);\n        const All_medical_conditions = [...selectedConditions, ...searchBarConditions];\n        await update_pre_conditions(All_medical_conditions).then((res) => {\n            if (res.status === 200 || res.status === 201) {\n                setLoading(false);\n                if (userDetails?.age >= 18)\n                    history.push({ pathname: \"/habits\" })\n                else\n                    history.push({ pathname: \"/outcome\" })\n            } else {\n                setLoading(false);\n                setErrorScreen(true);\n            }\n        })\n    }\n    return (\n        <>\n            <NewHeader\n                className=\"specialities\"\n                title=\"SymptomIQ\"\n                showBackButton={true}\n                onBack={() => {\n                    history.push({ pathname: \"/symptoms\" });\n                }}\n            />\n            <StepperContainer>\n                <Stepper\n                    steps={steps}\n                    currentStep={currentStep}\n                    completedStep={completedStep}\n                />\n            </StepperContainer>\n            {loading && <SvaasLoader />}\n            {errorScreen ?\n                <ErrorPage /> :\n                <>\n                    <SymptomsParentContainer>\n                        <ContentHeading>\n                            {\n                                userType === \"myself\" ? \"Do you have any existing medical conditions apart from the selected symptoms?\" :\n                                    someone_else_gender === \"male\" ? \"Does he have any existing medical conditions apart from the selected symptoms?\" :\n                                        someone_else_gender === \"female\" ? \"Does she have any existing medical conditions apart from the selected symptoms?\" :\n                                            \"Do they have any existing medical conditions apart from the selected symptoms?\"\n                            }\n                        </ContentHeading>\n                        <RelatedSymptomsCheckBox>\n                            <CheckBox isChecked={isChecked} setIsChecked={setIsChecked} />\n                            <RelatedSymptomsSubtext>\n                                Don't have any pre-existing conditions\n                            </RelatedSymptomsSubtext>\n                        </RelatedSymptomsCheckBox>\n                        <SubText>\n                            Choose from common conditions\n                        </SubText>\n                        <SymptomsContainer>\n                            {medical_conditions.map((condition, idx) => (\n                                <Symptom\n                                    key={idx}\n                                    onClick={() => handleSelectConditions(condition, idx)}\n                                    className={disabled ? \"disabled\" : selectedConditions.includes(condition.value) ? \"selected\" : \"\"}\n                                >\n                                    <Svg>{condition.icon(disabled)}</Svg>\n                                    <SymptomName>{condition.name}</SymptomName>\n                                </Symptom>\n                            ))}\n                        </SymptomsContainer>\n                        <SearchContainer className={disabled ? \"disabled\" : \"\"}>\n                            <SubText>\n                                Any other condition you wish to add?\n                            </SubText>\n                            <SearchBar symptomsList={conditionsList} setSearchBarSymptoms={setSearchBarConditions} searchBarSymptoms={searchBarConditions} disabled={disabled} fromPage=\"ConditionsPage\" />\n                        </SearchContainer>\n                    </SymptomsParentContainer>\n                    <SubmitButton disabled={(![...selectedConditions, ...searchBarConditions].length && !disabled)} onClick={handleOnSubmit}>\n                        <SubTextNext>Next</SubTextNext>\n                    </SubmitButton>\n                </>\n            }\n        </>\n    );\n};\nexport default MedicalHistory;\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/symptoms/symptoms.tsx",["538","539","540","541","542","543","544","545","546","547","548","549","550","551","552"],"//@ts-nocheck\nimport NewHeader from \"../../components/svaas-header\"\nimport Stepper from \"@app/components/stepper/Stepper\";\nimport { ContentHeading, InputSearch, SearchBlock, SelectedSymptoms, SpanCross, SpanSearchIcon, StepperContainer, StyleNamefilter, SubText, SubText2, SubTextNext, SubmitButton, Svg, Symptom, SymptomName, SymptomsContainer, SymptomsData, SymptomsFlex, SymptomsParentContainer } from \"./symptoms-components\";\nimport { useEffect, useState } from \"react\";\nimport { Bodyache, Fever, Headache, LooseMotions, Nausea, RunningNose, SearchIcon, SoreThroat, StomachPain } from \"@app/assets/icons\";\nimport { useHistory } from \"react-router\";\nimport Select from \"react-select\";\nimport { get_symptoms } from \"@app/@services\";\nimport { values } from \"lodash\";\nimport SearchBar from \"@app/components/search-bar/search-bar\";\nimport SvaasLoader from \"@app/assets/icons/svaasLoader\";\nimport ErrorPage from \"@app/components/error-page/error-page\";\nconst Symptoms = () => {\n    const history = useHistory();\n    const steps = [\"About\", \"Symptoms\", \"History\", \"Outcome\"];\n    const [currentStep, setCurrentStep] = useState<number>(2);\n    const [completedStep, setCompletedStep] = useState(false);\n    const [selectedSymptoms, setSelectedSymptoms] = useState<any>([]);\n    const [symptomsList, setSymptomsList] = useState([]);\n    const [searchBarSymptoms, setSearchBarSymptoms] = useState<any>([]);\n    const [loading, setLoading] = useState(false);\n    const [errorScreen, setErrorScreen] = useState<boolean>(false);\n    const userType = localStorage.getItem(\"userType\") || \"myself\";\n    const someone_else_gender = localStorage.getItem(\"someone_else_gender\") || \"\";\n    const symptoms = [\n        { icon: Fever, name: \"Fever\", value: \"Fever\" },\n        { icon: Bodyache, name: \"Body pains\", value: \"Body pains\" },\n        { icon: Headache, name: \"Headache\", value: \"Headache\" },\n        { icon: Nausea, name: \"Nausea\", value: \"Nausea\" },\n        { icon: StomachPain, name: \"Stomach pain\", value: \"Stomach pain\" },\n        { icon: LooseMotions, name: \"Loose motions\", value: \"Loose motions\" },\n        { icon: RunningNose, name: \"Runny nose\", value: \"Runny nose\" },\n        { icon: SoreThroat, name: \"Sore throat\", value: \"Sore throat\" },\n    ];\n    const handleOnsubmit = () => {\n        history.push({\n            pathname: \"/duration\", state: {\n                symptomsArray: [...selectedSymptoms, ...searchBarSymptoms]\n            }\n        })\n    }\n    const getAllSymptoms = async () => {\n        setLoading(true);\n        setErrorScreen(false);\n        await get_symptoms().then((res) => {\n            if (res.status === 200 || res.status === 201) {\n                let arr = res.data && res.data.map((symptom: string) => {\n                    return {\n                        label: symptom,\n                        value: symptom\n                    }\n                })\n                const filteredArr = arr.filter((item2: any) => !symptoms.some(item1 => item1.value.toLowerCase() === item2.value.toLowerCase()));\n                //console.log(\"filteredArr: \", filteredArr);\n                setSymptomsList(filteredArr);\n                setLoading(false);\n            } else {\n                setLoading(false);\n                setErrorScreen(true);\n                //console.log(\"API failed\");\n            }\n        })\n    }\n    useEffect(() => {\n        getAllSymptoms();\n    }, [])\n    // useEffect(() => {\n    //     const handleBackButton = () => {\n    //         console.log('Back button was clicked on /symptoms!');\n    //         sessionStorage.clear();\n    //     };\n    //     window.addEventListener('popstate', handleBackButton);\n    //     return () => {\n    //         window.removeEventListener('popstate', handleBackButton);\n    //     };\n    // }, []);\n    useEffect(() => {\n        const filteredArr = selectedSymptoms && selectedSymptoms.filter((item2: any) => !searchBarSymptoms.some(item1 => item1.toLowerCase() === item2.toLowerCase()));\n        setSelectedSymptoms(filteredArr);\n    }, [searchBarSymptoms])\n    const handleSelectSymptoms = (symptom: any, idx: number) => {\n        const lowercaseSymptomName = symptom.value.toLowerCase();\n        if (selectedSymptoms.some(existingSymptom => existingSymptom.toLowerCase() === lowercaseSymptomName) ||\n            searchBarSymptoms.some(existingSymptom => existingSymptom.toLowerCase() === lowercaseSymptomName)) {\n            let arr = selectedSymptoms.filter((value) => value.toLowerCase() !== symptom.value.toLowerCase())\n            setSelectedSymptoms(arr);\n        } else {\n            setSelectedSymptoms([...selectedSymptoms, symptom.value]);\n        }\n    };\n    return (\n        <>\n            {loading && <SvaasLoader />}\n            <NewHeader\n                className=\"specialities\"\n                title=\"SymptomIQ\"\n                showBackButton={true}\n                onBack={() => {\n                    history.push({ pathname: \"/home\" });\n                }}\n            />\n            <StepperContainer>\n                <Stepper\n                    steps={steps}\n                    currentStep={currentStep}\n                    completedStep={completedStep}\n                />\n            </StepperContainer>\n            {errorScreen ?\n                <ErrorPage /> :\n                <>\n                    <SymptomsParentContainer>\n                        <ContentHeading>\n                            {\n                                userType === \"myself\" ? \"Can you tell what symptoms are bothering you ?\" :\n                                    someone_else_gender === \"male\" ? \"Can you tell what symptoms are bothering him ?\" :\n                                        someone_else_gender === \"female\" ? \"Can you tell what symptoms are bothering her ?\" :\n                                            \"Can you tell what symptoms are bothering them ?\"\n                            }\n                        </ContentHeading>\n                        <SubText>\n                            Choose from common symptoms\n                        </SubText>\n                        <SymptomsContainer>\n                            {symptoms.map((symptom, idx) => (\n                                <Symptom\n                                    key={idx}\n                                    onClick={() => handleSelectSymptoms(symptom, idx)}\n                                    className={selectedSymptoms.includes(symptom.value) ? \"selected\" : \"\"}\n                                >\n                                    <Svg>{symptom.icon()}</Svg>\n                                    <SymptomName>{symptom.name}</SymptomName>\n                                </Symptom>\n                            ))}\n                        </SymptomsContainer>\n                        <SubText2>\n                            Any other symptom you wish to add?\n                        </SubText2>\n                        <SearchBar symptomsList={symptomsList} setSearchBarSymptoms={setSearchBarSymptoms} searchBarSymptoms={searchBarSymptoms} disabled={false} fromPage=\"SymptomsPage\" />\n                    </SymptomsParentContainer>\n                    <SubmitButton disabled={([...selectedSymptoms, ...searchBarSymptoms].length <= 0)} onClick={handleOnsubmit}>\n                        <SubTextNext>Next</SubTextNext>\n                    </SubmitButton>\n                </>}\n        </>\n    );\n};\nexport default Symptoms;\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/extra-symptoms/extra-symptoms.tsx",["553","554","555","556","557","558","559","560","561","562","563","564","565","566","567"],"//@ts-nocheck\nimport Stepper from \"@app/components/stepper/Stepper\";\nimport NewHeader from \"@app/components/svaas-header\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Checkbox, Container, InputSearch, RelatedMap, RelatedParent, RelatedSymptomsCheckBox, RelatedSymptomsHeading, RelatedSymptomsSubtext, SearchBarContainer, SearchBlock, SpanSearchIcon, StepperContainer, StyleNamefilter, SubText, SubTexts, SubmitButton, WelcomeHeading } from \"./extra-symptoms-components\";\nimport { SearchIcon } from \"@app/assets/icons\";\nimport { get_symptoms, update_other_symptoms } from \"@app/@services\";\nimport Select from \"react-select\";\nimport SvaasLoader from \"@app/assets/icons/svaasLoader\";\nimport ErrorPage from \"@app/components/error-page/error-page\";\nimport SearchBar from \"@app/components/search-bar/search-bar\";\nimport CheckBox from \"@app/components/checkbox/checkbox\";\nconst ExtraSymptoms = () => {\n    const history = useHistory();\n    // const Arr = [\n    //     \"Body Stiffness\",\n    //     \"Chils\",\n    //     \"Cough\",\n    //     \"Fatigue\",\n    //     \"Lose of Appetite\",\n    //     \"Nasal Congestion\",\n    //     \"Mild Chest Discomfort\",\n    //     \"Mild Breathing Difficulty\",\n    // ];\n    const Arr = history.location.state?.other_symptoms || [];\n    const steps = [\"About\", \"Symptoms\", \"History\", \"Outcome\"];\n    const [currentStep, setCurrentStep] = useState<number>(2);\n    const [completedStep, setCompletedStep] = useState(false);\n    const [relatedSymptomsArr, setRelatedSymptomsArr] = useState(Arr);\n    const [search, setSearch] = useState<string>(\"\");\n    const [disableButton, setDisableButton] = useState<boolean>(false);\n    const [disabled, setDisabled] = useState(false);\n    const [selectedSymptoms, setSelectedSymptoms] = useState<any>([]);\n    const [symptomsList, setSymptomsList] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [errorScreen, setErrorScreen] = useState<boolean>(false);\n    const [searchBarSymptoms, setSearchBarSymptoms] = useState<any>([]);\n    const [isChecked, setIsChecked] = useState<boolean>(false);\n    const userType = localStorage.getItem(\"userType\") || \"myself\";\n    const someone_else_gender = localStorage.getItem(\"someone_else_gender\") || \"\";\n    const getAllSymptoms = async () => {\n        setLoading(true);\n        setErrorScreen(false);\n        await get_symptoms().then((res) => {\n            if (res.status === 200 || res.status === 201) {\n                let arr = res.data && res.data.map((symptom: string) => {\n                    return {\n                        label: symptom,\n                        value: symptom\n                    }\n                })\n                setSymptomsList(arr);\n                setLoading(false);\n            } else {\n                setLoading(false);\n                setErrorScreen(true);\n                //console.log(\"API failed\");\n            }\n        })\n    }\n    useEffect(() => {\n        getAllSymptoms();\n    }, [])\n\n    useEffect(() => {\n        setSelectedSymptoms([]);\n        setSearchBarSymptoms([]);\n        setDisabled(isChecked);\n    }, [isChecked])\n\n    useEffect(() => {\n        const filteredArr = selectedSymptoms && selectedSymptoms.filter((item2: any) => !searchBarSymptoms.some(item1 => item1.toLowerCase() === item2.toLowerCase()));\n        setSelectedSymptoms(filteredArr);\n    }, [searchBarSymptoms])\n\n    const handleSubmit = async () => {\n        setLoading(true);\n        setErrorScreen(false);\n        const finalSymptoms = [...selectedSymptoms, ...searchBarSymptoms];\n        await update_other_symptoms(finalSymptoms).then((res) => {\n            // console.log(res.data);\n            if (res.status === 200 || res.status === 201) {\n                history.push({\n                    pathname: \"/history\"\n                })\n                setLoading(false);\n            } else {\n                setLoading(false);\n                setErrorScreen(true);\n                //console.log(\"API Failed\");\n            }\n        })\n    };\n    const handleSelectSymptoms = (symptom: any, idx: number) => {\n        if (!disabled) {\n            const lowercaseSymptomName = symptom.toLowerCase();\n            if (selectedSymptoms.some(existingSymptom => existingSymptom.toLowerCase() === lowercaseSymptomName) ||\n                searchBarSymptoms.some(existingSymptom => existingSymptom.toLowerCase() === lowercaseSymptomName)) {\n                let arr = selectedSymptoms.filter((value) => value.toLowerCase() !== symptom.toLowerCase())\n                setSelectedSymptoms(arr);\n            } else {\n                setSelectedSymptoms([...selectedSymptoms, symptom]);\n            }\n        }\n    };\n    // console.log(\"selectedSymptoms \", selectedSymptoms);\n    return (\n        <>\n            <NewHeader\n                className=\"specialities\"\n                title=\"SymptomIQ\"\n                showBackButton={true}\n                onBack={() => {\n                    history.push({ pathname: \"/symptoms\" });\n                }}\n            />\n            <StepperContainer>\n                <Stepper\n                    steps={steps}\n                    currentStep={currentStep}\n                    completedStep={completedStep}\n                />\n            </StepperContainer>\n            {errorScreen ?\n                <ErrorPage /> :\n                <> <Container>\n                    {loading && <SvaasLoader />}\n                    <WelcomeHeading>\n                        {\n                            userType === \"myself\" ? \"It must be tough dealing with these symptoms. Did you notice any other accompanying symptoms?\" :\n                                someone_else_gender === \"male\" ? \"It must be tough dealing with these symptoms. Did he notice any other accompanying symptoms?\" :\n                                    someone_else_gender === \"female\" ? \"It must be tough dealing with these symptoms. Did she notice any other accompanying symptoms?\" :\n                                        \"It must be tough dealing with these symptoms. Did they notice any other accompanying symptoms?\"\n                        }\n                    </WelcomeHeading>\n                    <RelatedSymptomsCheckBox>\n                        <CheckBox isChecked={isChecked} setIsChecked={setIsChecked} />\n                        <RelatedSymptomsSubtext>\n                            Don't have any related symptoms?\n                        </RelatedSymptomsSubtext>\n                    </RelatedSymptomsCheckBox>\n                    <RelatedSymptomsHeading>\n                        Choose from suggested symptoms\n                    </RelatedSymptomsHeading>\n                    <RelatedParent>\n                        {relatedSymptomsArr.map((symptom, index) => (\n                            <RelatedMap key={index}\n                                onClick={() => handleSelectSymptoms(symptom, index)}\n                                className={disabled ? \"disabled\" : selectedSymptoms.includes(symptom) ? \"selected\" : \"\"}>{symptom}</RelatedMap>\n                        ))}\n                    </RelatedParent>\n                    <SearchBarContainer className={disabled ? \"disabled\" : \"\"}>\n                        <SubTexts>\n                            Any other symptom you wish to add?\n                        </SubTexts>\n                        <SearchBar symptomsList={symptomsList} setSearchBarSymptoms={setSearchBarSymptoms} searchBarSymptoms={searchBarSymptoms} disabled={disabled} fromPage=\"SymptomsPage\" />\n                    </SearchBarContainer>\n                </Container>\n                    <SubmitButton disabled={(![...selectedSymptoms, ...searchBarSymptoms].length && !disabled)} onClick={handleSubmit}>\n                        <SubText>Next</SubText>\n                    </SubmitButton></>}\n        </>\n    )\n}\nexport default ExtraSymptoms;","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/outcome/outcome.tsx",["568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623"],"//@ts-nocheck\nimport { useHistory } from \"react-router\";\nimport NewHeader from \"../../components/svaas-header\"\nimport Stepper from \"@app/components/stepper/Stepper\";\nimport { useEffect, useState } from \"react\";\nimport { Amount, AttentionCard, AttentionDiv, AttentionText, BookConsult, BookConsultCTA, BottomCard, BottomCardContainer, BottomContainer, ButtonContainer, Card, CardContainer, CardDescription, CardTitle, CardsContainer, CauseHeading, CausesContainer, CloseTest, ConsultFee, Description, Details, DetailsCard, DetailsCardCont, DetailsContainer, DetailsExp, DetailsLowerPara, DetailsName, DetailsPara, DetailsProfileDiv, DetailsQual, DetailsSpecialist, DiseaseName, DocListHeading, DoctorAvailableContainer, DoctorIconWrapper, DoctorName, Emergency, EmergencyDiv, EmergencyText, HeaderContainer, HeaderIcon, HeaderName, IconContainer, IconWrapper, LoaderContainer, LogoWrapper, LowerDetails, MainContainer, PerConsult, PerSession, ProfileDiv, QualContainer, Qualifications, RetakeTest, SideContainer, SidenavContainer, SpecialityContainer, SpecialityDiv, SpecialityTag, SpecialityTitle, SplashBody, SplashContainer, SplashDesc, SplashSliderContainer, SplashTitle, StepperContainer, TitleText, TopCard, ViewAll } from \"./outcome-components\";\nimport { Bacteria, DoctorIcon, HalfCircle, HalfCircleBg } from \"@app/assets/icons\";\nimport { getDoctorUsingFetch, getFindSpecialitiesDoc, get_chat_results } from \"@app/@services\";\nimport { HomeIcon } from \"@app/assets/icons\";\nimport ErrorPage from \"@app/components/error-page/error-page\";\nimport SideNav from \"@app/components/side-nav/side-nav\";\nimport Message from \"@app/assets/icons/message\";\nimport Location from \"@app/assets/icons/location\";\nimport VideoCall from \"@app/assets/icons/videocall\";\nimport Slider from \"react-slick\";\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport LeavingMidway from \"@app/components/leaving-popup/leaving-popup\";\nimport LoaderScreen from \"@app/components/loader-screen\";\nconst Outcome = () => {\n    const history = useHistory();\n    const steps = [\"About\", \"Symptoms\", \"History\", \"Outcome\"];\n    const [currentStep, setCurrentStep] = useState<number>(4);\n    const [completedStep, setCompletedStep] = useState(true);\n    const [userData, setUserData] = useState<any>({});\n    const [count, setCount] = useState<number>(0);\n    const [loading, setLoading] = useState(false);\n    const [errorScreen, setErrorScreen] = useState<boolean>(false);\n    const [showAboutDisease, setShowAboutDisease] = useState<boolean>(false);\n    const [diseaseName, setDiseaseName] = useState<any>(\"\");\n    const [diseaseDesc, setDiseaseDesc] = useState<any>(\"\");\n    const [onlineDoctorsList, setOnlineDoctorsList] = useState<any>([]);\n    const [specialization, setSpecialization] = useState<any>();\n    const [leavingMidway, setLeavingMidway] = useState<boolean>(false);\n    const [startAnalyze, setStartAnalyze] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const userType = localStorage.getItem(\"userType\") || \"\";\n    const userId = localStorage.getItem(\"userid\") || \"\";\n    const someone_else_gender = localStorage.getItem(\"someone_else_gender\") || \"\";\n    useEffect(() => {\n        getUserOutcome();\n        //getDoctorsList();\n    }, []);\n    const sliderProfile = {\n        infinite: true,\n        dots: true,\n        slidesToShow: 2,\n        slidesToScroll: 1,\n        speed: 300,\n        autoplay: false,\n        autoplaySpeed: 4000,\n    };\n    const handleRetakeTest = () => {\n        history.push({\n            pathname: \"/home\"\n        })\n    }\n    const handleCloseClick = () => {\n        setLeavingMidway(true);\n    }\n    const CapitalizeFirstnLastName = (firstname: string, lastname: string) => {\n        let firstLetter = firstname && firstname.length >= 1 && firstname[0].toUpperCase();\n        let lastLetter = lastname && lastname.length >= 1 && lastname[0].toUpperCase();\n        return `${firstLetter}${lastLetter}`\n    }\n    const getUserOutcome = async () => {\n        setLoading(true);\n        setStartAnalyze(true);\n        setProgress(0);\n        setErrorScreen(false);\n        await get_chat_results().then((res) => {\n            if (res && (res.status == 201 || res.status == 200)) {\n                setUserData(res.data);\n                setCount(res.data?.condtions?.conditions?.length);\n                getDoctorsList(res.data?.specialities);\n                setLoading(false);\n                setStartAnalyze(false);\n                setProgress(0);\n            } else {\n                setLoading(false);\n                setStartAnalyze(false);\n                setProgress(0);\n                setErrorScreen(true);\n                //console.log(\"API failed\");\n            }\n        });\n    };\n    const getDoctorsList = async (specializations: any) => {\n        const data = await getDoctorUsingFetch(specializations[0]);\n        let onlineDoctors = data?.getDoctors?.data && data?.getDoctors?.data.filter((doctor: any) => doctor?.consultationType.toLowerCase() === \"online\")\n        onlineDoctors = onlineDoctors?.length > 2 ? onlineDoctors.splice(0, 3) : onlineDoctors;\n        setOnlineDoctorsList(onlineDoctors);\n        setSpecialization(specializations[0]);\n        // getFindSpecialitiesDoc().then((res) => {\n        //     console.log(\"doctors data \", res);\n        // })\n    }\n    //console.log(\"onlinedoctorsList: \", onlineDoctorsList);\n    const handleCardClick = (data: any) => {\n        setDiseaseName(data?.condition_name);\n        setDiseaseDesc(data?.long_description);\n        setShowAboutDisease(true);\n    }\n    const handleViewAllSpecialists = () => {\n        sessionStorage.clear();\n        window.location.href = `${process.env.REACT_APP_HOST}app/svaasportal/doctors?specialization=${specialization}&fromPage=healthBot&profile=${userId}`;\n    }\n    const handleBookConsultationClick = (doctorDetails: any) => {\n        sessionStorage.clear();\n        const id = doctorDetails?.erxDoctorId || 0;\n        window.location.href = `${process.env.REACT_APP_HOST}app/svaasportal/doctors/doctorDetails/${id}?fromPage=healthBot&bookAgain=true&profile=${userId}`;\n    }\n    return (\n        <>\n            <NewHeader\n                className=\"specialities\"\n                title=\"SymptomIQ\"\n                showBackButton={true}\n                onBack={() => {\n                    history.push({ pathname: \"/history\" });\n                }}\n            />\n            <StepperContainer>\n                <Stepper\n                    steps={steps}\n                    currentStep={currentStep}\n                    completedStep={completedStep}\n                />\n            </StepperContainer>\n            {errorScreen ?\n                <ErrorPage /> : loading ?\n                    <LoaderScreen startAnalyze={startAnalyze} setStartAnalyze={setStartAnalyze} setProgress={setProgress} progress={progress} /> :\n                    <>\n                        <MainContainer>\n                            <TitleText>\n                                {\n                                    userType === \"myself\" ? \"Based on your selected symptoms, it is possible that you may be experiencing any of the below conditions:\" :\n                                        someone_else_gender === \"male\" ? \"Based on your selected symptoms, it is possible that he may be experiencing any of the below conditions:\" :\n                                            someone_else_gender === \"female\" ? \"Based on your selected symptoms, it is possible that she may be experiencing any of the below conditions:\" :\n                                                \"Based on your selected symptoms, it is possible that they may be experiencing any of the below conditions:\"\n                                }\n                            </TitleText>\n                            {userData?.emergency?.toUpperCase() === \"YES\" ? (\n                                <Emergency>\n                                    <EmergencyDiv>\n                                        <EmergencyText>\n                                            Some of the symptoms you mentioned can be caused by serious\n                                            medical conditions. It is recommended to visit a hospital or speak\n                                            with a healthcare professional as soon as you can to rule out\n                                            any potential emergencies and receive appropriate treatment\n                                            immediately.\n                                        </EmergencyText>\n                                    </EmergencyDiv>\n                                    <IconContainer>\n                                        <HalfCircle strokeColor=\"#F4939A\" fillColor=\"#F4939A\" />\n                                    </IconContainer>\n                                </Emergency>\n                            ) : null}\n                            <CausesContainer>\n                                <CauseHeading>Possible Causes ({count})</CauseHeading>\n                                <SplashSliderContainer>\n                                    <Slider {...sliderProfile}>\n                                        {userData?.condtions?.conditions?.map((data: any) => {\n                                            let description = data.short_description || \"\";\n                                            if (description.length > 50) {\n                                                description = description.substring(0, 50) + \"...\";\n                                            }\n                                            return (\n                                                <Card onClick={() => { /* handleCardClick(data) */ }}>\n                                                    <SplashBody>\n                                                        <LogoWrapper>\n                                                            <Bacteria />\n                                                        </LogoWrapper>\n                                                        <CardTitle>{data.condition_name}</CardTitle>\n                                                        <CardDescription>{description}</CardDescription>\n                                                    </SplashBody>\n                                                </Card>\n                                            );\n                                        })}\n                                    </Slider>\n                                </SplashSliderContainer>\n                            </CausesContainer>\n                            <SpecialityContainer>\n                                <SpecialityTitle>Speciality to Consult</SpecialityTitle>\n                                {userData?.specialities && userData?.specialities?.length ?\n                                    <SpecialityDiv>\n                                        <IconWrapper>\n                                            <HalfCircleBg />\n                                        </IconWrapper>\n                                        <DoctorIconWrapper>\n                                            <DoctorIcon />\n                                        </DoctorIconWrapper>\n                                        <SpecialityTag>{userData.specialities[0]}</SpecialityTag>\n                                    </SpecialityDiv> :\n                                    null}\n                            </SpecialityContainer>\n                        </MainContainer>\n                        <BottomContainer>\n                            <ButtonContainer>\n                                <RetakeTest onClick={handleRetakeTest}>Retake Test</RetakeTest>\n                                <CloseTest onClick={() => { }}>Close</CloseTest>\n                            </ButtonContainer>\n                        </BottomContainer>\n                    </>}\n            {showAboutDisease ?\n                <SidenavContainer>\n                    <SideNav\n                        className=\"closeClassName\"\n                        maxHeight=\"100%\"\n                        minHeight=\"70%\"\n                        isSpaceNeeded={true}\n                        onClose={() => {\n                            setShowAboutDisease(false);\n                        }}\n                        title=\"\"\n                        closeClassName={\"open\"}>\n                        <SideContainer>\n                            <DiseaseName>{diseaseName}</DiseaseName>\n                            <Description>{diseaseDesc}</Description>\n                        </SideContainer>\n                    </SideNav>\n                </SidenavContainer> : null}\n            {leavingMidway ?\n                <LeavingMidway onclose={setLeavingMidway} /> : null}\n        </>\n    );\n};\nexport default Outcome;\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/habits/habits.tsx",["624","625","626","627","628"],"//@ts-nocheck\nimport { useHistory } from \"react-router\";\nimport NewHeader from \"../../components/svaas-header\"\nimport Stepper from \"@app/components/stepper/Stepper\";\nimport { useState } from \"react\";\nimport { AboutSideContainer, AnalyzButton, BottomContainer, ButtonRow, ButtonWrapper, Container, DashedLine, Label, MainContainer, OuestionWrapper, Para, Question, SidenavContainer, SmokeButton, SmokeTypeSideContainer, StepperContainer, SubText, SubmitButton } from \"./habits-component\";\nimport { WarningIcon } from \"@app/assets/icons\";\nimport { update_alcohol, update_smoker } from \"@app/@services\";\nimport SvaasLoader from \"@app/assets/icons/svaasLoader\";\nimport SideNav from \"@app/components/side-nav/side-nav\";\nimport ErrorPage from \"@app/components/error-page/error-page\";\nconst Habits = () => {\n    const history = useHistory();\n    const steps = [\"About\", \"Symptoms\", \"History\", \"Outcome\"];\n    const [currentStep, setCurrentStep] = useState<number>(3);\n    const [completedStep, setCompletedStep] = useState(false);\n    const [smokeType, setSmokeType] = useState<string>(\"\");\n    const [alcoholType, setAlcoholType] = useState<string>(\"\");\n    const [loading, setLoading] = useState(false);\n    const [showAboutSmoke, setShowAboutSmoke] = useState<boolean>(false);\n    const [showAboutAlcohol, setShowAboutAlcohol] = useState<boolean>(false);\n    const [errorScreen, setErrorScreen] = useState<boolean>(false);\n    const userType = localStorage.getItem(\"userType\") || \"myself\";\n    const someone_else_gender = localStorage.getItem(\"someone_else_gender\") || \"\";\n    const SmokeTypeFirstRow = [\n        \"Former smoker\",\n        \"Social smoker\"\n    ];\n    const SmokeTypeSecondRow = [\n        \"Regular smoker\",\n        \"Non smoker\"\n    ];\n    const AlcoholTypeFirstRow = [\n        \"Former alcoholic\",\n        \"Social drinker\"\n    ];\n    const AlcoholTypeSecondRow = [\n        \"Regular drinker\",\n        \"Non alcoholic\"\n    ];\n    const handleSubmit = async () => {\n        if (smokeType && alcoholType) {\n            setLoading(true);\n            setErrorScreen(false);\n            await update_smoker(smokeType).then((res) => {\n                if (res.status === 200 || res.status === 201) {\n                    setLoading(false);\n                    update_alcohol(alcoholType).then((resp) => {\n                        if (resp.status === 200 || resp.status === 201) {\n                            history.push({\n                                pathname: \"/outcome\"\n                            })\n                            setLoading(false);\n                        } else {\n                            setLoading(false);\n                            setErrorScreen(true);\n                            //console.log(\"Alcohol API failed\");\n                        }\n                    })\n                } else {\n                    setLoading(false);\n                    setErrorScreen(true);\n                    //console.log(\"API Failed\");\n                }\n            })\n        }\n    }\n    return (\n        <>\n            <NewHeader\n                className=\"specialities\"\n                title=\"SymptomIQ\"\n                showBackButton={true}\n                onBack={() => {\n                    history.push({ pathname: \"/history\" });\n                }}\n            />\n            <StepperContainer>\n                <Stepper\n                    steps={steps}\n                    currentStep={currentStep}\n                    completedStep={completedStep}\n                />\n            </StepperContainer>\n            {errorScreen ?\n                <ErrorPage /> :\n                <>\n                    <MainContainer>\n                        {loading && <SvaasLoader />}\n                        <Container>\n                            <OuestionWrapper>\n                                <Question>\n                                    {\n                                        userType === \"myself\" ? \"Do you usually smoke ?\" :\n                                            someone_else_gender === \"male\" ? \"Does he usually smoke ?\" :\n                                                someone_else_gender === \"female\" ? \"Does she usually smoke ?\" :\n                                                    \"Do they usually smoke ?\"\n                                    }\n                                </Question>\n                                <div onClick={() => setShowAboutSmoke(true)}><WarningIcon /></div>\n                            </OuestionWrapper>\n                            <ButtonWrapper>\n                                <ButtonRow>\n                                    {SmokeTypeFirstRow.map((data: any) => {\n                                        return (\n                                            <>\n                                                <SmokeButton\n                                                    //color={smokeType === data ? \"#494e9d\" : \"#5A5A5A\"}\n                                                    className={smokeType === \"\" ? \"\" : smokeType === data ? \"selected\" : \"disabled\"}\n                                                    onClick={() => {\n                                                        setSmokeType(data);\n                                                        //submitSmokeType();\n                                                    }}\n                                                >\n                                                    {data}\n                                                </SmokeButton>\n                                            </>\n                                        );\n                                    })}\n                                </ButtonRow>\n                                <ButtonRow>\n                                    {SmokeTypeSecondRow.map((data: any) => {\n                                        return (\n                                            <>\n                                                <SmokeButton\n                                                    //color={smokeType === data ? \"#494e9d\" : \"#5A5A5A\"}\n                                                    className={smokeType === \"\" ? \"\" : smokeType === data ? \"selected\" : \"disabled\"}\n                                                    onClick={() => {\n                                                        setSmokeType(data);\n                                                        //submitSmokeType();\n                                                    }}\n                                                >\n                                                    {data}\n                                                </SmokeButton>\n                                            </>\n                                        );\n                                    })}\n                                </ButtonRow>\n                            </ButtonWrapper>\n                        </Container>\n                        <DashedLine />\n                        <Container>\n                            <OuestionWrapper>\n                                <Question>\n                                    {\n                                        userType === \"myself\" ? \"Do you usually consume alcohol ?\" :\n                                            someone_else_gender === \"male\" ? \"Does he usually consume alcohol ?\" :\n                                                someone_else_gender === \"female\" ? \"Does she usually consume alcohol ?\" :\n                                                    \"Do they usually consume alcohol ?\"\n                                    }\n                                </Question>\n                                <div onClick={() => setShowAboutAlcohol(true)}><WarningIcon /></div>\n                            </OuestionWrapper>\n                            <ButtonWrapper>\n                                <ButtonRow>\n                                    {AlcoholTypeFirstRow.map((data: any) => {\n                                        return (\n                                            <>\n                                                <SmokeButton\n                                                    className={alcoholType === \"\" ? \"\" : alcoholType === data ? \"selected\" : \"disabled\"}\n                                                    onClick={() => {\n                                                        setAlcoholType(data);\n                                                        //submitAlcholType();\n                                                    }}\n                                                >\n                                                    {data}\n                                                </SmokeButton>\n                                            </>\n                                        );\n                                    })}\n                                </ButtonRow>\n                                <ButtonRow>\n                                    {AlcoholTypeSecondRow.map((data: any) => {\n                                        return (\n                                            <>\n                                                <SmokeButton\n                                                    className={alcoholType === \"\" ? \"\" : alcoholType === data ? \"selected\" : \"disabled\"}\n                                                    onClick={() => {\n                                                        setAlcoholType(data);\n                                                        //submitAlcholType();\n                                                    }}\n                                                >\n                                                    {data}\n                                                </SmokeButton>\n                                            </>\n                                        );\n                                    })}\n                                </ButtonRow>\n                            </ButtonWrapper>\n                        </Container>\n                    </MainContainer>\n                    <SubmitButton disabled={!smokeType || !alcoholType} onClick={handleSubmit}>\n                        <SubText>Analyze</SubText>\n                    </SubmitButton>\n                </>\n            }\n            {showAboutSmoke ?\n                <SidenavContainer>\n                    <SideNav\n                        className=\"closeClassName\"\n                        maxHeight=\"100%\"\n                        minHeight=\"70%\"\n                        isSpaceNeeded={true}\n                        onClose={() => {\n                            setShowAboutSmoke(false);\n                        }}\n                        title=\"\"\n                        closeClassName={\"open\"}>\n                        <AboutSideContainer>\n                            <div><Label>Former Smoker: </Label><Para> Smoked at least 100 cigarettes in his or her lifetime but who had quit smoking.</Para></div>\n                            <div><Label>Social Smoker: </Label><Para>Smoked at least 100 cigarettes in his or her lifetime, who smokes now, but does not smoke more than once a week.</Para></div>\n                            <div><Label>Regular Smoker: </Label><Para>Smoked at least 100 cigarettes in his or her lifetime, and who now smokes more than once a week.</Para></div>\n                            <div><Label>Non Smoker: </Label><Para>Never smoked or smoked less than 100 cigarettes in their lifetime.</Para></div>\n                        </AboutSideContainer>\n                    </SideNav>\n                </SidenavContainer> : null}\n            {showAboutAlcohol ?\n                <SidenavContainer>\n                    <SideNav\n                        className=\"closeClassName\"\n                        maxHeight=\"100%\"\n                        minHeight=\"70%\"\n                        isSpaceNeeded={true}\n                        onClose={() => {\n                            setShowAboutAlcohol(false);\n                        }}\n                        title=\"\"\n                        closeClassName={\"open\"}>\n                        <AboutSideContainer>\n                            <div><Label>Former Alcoholic: </Label><Para>Consumed atleast 12 drinks in his or her lifetime but no drinks in the past year.</Para></div>\n                            <div><Label>Social Drinker: </Label><Para>Average consuption of 3 drinks or fewer per week.</Para></div>\n                            <div><Label>Regular Drinker: </Label><Para>Average consuption of more than 7 drinks per week for women; more than 14 drinks per week for men.</Para></div>\n                            <div><Label>Non Alcoholic: </Label><Para>Never consumed alcohol or had fewer than 12 drinks in lifetime.</Para></div>\n                            <div>\n                                <Label>Definition of a drink:</Label>\n                                <ul>\n                                    <li><Para>12 ounces (355 mL) of beer with 5% alcohol content</Para></li>\n                                    <li><Para>8 ounces (237 mL) of malt liquor with 7% alcohol content</Para></li>\n                                    <li><Para>5 ounces (148 mL) of wine with 12% alcohol content</Para></li>\n                                    <li><Para>1.5 ounces (44 mL) or a \"shot\" of 80-proof (40% alcohol content) distilled spirits or liquor (e.g., gin, rum, vodka, whiskey)</Para></li>\n                                </ul>\n                            </div>\n                        </AboutSideContainer>\n                    </SideNav>\n                </SidenavContainer> : null}\n        </>\n    );\n};\nexport default Habits;\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/symptoms-severity/symptoms-severity.tsx",["629","630","631","632","633","634","635"],"//@ts-nocheck\nimport Stepper from \"@app/components/stepper/Stepper\";\nimport NewHeader from \"@app/components/svaas-header\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { CommonHeader, Container, InputSlider, Label, SliderContainer, StepperContainer, SubText, SubTextNext, SubmitButton, SymptomSlidersContainer, SymtomTypesContainer } from \"./severity-components\";\nimport { get_symptoms_attributes, update_symptoms } from \"@app/@services\";\nimport SvaasLoader from \"@app/assets/icons/svaasLoader\";\nimport ErrorPage from \"@app/components/error-page/error-page\";\nconst SymptomsSeverity = () => {\n    const history = useHistory();\n    const arr = history.location.state?.symptomsList || [];\n    const steps = [\"About\", \"Symptoms\", \"History\", \"Outcome\"];\n    const [currentStep, setCurrentStep] = useState<number>(2);\n    const [completedStep, setCompletedStep] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [errorScreen, setErrorScreen] = useState<boolean>(false);\n    const [symptomsDetails, setSymptomsDetails] = useState<any>([]);\n    const [symptomsAttributes, setSymptomsAttributes] = useState<any>([]);\n    const [isButtonDisabled, setIsButtonDisabled] = useState<boolean>(false);\n    useEffect(() => {\n        setIsButtonDisabled(true);\n        const newData = arr.map((data: any) => ({ ...data, severity: \"\", selectedSeverity: \"\" }));\n        setSymptomsDetails(newData);\n        const symptomsName = arr.map((symptom: any) => symptom.name);\n        get_all_symptoms_attributes(symptomsName);\n    }, []);\n    useEffect(() => {\n        if (symptomsAttributes && symptomsAttributes.length) {\n            let details = symptomsDetails ? symptomsDetails.map((symptom: any, ind: any) => ({\n                ...symptom, severity: symptomsAttributes[ind]?.Attributes[0] ? symptomsAttributes[ind]?.Attributes[0] : \"\",\n                selectedSeverity: symptomsAttributes[ind]?.Attributes[0] ? symptomsAttributes[ind]?.Attributes[0] : \"\"\n            })) : [];\n            setSymptomsDetails(details);\n        }\n    }, [symptomsAttributes])\n    const get_all_symptoms_attributes = async (symptomsName: any) => {\n        await get_symptoms_attributes(symptomsName).then((res: any) => {\n            if (res.status === 200 || res.status === 201) {\n                setSymptomsAttributes(res.data);\n                setIsButtonDisabled(false);\n            } else {\n                setErrorScreen(true);\n                setLoading(false);\n                setSymptomsAttributes([]);\n            }\n        })\n    }\n\n    const handleChangeSliderValue = (e: any, ind: number) => {\n        let symptomlist = [...symptomsDetails];\n        let severityNo = e.target.value;    //50\n        switch (severityNo) {\n            case \"0\":\n                symptomlist[ind] = {\n                    ...symptomlist[ind], severity: symptomsAttributes[ind] ? symptomsAttributes[ind].Attributes[0] : \"\",\n                    selectedSeverity: symptomsAttributes[ind] ? symptomsAttributes[ind].Attributes[0] : \"\"\n                };\n                break;\n            case \"50\":\n                symptomlist[ind] = {\n                    ...symptomlist[ind], severity: symptomsAttributes[ind] ? symptomsAttributes[ind].Attributes[1] : \"\",\n                    selectedSeverity: symptomsAttributes[ind] ? symptomsAttributes[ind].Attributes[1] : \"\"\n                };\n                break;\n            case \"100\":\n                symptomlist[ind] = {\n                    ...symptomlist[ind], severity: symptomsAttributes[ind] ? symptomsAttributes[ind].Attributes[2] : \"\",\n                    selectedSeverity: symptomsAttributes[ind] ? symptomsAttributes[ind].Attributes[2] : \"\"\n                };\n                break;\n            default:\n            // pass\n        }\n        setSymptomsDetails(symptomlist);\n    };\n\n    const submit_symptoms = async (body: any) => {\n        setLoading(true);\n        setErrorScreen(false);\n        await update_symptoms(body).then((res) => {\n            if (res.status === 200 || res.status === 201) {\n                const other_symptoms = res.data;\n                if (other_symptoms.length === 1 && (other_symptoms[0].toLowerCase().includes(\"none\") || other_symptoms[0].toLowerCase().includes(\"no other\"))) {\n                    history.push({\n                        pathname: \"/history\",\n                    })\n                    setLoading(false);\n                } else {\n                    history.push({\n                        pathname: \"./extras\",\n                        state: {\n                            other_symptoms: other_symptoms\n                        }\n                    })\n                    setLoading(false);\n                }\n            } else {\n                setErrorScreen(true);\n                setLoading(false);\n            }\n        })\n    }\n    const handleOnSubmit = () => {\n        submit_symptoms(symptomsDetails);\n    }\n    return (\n        <>\n            <NewHeader\n                className=\"specialities\"\n                title=\"SymptomIQ\"\n                showBackButton={true}\n                onBack={() => {\n                    history.push({ pathname: \"/symptoms\" });\n                }}\n            />\n            <StepperContainer>\n                <Stepper\n                    steps={steps}\n                    currentStep={currentStep}\n                    completedStep={completedStep}\n                />\n            </StepperContainer>\n            {errorScreen ?\n                <ErrorPage /> :\n                <>\n                    <Container>\n                        {loading && <SvaasLoader />}\n                        <CommonHeader>How severe are these symptoms?</CommonHeader>\n                        <SliderContainer>\n                            {symptomsDetails && symptomsDetails.map((symptom: any, ind: number) => {\n                                if (symptom?.severity != \"\")\n                                    return (\n                                        <SymptomSlidersContainer>\n                                            <Label>{symptom.name}</Label>\n                                            <InputSlider\n                                                type=\"range\"\n                                                min=\"0\"\n                                                max=\"100\"\n                                                defaultValue=\"0\"\n                                                step=\"50\"\n                                                onInput={(e) => handleChangeSliderValue(e, ind)}\n                                                className=\"sliderBlue\"\n                                            />\n                                            <SymtomTypesContainer>\n                                                {symptomsAttributes[ind] && symptomsAttributes[ind].Attributes?.map((attribute: any) => (\n                                                    <SubText selected={attribute == symptom.selectedSeverity}>\n                                                        {attribute}\n                                                    </SubText>\n                                                ))}\n                                            </SymtomTypesContainer>\n                                        </SymptomSlidersContainer>\n                                    )\n                            })}\n                        </SliderContainer>\n                    </Container>\n                    <SubmitButton onClick={handleOnSubmit} disabled={isButtonDisabled}>\n                        <SubTextNext>Next</SubTextNext>\n                    </SubmitButton> </>}\n        </>\n    )\n}\nexport default SymptomsSeverity;","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/cross-symbol.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/SymptomComponents.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/SympAnalyzer.tsx",["636","637","638","639","640","641","642","643"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport {\n  AgeParent,\n  AgeTitle,\n  ContentHeading,\n  DatePickerBox,\n  DetailsHeading,\n  ExtraDetails,\n  Gender,\n  GenderOptions,\n  GenderTitle,\n  Heading,\n  Input,\n  InputYears,\n  Option,\n  Options,\n  SpanYears,\n  SympChekerParent,\n  SymptomAnalyserTitle,\n} from \"./SymptomComponents\";\nimport { AiOutlineLeft } from \"react-icons/ai\";\nimport Stepper from \"./stepper/Stepper\";\nimport SecondPage from \"./SecondPage\";\nimport Symptoms from \"./Symptoms\";\n\nexport default function SymptomAnalyzer() {\n  console.log(2121);\n  const steps = [\"About\", \"Symptoms\", \"History\", \"Outcome\"];\n  const options = [\"My Self\", \"Someone Else\", \"Shreya\", \"Harshit\"];\n  const [currentStep, setCurrentStep] = useState<number>(1);\n  const [completedStep, setCompletedStep] = useState(false);\n  const [showDetails, setShowDetails] = useState(false);\n  const [personDetails, setPersonDetails] = useState(true);\n  const genderOptions = [\"Male\", \"Female\", \"Others\"];\n  const [chatId, setChatId] = useState(\"\");\n  const [showPages, setShowPages] = useState({\n    firstPage: false,\n    secondPage: false,\n    thirdPage: false,\n    sympAnalyzer: false,\n    fourthPage: false,\n  });\n  const [details, setDetails] = useState({\n    type: \"\",\n  });\n  const [extraDetails, setExtraDetails] = useState({ age: \"\", gender: \"\" });\n  const [addictDetails, setAddictDetails] = useState({\n    smoke: \"\",\n    drink: \"\",\n  });\n  const handleGender = (gender: any) => {\n    if (gender === \"Female\") {\n      setShowPages({\n        ...showPages,\n        firstPage: false,\n        secondPage: true,\n      });\n      setExtraDetails({\n        ...extraDetails,\n        gender: gender,\n      });\n    } else if (gender === \"Male\") {\n      setShowPages({\n        ...showPages,\n        firstPage: false,\n        secondPage: false,\n        sympAnalyzer: false,\n        thirdPage: true,\n      });\n      setPersonDetails(false);\n      setShowDetails(false);\n      setExtraDetails({\n        ...extraDetails,\n        gender: gender,\n      });\n    }\n  };\n  let dummyObj = {\n    user_id: \"123\",\n    tenant: \"svaas\",\n    channel: \"app\",\n    self_flag: true,\n    gender: \"Male\",\n    age: \"25\",\n    is_pregnant: true,\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    await axios\n      .post(\"https://svaaschatbot.azurewebsites.net/api/chat/create_chat\", {\n        user_id: \"123\",\n        tenant: \"svaas\",\n        channel: \"app\",\n        self_flag: true,\n        gender: \"Male\",\n        age: \"25\",\n        is_pregnant: true,\n      })\n      .then((res) => console.log(res.status, \"res\"))\n      .catch((err) => console.log(err, \"err\"));\n\n    // const axios = require(\"axios\");\n    // let data = JSON.stringify({\n    //   user_id: \"123\",\n    //   tenant: \"svaas\",\n    //   channel: \"app\",\n    //   self_flag: true,\n    //   gender: \"Male\",\n    //   age: \"25\",\n    //   is_pregnant: true,\n    // });\n\n    // let config = {\n    //   method: \"post\",\n    //   maxBodyLength: Infinity,\n    //   url: \"https://svaaschatbot.azurewebsites.net/api/chat/create_chat\",\n    //   headers: {\n    //     accept: \"application/json\",\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   data: data,\n    // };\n\n    // axios\n    //   .request(config)\n    //   .then((response: any) => {\n    //     console.log(JSON.stringify(response.data));\n    //   })\n    //   .catch((error: any) => {\n    //     console.log(error);\n    //   });\n  };\n\n  return (\n    <div>\n      <SympChekerParent>\n        <AiOutlineLeft />\n        <SymptomAnalyserTitle>SymptomIQ</SymptomAnalyserTitle>\n      </SympChekerParent>\n      <Stepper\n        steps={steps}\n        currentStep={currentStep}\n        completedStep={completedStep}\n      />\n      {personDetails ? (\n        <>\n          <Heading>Who are you checking symptoms for?</Heading>\n          <Options>\n            {options.map((option, ind) => (\n              <Option\n                key={ind}\n                className={details.type === option ? \"selected\" : \"\"}\n                onClick={() => {\n                  setDetails({ type: option });\n                  setShowDetails(true);\n                  setExtraDetails({ age: \"\", gender: \"\" });\n                }}\n              >\n                {option}\n              </Option>\n            ))}\n          </Options>\n        </>\n      ) : null}\n      {showDetails && (\n        <ExtraDetails>\n          <DetailsHeading>Please describe more about them..</DetailsHeading>\n          <div\n            style={{ border: \"0.5px solid #dfdede\", marginTop: \"10px\" }}\n          ></div>\n          <AgeTitle>Age</AgeTitle>\n          <AgeParent>\n            <InputYears\n              value={extraDetails.age}\n              onChange={(e) =>\n                setExtraDetails({ ...extraDetails, age: e.target.value })\n              }\n            />\n            <SpanYears>Years</SpanYears>\n          </AgeParent>\n          <GenderTitle>Gender</GenderTitle>\n          <GenderOptions>\n            {genderOptions.map((gender) => (\n              <Gender\n                key={gender}\n                className={gender === extraDetails.gender ? \"selcted\" : \"\"}\n                onClick={() => handleGender(gender)}\n              >\n                {gender}\n              </Gender>\n            ))}\n          </GenderOptions>\n          {showPages.secondPage ? (\n            <SecondPage\n              selectedGender={extraDetails.gender}\n              selectedUserValue={details.type}\n              addictDetails={addictDetails}\n              //   setSecondPageDetails={setSecondPageDetails}\n              setShowPages={setShowPages}\n              showPages={showPages}\n              extraDetails={extraDetails}\n              setExtraDetails={setExtraDetails}\n              setPersonDetails={setPersonDetails}\n              setShowDetails={setShowDetails}\n              currentStep={currentStep}\n              setCurrentStep={setCurrentStep}\n              completedStep={completedStep}\n            />\n          ) : null}\n        </ExtraDetails>\n      )}\n      {showPages.thirdPage ? <Symptoms /> : null}\n    </div>\n  );\n}\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/symptoms-duration/symp-duration-components.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/homescreen/homescreen-components.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/asthama.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/medical-history/medical-history-components.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/svaasLoader.tsx",["644","645","646","647","648"],"// @ts-nocheck\nimport { primaryColor, primaryRed, primarySBI } from \"@app/styles\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useLocation as location } from \"@app/utils\";\nimport { getTenant } from \"@app/utils\";\nimport svaasloader0 from \"@app/assets/icons/svaas-loader/svaasloader0.svg\";\nimport svaasloader1 from \"@app/assets/icons/svaas-loader/svaasloader1.svg\";\nimport svaasloader2 from \"@app/assets/icons/svaas-loader/svaasloader2.svg\";\nimport svaasloader3 from \"@app/assets/icons/svaas-loader/svaasloader3.svg\";\n\ntype Props = {\n  size?: string;\n  position?: string;\n  Svassreq?: boolean;\n};\n\nexport default function SvaasLoader({ position, Svassreq }: Props) {\n  const Loader = styled.div`\n    width: 70px;\n    height: 70px;\n    background-position: center;\n    background-repeat: no-repeat;\n    pointer-events: none;\n    background-size: 110px;\n    background-image: url(${svaasloader0});\n    animation: fill 2s linear infinite;\n    @keyframes fill {\n      0% {\n        background-image: url(${svaasloader0});\n      }\n      25% {\n        background-image: url(${svaasloader1});\n      }\n      50% {\n        background-image: url(${svaasloader2});\n      }\n      75% {\n        background-image: url(${svaasloader3});\n      }\n    }\n  `;\n  const LoaderOuter = styled.div`\n    position: ${position ? position : \"absolute\"};\n    width: 100%;\n    height: 100%;\n    left: 0;\n    top: 0;\n    display: flex;\n    color: #494e9d;\n    font-weight: 600;\n    flex-direction: column;\n    align-items: center;\n    pointer-events: none;\n    justify-content: center;\n  `;\n  return (\n    <LoaderOuter>\n      <Loader />\n      {Svassreq ? \"svass\" : \"\"}\n      {/* Svass */}\n    </LoaderOuter>\n  );\n}\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/diabetis.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/extra-symptoms/extra-symptoms-components.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/symptoms/symptoms-components.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/checkbox/checkbox.tsx",["649","650"],"//@ts-nocheck\nimport { useEffect, useState } from \"react\";\nimport { Container } from \"./checkbox-component\";\nimport Tick from \"@app/assets/icons/tick\";\n\nconst CheckBox = ({ isChecked, setIsChecked }) => {\n    const handleOnClickCheckbox = () => {\n        setIsChecked(!isChecked);\n    }\n    return (\n        <Container isChecked={isChecked} onClick={() => handleOnClickCheckbox()}>\n            {isChecked ? <>\n                <Tick />\n            </> : null}\n        </Container>\n    );\n}\nexport default CheckBox;","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/outcome/outcome-components.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/habits/habits-component.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/symptoms-severity/severity-components.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/stepper/Stepper.tsx",["651","652","653"],"import React, { useState } from \"react\";\nimport { TiTick } from \"react-icons/ti\";\nimport { Button, Para, StepperContainer } from \"../SymptomComponents\";\nimport \"./Stepper.css\";\nimport Tick from \"@app/assets/icons/tick\";\ntype StepperProps = {\n  steps: string[];\n  currentStep: any;\n  completedStep: any;\n};\nexport default function Stepper({\n  steps,\n  currentStep,\n  completedStep,\n}: StepperProps) {\n  return (\n    <>\n      <StepperContainer>\n        {steps?.map((step, ind: number) => (\n          <div\n            key={ind}\n            className={`step-item ${currentStep === ind + 1 && \"active\"} ${(ind + 1 < currentStep || completedStep) && \"complete\"\n              }`}\n          >\n            <div className=\"step\">\n              {/* <TiTick size={20} /> */}\n              <Tick />\n            </div>\n            <Para className={(currentStep >= ind + 1) ? \"active\" : \"\"}>\n              {step}\n            </Para>\n          </div>\n        ))}\n      </StepperContainer>\n    </>\n  );\n}\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/welcome-screen/welcome-screen.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/leaving-popup/leaving-popup.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/error-page/error-page.tsx",["654","655"],"import ErrorScreen from \"@app/assets/images/unableProcess.png\"\nimport { BottomContainer, ButtonContainer, CloseTest, Container, Content, ErrorContainer, Heading, RetakeTest } from \"./error-component\";\nimport { useHistory } from \"react-router\";\nimport { useState } from \"react\";\nimport LeavingMidway from \"../leaving-popup/leaving-popup\";\n\nconst ErrorPage = () => {\n    const history = useHistory();\n    const [leavingMidway, setLeavingMidway] = useState<boolean>(false);\n    const handleRetakeTest = () => {\n        history.push({\n            pathname: \"/home\"\n        })\n    }\n    const handleCloseClick = () => {\n        setLeavingMidway(true);\n    }\n    return <>\n        <Container>\n            <ErrorContainer>\n                <img src={ErrorScreen} />\n            </ErrorContainer>\n            <Heading>Unable to Process</Heading>\n            <Content>Please try again later or seek medical advice for your symptoms</Content>\n            <BottomContainer>\n                <ButtonContainer>\n                    <RetakeTest onClick={handleRetakeTest}>Retake Test</RetakeTest>\n                    <CloseTest onClick={() => { }}>Close</CloseTest>\n                </ButtonContainer>\n            </BottomContainer>\n        </Container>\n        {leavingMidway ?\n            <LeavingMidway onclose={setLeavingMidway} />\n            : null}\n    </>\n}\nexport default ErrorPage;","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/search-bar/search-bar.tsx",["656","657","658","659"],"//@ts-nocheck\nimport { useRef, useState } from \"react\";\nimport SearcIcon from \"@app/assets/icons/search-icon\";\nimport { SearchIcon } from \"@app/assets/icons\";\nimport { AddSymptomsButtonCont, AddSymptomsContainer, AddSymptomsHeader, Button, Container, IconDiv, Input, InputContainer, NotFoundContainer, NotFoundPara, SearchNotFound, SelectedContainer, SelectedSymptom, Suggestion, SuggestiveDiv } from \"./searchbar-components\";\nimport CrossSymbol from \"@app/assets/icons/cross-symbol\";\nimport NotFound from \"@app/assets/images/notfound.png\"\nimport BlueCross from \"@app/assets/icons/blueCross\";\nconst SearchBar = ({ symptomsList, setSearchBarSymptoms, searchBarSymptoms, disabled, fromPage }) => {\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [suggestions, setSuggestions] = useState([]);\n    const [notFound, setNotFound] = useState<boolean>(false);\n    const [showAddSymptom, setShowAddSymptom] = useState<boolean>(false);\n    const inputRef = useRef(null);\n    // const [searchBarSymptoms, setSearchBarSymptoms] = useState([]);\n\n    // Mock data for suggestions (replace this with actual data source or API call)\n    // const mockSuggestions = [\n    //     \"Apple\",\n    //     \"Banana\",\n    //     \"Cherry\",\n    //     \"Orange\",\n    //     \"Pineapple\",\n    //     \"Strawberry\"\n    // ];\n    const mockSuggestions = symptomsList && symptomsList.map((symptom) => (symptom.value));\n\n    //console.log(\"mockSuggestions: \", mockSuggestions);\n    //console.log(\"searchBarSymptoms: \", searchBarSymptoms);\n    const handleSearchChange = (event) => {\n        const { value } = event.target;\n        setSearchTerm(value);\n\n        // Show suggestions only after the minimum 3 letters are input\n        if (value.length > 3) {\n            setNotFound(false);\n            setShowAddSymptom(true);\n            //setNotFound(true);\n            const filteredSuggestions = mockSuggestions.filter((suggestion) =>\n                suggestion.toLowerCase().includes(value.toLowerCase())\n            );\n            if (filteredSuggestions.length) {\n                setShowAddSymptom(false);\n                // setNotFound(false);\n            }\n            setSuggestions(filteredSuggestions);\n        } else {\n            setShowAddSymptom(false);\n            setNotFound(false);\n            setSuggestions([]);\n        }\n        if (inputRef?.current) {\n            setTimeout(() => {\n                inputRef.current.scrollIntoView();\n            }, 100)\n        }\n    };\n    const handleAddSymptom = (symptomName: any) => {\n        const hasOnlyLetters = /^[A-Za-z\\s]*$/.test(symptomName);\n        const lowercaseSymptomName = symptomName.toLowerCase();\n        if (!searchBarSymptoms.some(existingSymptom => existingSymptom.toLowerCase() === lowercaseSymptomName) && hasOnlyLetters) {\n            setSearchBarSymptoms((prevsearchBarSymptoms) => [\n                ...prevsearchBarSymptoms,\n                symptomName\n            ]);\n        }\n        setSearchTerm(\"\");\n        setSuggestions([]);\n        setShowAddSymptom(false);\n        setNotFound(false);\n    };\n\n    const handleRemoveOption = (option) => {\n        setSearchBarSymptoms((prevsearchBarSymptoms) =>\n            prevsearchBarSymptoms.filter((item) => item !== option)\n        );\n    };\n    const handleNoClick = () => {\n        setNotFound(true);\n        setSuggestions([]);\n        setShowAddSymptom(false);\n    }\n\n    return (\n        <Container ref={inputRef}>\n            <InputContainer>\n                <div>{SearchIcon()}</div>\n                <Input\n                    type=\"text\"\n                    value={searchTerm}\n                    onChange={handleSearchChange}\n                    placeholder=\"Search heartburn, stomach cramps etc.\"\n                    disabled={disabled}\n                />\n            </InputContainer>\n            {(suggestions.length && !showAddSymptom) ?\n                <SuggestiveDiv>\n                    {suggestions.map((suggestion, idx) => (\n                        <Suggestion key={idx} onClick={() => handleAddSymptom(suggestion)}>\n                            {suggestion}\n                        </Suggestion>\n                    ))}\n                </SuggestiveDiv> : null}\n            {(showAddSymptom && !suggestions.length && !notFound) ?\n                <AddSymptomsContainer>\n                    <AddSymptomsHeader>\n                        This {fromPage == \"SymptomsPage\" ? \"symptom\" : \"condition\"} does not exist in the system. Do you want to add \"{searchTerm}\" as a {fromPage == \"SymptomsPage\" ? \"symptom\" : \"condition\"}?\n                    </AddSymptomsHeader>\n                    <AddSymptomsButtonCont>\n                        <Button onClick={() => handleNoClick()}>No</Button>\n                        <Button onClick={() => handleAddSymptom(searchTerm)}>Yes</Button>\n                    </AddSymptomsButtonCont>\n                </AddSymptomsContainer> : null}\n            {(notFound && !suggestions.length && !showAddSymptom) ?\n                <div>\n                    <NotFoundContainer>\n                        <img src={NotFound} alt=\"sorry, not found\" />\n                        <SearchNotFound>Search not found</SearchNotFound>\n                        <NotFoundPara>We couldn’t find what you searched for. Try again.</NotFoundPara>\n                    </NotFoundContainer>\n                </div> : null}\n            {(searchBarSymptoms.length && !suggestions.length && !notFound && !showAddSymptom) ?\n                <SelectedContainer>\n                    {searchBarSymptoms.map((option, idx) => (\n                        <SelectedSymptom key={idx} onClick={() => handleRemoveOption(option)}>\n                            {option}\n                            <IconDiv>\n                                {BlueCross()}\n                            </IconDiv>\n                        </SelectedSymptom>\n                    ))}\n                </SelectedContainer> : null}\n        </Container>\n    );\n};\n\nexport default SearchBar;\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/side-nav/side-nav.tsx",["660","661"],"import React, { useState, useEffect, useRef, createRef } from \"react\";\nimport CrossSymbol from \"@app/assets/icons/cross-symbol\";\nimport {\n  Container,\n  Title,\n  CloseIcon,\n  Content,\n  SubTitle,\n  Header,\n  Hspace,\n  HspaceMin,\n} from \"./side-nav-component\";\n//import { classNames } from \"react-select/src/utils\";\n\ntype Props = {\n  closeClassName: string;\n  children: any; //DependentDetails[];\n  onClose: () => void;\n  title?: string;\n  height?: string;\n  subTitle?: string;\n  content?: string;\n  onSubTitleClick?: any;\n  contentClassName?: any;\n  maxHeight?: any;\n  minHeight?: any;\n  className?: string;\n  isSpaceNeeded?: boolean;\n  floatButtonNeeded?: boolean;\n  CustomHeader?: any;\n};\n\nexport default function SideNav({\n  closeClassName,\n  onClose,\n  title,\n  children,\n  height,\n  subTitle,\n  content,\n  onSubTitleClick,\n  contentClassName,\n  maxHeight,\n  minHeight,\n  className,\n  isSpaceNeeded = true,\n  floatButtonNeeded = true,\n  CustomHeader,\n}: Props) {\n  const popupEle: any = useRef();\n  const [AnimateIt, setAnimateIt] = useState<boolean>(false);\n  useEffect(() => {\n    setTimeout(() => {\n      let body: any = document.getElementById(\"symptom_analyzer\");\n      body.classList.add(\"bodyOverlay\");\n      popupEle.current.parentNode.classList.add(\"SidenavBGOpen\");\n      setAnimateIt(true);\n    }, 20);\n  }, []);\n  return (\n    <Container\n      ref={popupEle}\n      params={{\n        height: height,\n        maxHeight: maxHeight,\n        minHeight: minHeight,\n        AnimateIt: AnimateIt,\n      }}\n      className={closeClassName}>\n      {floatButtonNeeded && (\n        <CloseIcon\n          onClick={() => {\n            popupEle.current.parentNode.classList.remove(\"SidenavBGOpen\");\n            popupEle.current.parentNode.classList.add(\"SidenavBGClose\");\n\n            let body: any = document.getElementById(\"symptom_analyzer\");\n            body.classList.remove(\"bodyOverlay\");\n\n            setAnimateIt(false);\n            setTimeout(() => {\n              onClose();\n            }, 800);\n          }}>\n          {CrossSymbol()}\n        </CloseIcon>\n      )}\n      {/* <Hspace size={30} /> */}\n      {/* <CustomHeaderJSx/> */}\n      {/* {CustomHeaderJSx && <CustomHeaderJSx/>} */}\n      {CustomHeader && <CustomHeader />}\n      {!CustomHeader && (\n        <Header className={className}>\n          <Title>{title ? title : \"\"}</Title>\n          <SubTitle onClick={onSubTitleClick}>\n            {subTitle ? subTitle : \"\"}\n          </SubTitle>\n        </Header>\n      )}\n      {isSpaceNeeded && <HspaceMin size={20} />}\n      {content && (\n        <Content className={contentClassName ? contentClassName : \"\"}>\n          {content}\n        </Content>\n      )}\n      {children}\n    </Container>\n  );\n}\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/index.ts",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/svaas-header/index.ts",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/checkbox/index.ts",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/@services/index.ts",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/loader-screen/index.ts",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/SecondPage.tsx",["662","663","664"],"import React, { useState } from \"react\";\nimport {\n  AppContainer,\n  ContentHeading,\n  Gender,\n  GenderContainer,\n  GenderOptions,\n  SecondPageContainer,\n  SympChekerParent,\n  SymptomAnalyserTitle,\n} from \"./SymptomComponents\";\n//import SmokeChecker from \"./SmokeChecker\";\n\ntype Props = {\n  selectedGender: string;\n  //setSecondPageDetails: any;\n  selectedUserValue: string;\n  addictDetails: any;\n  showPages: any;\n  setShowPages: any;\n  extraDetails: any;\n  setExtraDetails: any;\n  setPersonDetails: any;\n  setShowDetails: any;\n  currentStep: any;\n  setCurrentStep: any;\n  completedStep: any;\n};\nexport default function SecondPage({\n  selectedUserValue,\n  selectedGender,\n  //setSecondPageDetails,\n  addictDetails,\n  showPages,\n  setShowPages,\n  extraDetails,\n  setExtraDetails,\n  setPersonDetails,\n  setShowDetails,\n  currentStep,\n  setCurrentStep,\n  completedStep,\n}: Props) {\n  const options = [\"Pregnant\", \"Not Pregnant\"];\n  const [pregnant, setPregnant] = useState(\"\");\n\n  return (\n    <>\n      <SecondPageContainer>\n        {selectedGender === \"Female\" ? (\n          <GenderContainer>\n            <ContentHeading>Pregnancy Status</ContentHeading>\n            <GenderOptions>\n              {options.map((option) => (\n                <Gender\n                  key={option}\n                  className={pregnant === option ? \"selcted\" : \"\"}\n                  onClick={() => {\n                    //   setSecondPageDetails(\"pregnant\", option);\n                    setPregnant(option);\n                    setExtraDetails({ ...extraDetails, gender: \"\" });\n                    setShowPages({\n                      ...showPages,\n                      secondPage: false,\n                      sympAnalyzer: false,\n                      thirdPage: true,\n                    });\n                    setPersonDetails(false);\n                    setShowDetails(false);\n                    setCurrentStep((currentStep: any) => currentStep + 1);\n                  }}\n                >\n                  {option}\n                </Gender>\n              ))}\n            </GenderOptions>\n          </GenderContainer>\n        ) : null}\n        {/* {selectedGender === \"Male\" ? (\n        <SmokeChecker\n          value={addictDetails?.smoke}\n          saveAddictDetails={setSecondPageDetails}\n        />\n      ) : null} */}\n      </SecondPageContainer>\n    </>\n  );\n}\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/Symptoms.tsx",["665","666","667","668","669","670","671","672","673","674"],"import React, { useState } from \"react\";\n//@ts-ignore\nimport notfoundImage from \"../assets/images/notfound.png\";\n\nimport {\n  ContentHeading,\n  DisplaySearchPains,\n  InputSearch,\n  NotFoundImg,\n  NotFoundMessage,\n  SearchBlock,\n  SearchNotFoundContent,\n  SearchedBlock,\n  SelectedSymptom,\n  SelectedSymptoms,\n  SpanCross,\n  SpanSearchIcon,\n  SubText,\n  SubmitButton,\n  Svg,\n  Symptom,\n  SymptomName,\n  SymptomsContainer,\n  SymptomsData,\n  SymptomsFlex,\n  SymptomsParentContainer,\n} from \"./SymptomComponents\";\nimport SymptomsAnalyser from \"./SymptomsAnalyser\";\nimport {\n  Bodyache,\n  Fever,\n  Headache,\n  LooseMotions,\n  Nausea,\n  RunningNose,\n  SoreThroat,\n  StomachPain,\n  SearchIcon,\n} from \"../assets/icons\";\n\nexport default function Symptoms() {\n  const [search, setSearch] = useState<string>(\"\");\n  const [arr, setArr] = useState<any>([]);\n  const [symtomAnalyser, setSymtomAnalyser] = useState<boolean>(false);\n  const [disableButton, setDisableButton] = useState<boolean>(true);\n  const [enableBg, setEnableBg] = useState<boolean>(false);\n  const [isSelected, setIsSelected] = useState<boolean>(false);\n  const [symptomType, setSymptomType] = useState({ type: \"\" });\n  const [symptomsArr, setSymptomsArr] = useState<any>([]);\n  const [notfound, setNotfound] = useState<boolean>(false);\n  const symptoms = [\n    { icon: Fever, name: \"Fever\" },\n    { icon: Bodyache, name: \"Body Stiffness\" },\n    { icon: Headache, name: \"Headache\" },\n    { icon: Nausea, name: \"Nausea\" },\n    { icon: StomachPain, name: \"Stomach Pain\" },\n    { icon: LooseMotions, name: \"Loose Motions\" },\n    { icon: RunningNose, name: \"Runny Nose\" },\n    { icon: SoreThroat, name: \"Sore Throat\" },\n  ];\n  const levels = {\n    Fever: [\"99.5F-100.9F\", \"101F-102.9F\", \">103F\"],\n    default: [\"Mild\", \"Moderate\", \"Severe\"],\n  };\n  console.log(\"symsarr\", symptomsArr);\n  const [pains, setPains] = useState([\n    \"Pain\",\n    \"Leg pain\",\n    \"Ear pain\",\n    \"Arm pain\",\n    \"Chest pain\",\n    \"Jaw pain\",\n    \"Hip pain\",\n    \"Foot pain\",\n    \"Hand pain\",\n  ]);\n  const removeFromArr = (res: number) => {\n    let arrData = [...arr];\n    arrData = arrData.filter((data) => data !== res);\n    setArr(arrData);\n    setDisableButton(!arrData.length);\n    console.log(\"remove\", arr.length);\n  };\n  const selectSymptom = (res: any) => {\n    if (arr.includes(res)) return;\n    let selectedSymptom = symptoms.find((sign) => sign.name === res);\n    let indications: any = [...symptomsArr];\n    indications = indications.concat(selectedSymptom);\n    setSymptomsArr(indications);\n    setDisableButton(false);\n    setSymptomType({ type: res });\n    console.log(\"arrlen\", arr.length);\n  };\n  const selectPain = (res: any) => {\n    let arrData: any = [...arr];\n    let signs: any = [...pains];\n    let sign = signs.filter((symptom: any) => symptom === res);\n    arrData = arrData.concat(sign);\n    setArr(arrData);\n    setDisableButton(false);\n    setSymptomType({ type: res });\n    setSearch(\"\");\n  };\n  const handleSubmit = () => {\n    setSymtomAnalyser(true);\n  };\n  const filteredPains = (pains: any, search: any) => {\n    return pains.filter((item: any) => {\n      if (search === \"\") {\n        return item;\n      } else if (item.toLowerCase().includes(search.toLowerCase())) {\n        return item;\n      }\n    });\n  };\n  return (\n    <>\n      {symtomAnalyser ? (\n        <SymptomsAnalyser arr={arr} levels={levels} symptomsArr={symptomsArr} />\n      ) : (\n        <SymptomsParentContainer>\n          <ContentHeading>\n            Can you tell what symptoms are bothering her?\n          </ContentHeading>\n          <SubText style={{ marginTop: \"10px\" }}>\n            Choose from common symptoms\n          </SubText>\n          <SymptomsContainer>\n            {symptoms.map((symptom, id) => (\n              <SymptomsData>\n                <Symptom\n                  onClick={(event) => {\n                    if (event.currentTarget.classList.contains(\"selected\")) {\n                      //event.currentTarget.classList.remove(\"selected\");\n                      event.currentTarget.firstElementChild?.setAttribute(\n                        \"src\",\n                        symptom.name\n                      );\n                    } else {\n                      event.currentTarget.classList.add(\"selected\");\n                      event.currentTarget.firstElementChild?.setAttribute(\n                        \"src\",\n                        symptom.name\n                      );\n                    }\n                    selectSymptom(symptom.name);\n                  }}\n                  key={id}\n                >\n                  <Svg>{symptom.icon()}</Svg>\n                  <SymptomName>{symptom.name}</SymptomName>\n                </Symptom>\n              </SymptomsData>\n            ))}\n          </SymptomsContainer>\n          <SubText style={{ marginTop: \"10px\" }}>\n            Any other symptom you wish to add?\n          </SubText>\n          <SearchBlock>\n            <div>{SearchIcon()}</div>\n            <InputSearch\n              placeholder=\"Search heartburn,stomach cramps etc.\"\n              onChange={(e) => setSearch(e.target.value)}\n            />\n          </SearchBlock>\n          {arr.length ? (\n            <div>\n              <SelectedSymptoms>\n                <SubText>Symptoms added</SubText>\n                <SymptomsFlex>\n                  {arr.length > 0 &&\n                    arr.map((result: any, ind: any): any => (\n                      <SelectedSymptom key={ind}>\n                        {result}\n                        <SpanCross onClick={() => removeFromArr(result)}>\n                          X\n                        </SpanCross>\n                      </SelectedSymptom>\n                    ))}\n                </SymptomsFlex>\n              </SelectedSymptoms>\n            </div>\n          ) : null}\n          <SubmitButton disabled={disableButton}>\n            <SubText onClick={handleSubmit}>Next</SubText>\n          </SubmitButton>\n          <SearchedBlock>\n            {search &&\n              filteredPains(pains, search).map((res: any, id: number) => (\n                <DisplaySearchPains key={id} onClick={() => selectPain(res)}>\n                  {res}\n                </DisplaySearchPains>\n              ))}\n            {(search || !filteredPains(pains, search).length) && (\n              <>\n                <NotFoundImg src={notfoundImage} />\n                <NotFoundMessage>Search not found</NotFoundMessage>\n                <SearchNotFoundContent>\n                  Try again or seek medical advice if you have concerns about\n                  your health.\n                </SearchNotFoundContent>\n              </>\n            )}\n          </SearchedBlock>\n        </SymptomsParentContainer>\n      )}\n    </>\n  );\n}\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/checkbox/checkbox-component.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/tick.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/error-page/error-component.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/welcome-screen/welcome-screen-components.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/leaving-popup/leaving-popup-component.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/search-bar/searchbar-components.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/blueCross.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/side-nav/side-nav-component.tsx",["675"],"import styled from \"styled-components\";\nimport { primaryColor } from \"../../styles\";\n\ntype Props = {\n  height?: string;\n};\nexport const Container = styled.div`\n  width: 100%;\n  min-height: 0%;\n  max-height: 0%;\n  display: flex;\n  flex-direction: column;\n  // padding-bottom: 60px;\n  background: #FFFFFF;\n  // padding: 40px 16px 16px;\n  border-radius: 24px 24px 0 0;\n  box-sizing: border-box;\n  position: relative;\n  // transform: translateY(120%);\n  transition: all 1s ease;\n  &.open {\n    transform: translateY(0);\n  }\n  ${({ params }: { params: any }) => {\n    if (params.AnimateIt) {\n      if (params.height) {\n        return `height:${params.height};\n        min-height: 25%;\n        max-height: 60%;\n        `;\n      } else if (params.maxHeight) {\n        return `max-height:${params.maxHeight}`;\n      } else if (params.minHeight) {\n        return `min-height:${params.minHeight}`;\n      } else {\n        return `\n        min-height: 25%;\n        max-height: 60%;\n        `;\n      }\n    }\n  }}\n`;\n\nexport const Title = styled.div`\n  font-family: \"Nunito Sans\";\n  font-style: normal;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 20px;\n  color: #313131;\n  cursor: pointer;\n  color: ${primaryColor};\n`;\nexport const Content = styled.p`\n  position: absolute;\n  font-size: 12px;\n  color: grey;\n  font-weight: 300;\n  // margin: 12px 0 0;\n  top: 10px;\n  b {\n    font-weight: revert;\n  }\n`;\nexport const Name = styled.div`\n  font-size: 15px;\n  line-height: 16px;\n  color: black;\n`;\n\nexport const SubTitle = styled.div`\n  font-size: 14px;\n  line-height: 16px;\n  color: black;\n  cursor: pointer;\n`;\n\nexport const Relation = styled.div`\n  font-weight: 400;\n  font-size: 11px;\n  line-height: 13px;\n  color: #6f6f6f;\n`;\n\nexport const CloseIcon = styled.span`\n  //width: 32px;\n  //height: 32px;\n  background: #fff;\n  // background: transparent;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  //border: 1px solid rgba(0, 0, 0, 0.5);\n  position: absolute;\n  top: -16px;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 14px;\n  font-weight: 500;\n  //box-shadow: 0px 2px 8px rgb(0 0 0 / 50%);\n  cursor: pointer;\n  transition: all 0.5s ease;\n\n  width: 36px;\n  height: 36px;\n  border: 2px solid rgba(0, 0, 0, 0.5);\n  box-shadow: none;\n\n  &:hover {\n    transform: translateY(-8px) translateX(-50%);\n  }\n\n  svg {\n    width: 28px;\n    height: 28px;\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  // margin: 30px 16px;\n  margin: 0px 16px;\n  position: relative;\n  align-items: center;\n  margin-top: 46px;\n`;\nexport const Hspace = styled.div`\n  ${({ size }: { size: number }) => {\n    return `height: ${size}px`;\n  }}\n`;\nexport const HspaceMin = styled.div`\n  ${({ size }: { size: number }) => {\n    return `min-height: ${size}px`;\n  }}\n`;\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/circle-exclamation.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/bodyache.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/nausea.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/fever.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/running-nose.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/loose-motions.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/left-angle.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/stroke.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/sore-throat.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/stomach-pain.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/heart-disease.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/arthritis.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/headache.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/kidney-disease.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/hyper-tension.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/warn.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/hypo-thyrodism.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/halfCircle.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/search-icon.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/backarrow.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/Sinusitis.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/HalfCirclebg.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/homeIcon.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/bacteria.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/assets/icons/doctorIcon.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/svaas-header/svaas-header.tsx",["676","677","678","679","680","681","682"],"// @ts-nocheck\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Title,\n  SubTitle,\n  HeaderWrapper,\n  HeaderLeft,\n  TitleWrapper,\n} from \"./svaas-header-component\";\nimport Icon from \"@app/assets/icon\";\nimport { BackArrow } from \"@app/assets/icons\";\ntype Props = {\n  showBackButton?: boolean;\n  title: string;\n  subTitle?: string;\n  showFor?: { show: boolean; value: string };\n  showLocation?: { show: boolean; location: any; onLocationClick?: any };\n  onClickFor?: () => void;\n  onBack?: () => void;\n  loadProfiles?: () => void;\n  onMenu?: () => void;\n  onCart?: () => void;\n  onLabsCart?: () => void;\n  height?: string;\n  showMenu?: boolean;\n  showCart?: boolean;\n  cartCount?: number;\n  titleClassName?: string;\n  className?: any;\n  onSearch?: any;\n  submitSearch?: any;\n  searchValue?: string;\n  showSearch?: boolean;\n  showNotification?: boolean;\n  userImg?: any;\n  showConfirmed?: any;\n  cartCountCode?: any; // cart item operation code\n  showEdit?: boolean;\n  onEdit?: any;\n  onKeyPressFn?: any;\n  showLabCart?: any;\n  cartCountLabs?: any;\n  diagnosticSearchPlaceholder?: boolean;\n  doctorsPlaceholder?: boolean;\n  specialistsPlaceholder?: boolean;\n  inputRef?: any;\n  showAHCLabCart?: any;\n  AHCcartCount?: any;\n};\nexport default function Header(Props: Props) {\n  const goBack = () => {\n    Props.onBack && Props.onBack();\n  };\n  const loadProfiles = () => {\n    Props.loadProfiles && Props.loadProfiles();\n  };\n  const goMenu = () => {\n    Props.onMenu && Props.onMenu();\n  };\n  const goCart = () => {\n    Props.onCart && Props.onCart();\n  };\n  const goLabsCart = () => {\n    Props.onLabsCart && Props.onLabsCart();\n  };\n  return (\n    <>\n      {/* {showLogout && (\n        <LogoutDialog\n          onClose={() => {\n            setShowLogout(false);\n          }}\n        />\n      )} */}\n      <Container\n        id=\"svaasHeader\"\n        className={\"svaas-header \" + (Props.className ? Props.className : \"\")}\n      >\n        <HeaderWrapper>\n          <HeaderLeft>\n            <TitleWrapper className=\"titleWrapper\">\n              {Props.onBack && (\n                <span onClick={() => goBack()}>\n                  {/* <Icon name=\"backArrow\" /> */}\n                  {BackArrow()}\n                </span>\n              )}\n\n              <Title className={Props.titleClassName}>\n                {Props.title}\n                {Props.subTitle && (\n                  <SubTitle className=\"subTitleWrapper\">\n                    {Props.subTitle}\n                  </SubTitle>\n                )}\n              </Title>\n            </TitleWrapper>\n          </HeaderLeft>\n        </HeaderWrapper>\n      </Container>\n    </>\n  );\n}\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/loader-screen/loader-screen.tsx",["683","684"],"import { useEffect, useState } from \"react\";\nimport AnalyzingImage from \"../../assets/images/Analyzing.png\";\nimport { HeaderText, Image, ImageContainer, ProgressBar, ProgressContainer } from \"./loader-screen-components\";\nconst LoaderScreen = ({ startAnalyze, progress, setStartAnalyze, setProgress }) => {\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if (startAnalyze && progress < 95) {\n                setProgress(progress + 1);\n            }\n        }, 300);\n\n        return () => clearInterval(interval);\n    }, [startAnalyze, progress]);\n\n    return <>\n        <ImageContainer>\n            <Image src={AnalyzingImage} alt=\"analyzing image\" />\n            <ProgressContainer>\n                <ProgressBar style={{ width: `${progress}%` }}></ProgressBar>\n            </ProgressContainer>\n            <HeaderText>Analyzing your symptoms</HeaderText>\n        </ImageContainer>\n    </>;\n}\nexport default LoaderScreen;","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/SymptomsAnalyser.tsx",["685","686","687","688","689"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  FirstRow,\n  HomeContainer,\n  Input,\n  Label,\n  SecondRow,\n  SymptomsAnalyserContainer,\n} from \"./SymptomComponents\";\nimport SymptomsAnalyserSlider from \"./SymptomsAnalyserSlider\";\n\ntype ArrProps = {\n  arr: any;\n  levels: any;\n  symptomsArr: any;\n};\nfunction SymptomsAnalyser({ arr, levels, symptomsArr }: ArrProps) {\n  //console.log(\"arr\", arr);\n  const [data, setData] = useState([]);\n  const [symAnalyseSlider, setSymAnalyseSlider] = useState(false);\n  const [btnDisableBg, setBtnDisableBg] = useState(false);\n  const onlySymptomsNames = symptomsArr.map((item: any) => item.name);\n  //console.log(\"newArr\", newArr);\n  useEffect(() => {\n    const newArr = [...onlySymptomsNames, ...arr];\n    const arrData: any = newArr.map((a: any) => {\n      return {\n        label: a,\n        num: null,\n        day: \"\",\n        checked: false,\n      };\n    });\n    setData(arrData);\n  }, []);\n  const dayArr = [\n    { label: \"Select\", value: \"\" },\n    { label: \"Days\", value: \"days\" },\n    { label: \"Weeks\", value: \"weeks\" },\n    { label: \"Months\", value: \"months\" },\n  ];\n  // const handleCheckBox = (index: any) => {\n  //   console.log(\"index\", index);\n  // };\n  // const handleSelection = (event: any, index: number) => {\n  //   setSelectedDuration(event.target.value);\n  //   setInputArray((prev: any) => [\n  //     ...prev,\n  //     { value: inputValue, duration: event.target.value },\n  //   ]);\n  // };\n  const handleCheckBox = (index: number, event: any) => {\n    let arr: any = [...data];\n    let aboveData: any = data[index];\n    //console.log(aboveData[index]);\n    data.map((_, ind: number) => {\n      if (ind > 0) {\n        return (arr[ind] = {\n          ...arr[ind],\n          num: event.target.checked ? aboveData.num : \"\",\n          day: event.target.checked ? aboveData.day : \"\",\n        });\n      }\n    });\n    setData(arr);\n    console.log(arr);\n  };\n  const selectDuration = (ind: any, e: any) => {\n    let newData: any = [...data];\n    let selectedData: any = newData[ind];\n    selectedData.day = e.target.value;\n    newData[ind] = selectedData;\n    const plusObj = newData[ind + 1];\n    if (plusObj && plusObj.checked) {\n      newData[ind + 1] = { ...plusObj, day: e.target.value };\n    }\n    setData(newData);\n  };\n  const enableButton = () => {\n    const val = data.filter((item: any) => item.num && item.day);\n    console.log(\"datalen\", data);\n    console.log(\"vallen\", val);\n    if (val.length === data.length) {\n      return false;\n    }\n    return true;\n  };\n  return (\n    <div>\n      {symAnalyseSlider ? (\n        <SymptomsAnalyserSlider arr={data} levels={levels} />\n      ) : (\n        <>\n          {data.length > 0 &&\n            data.map((item: any, ind: number) => (\n              <SymptomsAnalyserContainer>\n                <FirstRow>\n                  <Label>{item.label}</Label>\n                </FirstRow>\n                <SecondRow className=\"secondrow\">\n                  <input\n                    type=\"number\"\n                    value={item.num}\n                    onChange={(e) => {\n                      let newData: any = [...data];\n                      let selectedData: any = newData[ind];\n                      selectedData.num = e.target.value;\n                      newData[ind] = selectedData;\n                      const plusObj = newData[ind + 1];\n                      if (plusObj && plusObj.checked) {\n                        newData[ind + 1] = { ...plusObj, day: e.target.value };\n                      }\n                      setData(newData);\n                    }}\n                    style={{ width: \"30%\" }}\n                  />\n                  <select\n                    value={item.day}\n                    onChange={(e) => {\n                      // handleSelection(e, ind);\n                      selectDuration(ind, e);\n                    }}\n                  >\n                    {dayArr.map((opt) => (\n                      <option value={opt.value}>{opt.label}</option>\n                    ))}\n                  </select>\n                  {ind === 0 && (\n                    <div>\n                      <input\n                        type=\"checkbox\"\n                        onChange={(e) => handleCheckBox(ind, e)}\n                      />\n                      <span>Apply to All</span>\n                    </div>\n                  )}\n                </SecondRow>\n              </SymptomsAnalyserContainer>\n            ))}\n          <HomeContainer>\n            <>{console.log(enableButton())}</>\n            <Button\n              style={{ marginTop: \"50px\" }}\n              disabled={enableButton()}\n              onClick={() => setSymAnalyseSlider(true)}\n            >\n              Next\n            </Button>\n          </HomeContainer>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default SymptomsAnalyser;\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/@services/common-apis/index.ts",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/svaas-header/svaas-header-component.tsx",["690"],"import styled from \"styled-components\";\nimport { blackColor, boldFont, primaryColor, whiteColor } from \"../../styles\";\n\ntype Props = {\n  height: string;\n  showConfirmed?: boolean;\n};\nexport const Container = styled.div`\n  background: linear-gradient(98.1deg, #e9fffc 8.51%, #dcdff1 88.61%);\n  display: flex;\n  // justify-content: center;\n  flex-direction: column;\n  gap: 20px;\n  padding: 0 16px 20px;\n  // padding: 30px 16px 20px;\n  transition: all 1s ease;\n  height: calc(12vh);\n  justify-content: end;\n  &.svaas-header {\n    &.scrolled {\n      .location-pill {\n        display: none;\n      }\n    }\n  }\n`;\nexport const Title = styled.h1`\nfont-family: Nunito Sans;\nfont-style: normal;\nfont-weight: 600;\nline-height: 24px;\n  ${boldFont};\n  font-size: 20px;\n  line-height: 24px;\n  color: ${blackColor};\n  margin: 0;\n`;\nexport const SubTitle = styled.sub`\n  color: ${primaryColor};\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 16px;\n  // margin-left: 20px;\n  display: flex;\n  min-height: 18px;\n  // margin-left: 50px;\n  // margin-top: -16px;\n`;\n\nexport const For = styled.div`\n  cursor: pointer;\n`;\nexport const AddresHolder = styled.div`\n  padding: 0 8px;\n  background: linear-gradient(\n    91.89deg,\n    rgba(227, 227, 227, 0.49) 17.94%,\n    rgba(255, 255, 255, 0.7) 63.38%,\n    rgba(234, 234, 234, 0.49) 93.15%\n  );\n  border: 0.75px solid #ffffff;\n  box-shadow: -4px -4px 15px -4px rgba(49, 49, 49, 0.1);\n  backdrop-filter: blur(40px);\n  border-radius: 16px;\n  cursor: pointer;\n  margin-right: 20px;\n  // width: 100px;\n  width: auto;\n  overflow: hidden;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #7c7c7b;\n  display: flex;\n  align-items: center;\n  height: 24px;\n  ${({ marque }: { marque: boolean }) => {\n    if (marque == true) {\n      return `width:180px;`;\n    }\n  }}\n`;\nexport const IconHolder = styled.div`\n  z-index: 10;\n  background: #fff;\n  height: 20px;\n  padding-right: 6px;\n`;\nexport const Location = styled.div`\n  white-space: nowrap;\n  color: ${primaryColor};\n  display: flex;\n  align-items: center;\n  font-size: 12px;\n  svg {\n    width: 16px;\n    height: 16px;\n    margin: 0 4px 0px 0px;\n    fill: ${whiteColor};\n    ${boldFont};\n    stroke-width: 2px;\n    stroke: ${primaryColor};\n    path {\n      fill: ${whiteColor};\n      stroke: ${primaryColor};\n    }\n  }\n  ${({ marque }: { marque: boolean }) => {\n    if (marque) {\n      return `\t\t\n\t\t\t\t\t-moz-transform: translateX(100%);\n\t\t\t\t\t-webkit-transform: translateX(100%);\n\t\t\t\t\ttransform: translateX(100%);\n\t\t\t\t\t-moz-animation: scroll-left 2s linear infinite;\n\t\t\t\t\t-webkit-animation: scroll-left 2s linear infinite;\n\t\t\t\t\tanimation: scroll-left 10s linear infinite;`;\n    }\n  }}\n`;\nexport const FlexRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: 300;\n  font-size: 12px;\n  line-height: 13px;\n  color: #6f6f6f;\n  margin-top: 16px;\n`;\nexport const DropdownText = styled.span`\n  display: inline-flex;\n  align-items: center;\n  gap: 6px;\n  color: ${primaryColor};\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 15px;\n`;\nexport const MenuDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  position: absolute;\n  // top:13%;\n  // margin-top: 6%;\n  right: 20px;\n  // gap: 20px;\n`;\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nexport const HeaderLeft = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  // height: 100%;\n  // align-items: left;\n  // justify-content: center;\n`;\n\nexport const LocationPill = styled.div`\n  margin-top: 6px;\n  display: flex;\n  justify-content: center;\n  width: 180px;\n  span {\n    white-space: nowrap;\n    overflow: hidden;\n    b {\n      font-family: NunitoSans700;\n    }\n  }\n  background: linear-gradient(\n    91.89deg,\n    rgba(227, 227, 227, 0.49) 17.94%,\n    rgba(255, 255, 255, 0.7) 63.38%,\n    rgba(234, 234, 234, 0.49) 93.15%\n  );\n  border-radius: 16px;\n  border: 0.75px solid #ffffff;\n  display: flex;\n  align-items: center;\n  height: 24px;\n  padding: 0px 8px;\n  gap: 4px;\n  font-size: 12px;\n  color: ${primaryColor};\n  transition: all 0.5s ease;\n  svg {\n    width: 16px;\n    height: 16px;\n    margin: 0 4px 0px 0px;\n    fill: ${whiteColor};\n    ${boldFont};\n    stroke-width: 2px;\n    stroke: ${primaryColor};\n    path {\n      fill: ${whiteColor};\n      stroke: ${primaryColor};\n    }\n  }\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n  gap: 8px;\n  cursor: pointer;\n  justify-content: flex-start;\n  align-items: baseline;\n\n  svg {\n    width: 16px;\n    height: 16px;\n    display: flex;\n    align-items: center;\n    transition: all 0.3s ease;\n    path {\n      stroke: ${primaryColor};\n    }\n  }\n  &:hover {\n    svg {\n      transform: translateX(-5px);\n    }\n  }\n`;\nexport const HeaderTitle = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const HeaderRight = styled.div`\n  // height: 100%;\n  // display: flex;\n  align-items: center;\n  // align-items: flex-end;\n`;\n\nexport const SearchWrapper = styled.div`\n  height: 40px;\n`;\n\nexport const Avtar = styled.div`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  /* margin-right: 8px;\n  margin-left: 12px; */\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 28px;\n  align-items: center;\n  text-align: center;\n  color: #ffffff;\n  ${({ imgSrc }: { imgSrc: any }) => {\n    if (imgSrc != null) {\n      return `\n          background-image: url(${imgSrc});\n          background-repeat:no-repeat;\n          background-size:100%;\n          `;\n    }\n  }};\n`;\n\nexport const Menu = styled.span`\n  ${({ showConfirmed }: Props) => {\n    if (showConfirmed) {\n      return `top:70px;\n    svg {\n      path{\n      fill:${whiteColor};\n    }\n  }`;\n    }\n  }}\n`;\nexport const CartHolder = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const CartIconContainer = styled.div`\n  position: relative;\n  cursor: pointer;\n  z-index: 1;\n`;\nexport const Cartcount = styled.div`\n  background: #494e9d;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: -6px;\n  right: -10px;\n\n  font-style: normal;\n  font-weight: 700;\n  font-size: 12px;\n  display: flex;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport const NotificationContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 16px;\n  cursor: pointer;\n`;\nexport const Hamburger = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 16px;\n  cursor: pointer;\n`;\n\nexport const LogoutContainer = styled.div`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 16px;\n  svg {\n    width: 22px;\n    height: 22px;\n    path {\n      fill: #494e9d;\n    }\n  }\n`;\nexport const IconBorder = styled.div`\n  cursor: pointer;\n  border: 2px solid #494e9d;\n  padding: 2px;\n  border-radius: 50%;\n  outline: none;\n`;\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/loader-screen/loader-screen-components.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/styles/index.ts",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/SymptomsAnalyserSlider.tsx",["691"],"import React, { useEffect, useState } from \"react\";\nimport RelatedSymptoms from \"./RelatedSymptoms\";\nimport {\n  Button,\n  CommonHeader,\n  HomeContainer,\n  InputSlider,\n  SubText,\n  SymptomSlidersContainer,\n  SymtomTypesContainer,\n} from \"./SymptomComponents\";\n\ntype ArrProps = {\n  arr: any;\n  levels: any;\n};\n\nexport default function SymptomsAnalyserSlider({ arr, levels }: ArrProps) {\n  //abc\n  const [sliderValue, setSliderValue] = useState<any>([]);\n  const [relatedSympts, setRelatedSympts] = useState<boolean>(false);\n  console.log(\"slidervalue\", sliderValue);\n  const handleChangeSliderValue = (e: any, ind: number) => {\n    const newObj: any = [...sliderValue];\n    newObj[ind] = { ...newObj[ind], val: e.target.value };\n    setSliderValue(newObj);\n  };\n  useEffect(() => {\n    const newData = arr.map((data: any) => ({ label: data, val: 0 }));\n    setSliderValue(newData);\n  }, []);\n  return (\n    <div>\n      {relatedSympts ? (\n        <RelatedSymptoms />\n      ) : (\n        <>\n          <CommonHeader>How severe are these symptoms?</CommonHeader>\n          {arr.map(({ label: item }: any, ind: number) => (\n            <SymptomSlidersContainer>\n              <div>{item}</div>\n              <InputSlider\n                type=\"range\"\n                min=\"0\"\n                max=\"100\"\n                value={sliderValue[ind]?.val}\n                step=\"50\"\n                onInput={(e) => handleChangeSliderValue(e, ind)}\n                className=\"sliderBlue\"\n              />\n              <SymtomTypesContainer>\n                <SubText>\n                  {levels[item] ? levels[item][0] : levels.default[0]}\n                </SubText>\n                <SubText>\n                  {levels[item] ? levels[item][1] : levels.default[1]}\n                </SubText>\n                <SubText>\n                  {levels[item] ? levels[item][2] : levels.default[2]}\n                </SubText>\n              </SymtomTypesContainer>\n            </SymptomSlidersContainer>\n          ))}\n          <HomeContainer>\n            <Button\n              style={{ background: \"#111e69\" }}\n              onClick={() => setRelatedSympts(true)}\n            >\n              Next\n            </Button>\n          </HomeContainer>\n        </>\n      )}\n    </div>\n  );\n}\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/@services/common-apis/common-apis.tsx",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/styles/colors.ts",["692","693"],"import { getTenant } from \"@app/utils\";\nconst Tenant = () => {\n  return getTenant();\n};\nexport const appBackgroundColor = \"#DEE4E8\";\nexport const appFontColor = \"#515151\";\nexport const titleGray = \"#5A5A5A\";\n\nexport const whiteColor = \"#FFFFFF\";\nexport const whiteHoverColor = \"#FAFAFA\";\nexport const whiteActiveColor = \"#F1F1F1\";\n\nexport const primaryColor = \"#494E9D\";\nexport const primaryHoverColor = \"#737BEC\";\nexport const primaryActiveColor = \"#737BEC\";\nexport const primaryBackground =\n  \"linear-gradient(161.48deg, #9096ED -36.17%, #494E9D 115.42%)\";\nexport const cardBackgroud = \"linear-gradient(0deg, #F8F8FF, #F8F8FF)\";\n\nexport const inputBackgroundColor = \"#FAFBFC\";\nexport const inputBackgroundHoverColor = \"#EBECF0\";\nexport const inputBorderColor = \"#E3E5E9\";\n\nexport const warmColor = \"#EB5757\";\nexport const warmHoverColor = \"#FCCFCF\";\nexport const warmActiveColor = \"#FFB4B4\";\nexport const warmBorderColor = \"#FFB4B4\";\nexport const warmBackground = \"#FFEFEF\";\n\nexport const secondaryColor = \"#494E9D\";\nexport const secondaryHoverColor = \"#CED0F2\";\nexport const secondaryActiveColor = \"#BBBEEF\";\nexport const secondaryBorderColor = \"#BBBEEF\";\nexport const secondaryBackground = \"#F2F3FF\";\nexport const blackColor = \"#313131\";\nexport const primaryRed2: any = () => {\n  if (Tenant() == \"SBI\") {\n    return \"#BC333A\";\n  } else if (Tenant() == \"Abhi\") {\n    return \"#BC333A\";\n  } else {\n    return \"red\";\n  }\n};\nexport const primaryRed: any = \"#BC333A\";\nexport const primarySBI = \"#52B2EA\";\nexport const bottomMenuSBI = \"#752576\";\nexport const lightPrimarySBI = \"#E9F1FE\";\nexport const lightPrimaryABHI = \"#bc333a0d\";\nexport const SBIBGTheme =\n  \"linear-gradient(329.17deg, #2F6AAF 32.24%, #752576 96.83%)\";\n\nexport const primaryPeach = \"#C78C86\";\nexport const secondaryYellow = \"#F0A841\";\nexport const primaryTextColor = \"#434343\";\nexport const warningOrange = \"#E78C07\";\nexport const successGreen = \"#0C7D4E\";\nexport const infoBlue = \"#1452C9\";\nexport const errorRed = \"#8D1218\";\nexport const greyv2 = \"#E9E9E9\";\nexport const secondaryColorV2 = \"#fdf5f6\";\nexport const textColor = \"#242424\";\nexport const greyTextColor = \"#7C7C7B\";\nexport const green = \"#43BC73\";\nexport const lineaGradient = \"linear-gradient(0deg, #F6F6FA, #F6F6FA)\";\nexport const svaasBackgroundColor =\n  \"linear-gradient(98.1deg, #E9FFFC 8.51%, #DCDFF1 88.61%)\";\nexport const infoBackground = \"#fefbe4\";\nexport const BlueBoldColor = \"#494E9D\";\nexport const PowderYellow = \"#FFFAD6\";\nexport const ContainerColor =\n  \"linear-gradient(0deg, #F6F6FA, #F6F6FA), #2041C6\";\nexport const GreyBgColor = \"#F6F6F8\";\nexport const darkGray = \"#929292\";\n/* \n    font colors\n */\nexport const lightFont = \"#6F6F6F\";\nexport const thickFont = \"#313131\";\nexport const grayText = \"#a5a5a5\";\nexport const successText = \"#43BC73\";\nexport const slotText = \"#CBCBCB\";\nexport const feeText = \"#7b7b7b\";\nexport const dateText = \"#cfd1ec\";\nexport const borderColor = \"#E3E4F9\";\nexport const DoveGrey = \"#CFCFCF\";\nexport const GrayPowderColor = \"#ADADAD\";\nexport const lightGreen = \"#E6F6F7\";\n\n/* \n    border colors\n */\n\n/* \n    Med2Styles\n */\n\nexport const svaasPrimaryTxt = \"#494F9D\";\nexport const lightBorder = \"#EEEEEE\";\nexport const orangeBorder = \"#f5c278\";\nexport const headerBackground =\n  \"linear-gradient(98.1deg, #e9fffc 8.51%, #dcdff1 88.61%);\";\nexport const svaas2Background =\n  \"linear-gradient(98.1deg, #e9fffc 8.51%, #dcdff1 88.61%);\";\n\n/* \n    AHCstyles\n */\nexport const mixedGreen = \"#59C4BA\";\nexport const Powdergrey = \"#C1C1C1\";\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/styles/font-styles.ts",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/styles/screen-size.ts",[],"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/RelatedSymptoms.tsx",["694","695","696","697","698"],"import React, { useState } from \"react\";\nimport { SearchIcon } from \"../assets/icons\";\nimport {\n  RelatedSymptomsSubtext,\n  RelatedSymptomsCheckBox,\n  //RelatedSymptomsData,\n  SubText,\n  Symptom,\n  SymptomsData,\n  WelcomeHeading,\n  RelatedMap,\n  RelatedParent,\n  RelatedSymptomsHeading,\n  SearchBlock,\n  SpanSearchIcon,\n  InputSearch,\n  SubmitButton,\n  CheckBox,\n} from \"./SymptomComponents\";\n\nconst Arr = [\n  \"Body Stiffness\",\n  \"Chils\",\n  \"Cough\",\n  \"Fatigue\",\n  \"Lose of Appetite\",\n  \"Nasal Congestion\",\n  \"Mild Chest Discomfort\",\n  \"Mild Breathing Difficulty\",\n];\nexport default function RelatedSymptoms() {\n  const [relatedSymptomsArr, setRelatedSymptomsArr] = useState(Arr);\n  const [search, setSearch] = useState<string>(\"\");\n  const [disableButton, setDisableButton] = useState<boolean>(true);\n  const [checked, setChecked] = useState(false);\n  const handleSubmit = () => {};\n  return (\n    <div>\n      <WelcomeHeading style={{ marginLeft: \"20px\" }}>\n        It must be tough dealing with these symptoms. <br />\n        Did she notice any other accompanying symptoms?\n      </WelcomeHeading>\n      <RelatedSymptomsCheckBox>\n        <CheckBox\n          type=\"checkbox\"\n          checked={checked}\n          onClick={(checked) => setChecked(!checked)}\n        />\n        <RelatedSymptomsSubtext>\n          Don't have any related symptoms?\n        </RelatedSymptomsSubtext>\n      </RelatedSymptomsCheckBox>\n      <RelatedSymptomsHeading>\n        Choose from suggested symptoms\n      </RelatedSymptomsHeading>\n      <RelatedParent>\n        {relatedSymptomsArr.map((symptom, index) => (\n          <RelatedMap key={index}>{symptom}</RelatedMap>\n        ))}\n      </RelatedParent>\n      <SearchBlock style={{ marginLeft: \"20px\" }}>\n        <SpanSearchIcon>{SearchIcon()}</SpanSearchIcon>\n        <InputSearch\n          placeholder=\"Search heartburn,stomach cramps etc.\"\n          onChange={(e) => setSearch(e.target.value)}\n        />\n      </SearchBlock>\n      <SubmitButton disabled={disableButton}>\n        <SubText onClick={handleSubmit}>Next</SubText>\n      </SubmitButton>\n    </div>\n  );\n}\n","/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/@services/interceptor.ts",["699"],"import axios from \"axios\";\n//import { clearLocalStorage } from \"@app/utils\";\nimport { msalInstance } from \"../index\";\nimport { loginRequest, azureAuthentication } from \"../modules/azure\";\nconst AZUREAUTHENTICATION: boolean = azureAuthentication.run();\n\nconst baseURL = process.env.REACT_APP_API_URL;\nconst service = axios.create({ baseURL });\nconst loginService = axios.create({ baseURL });\n\nconst saveToken = (access_token: any, refresh_token: any) => {\n  localStorage.setItem(\"healthbot_pwa_access_token\", access_token);\n  localStorage.setItem(\"healthbot_pwa_refresh_token\", refresh_token);\n};\n\n// const destroyToken = () => {\n//   clearLocalStorage();\n// };\n\nservice.interceptors.request.use(async (config: any) => {\n  config.headers[\"x-health-bot-app-name\"] = \"health-bot-app\";\n  const access_token = localStorage.getItem(\"health-bot_pwa_access_token\");\n\n  if (AZUREAUTHENTICATION) {\n    const account = msalInstance.getActiveAccount();\n    const response = await msalInstance.acquireTokenSilent({\n      ...loginRequest,\n      account: account,\n      //forceRefresh: false,\n    });\n    if (response) {\n      const bearer = `Bearer ${response.accessToken}`;\n      config.headers.Authorization = bearer;\n    } else {\n      config.headers.Authorization = access_token\n        ? `Bearer ${access_token}`\n        : config.url.includes(\"auth\")\n        ? \"test\"\n        : \"\";\n    }\n  } else {\n    config.headers.Authorization = access_token\n      ? `Bearer ${access_token}`\n      : config.url.includes(\"auth\")\n      ? \"test\"\n      : \"\";\n  }\n  return config;\n});\n\nexport { service, loginService };\n",{"ruleId":"700","severity":1,"message":"701","line":26,"column":10,"nodeType":"702","messageId":"703","endLine":26,"endColumn":12},{"ruleId":"700","severity":1,"message":"701","line":26,"column":23,"nodeType":"702","messageId":"703","endLine":26,"endColumn":25},{"ruleId":"700","severity":1,"message":"701","line":26,"column":39,"nodeType":"702","messageId":"703","endLine":26,"endColumn":41},{"ruleId":"700","severity":1,"message":"701","line":26,"column":55,"nodeType":"702","messageId":"703","endLine":26,"endColumn":57},{"ruleId":"700","severity":1,"message":"701","line":26,"column":75,"nodeType":"702","messageId":"703","endLine":26,"endColumn":77},{"ruleId":"704","severity":1,"message":"705","line":3,"column":22,"nodeType":"706","messageId":"707","endLine":3,"endColumn":31},{"ruleId":"704","severity":1,"message":"708","line":14,"column":11,"nodeType":"706","messageId":"707","endLine":14,"endColumn":22},{"ruleId":"704","severity":1,"message":"709","line":3,"column":11,"nodeType":"706","messageId":"707","endLine":3,"endColumn":22},{"ruleId":"704","severity":1,"message":"710","line":1,"column":25,"nodeType":"706","messageId":"707","endLine":1,"endColumn":29},{"ruleId":"704","severity":1,"message":"711","line":9,"column":8,"nodeType":"706","messageId":"707","endLine":9,"endColumn":17},{"ruleId":"704","severity":1,"message":"712","line":10,"column":8,"nodeType":"706","messageId":"707","endLine":10,"endColumn":15},{"ruleId":"704","severity":1,"message":"713","line":11,"column":10,"nodeType":"706","messageId":"707","endLine":11,"endColumn":19},{"ruleId":"704","severity":1,"message":"714","line":13,"column":9,"nodeType":"706","messageId":"707","endLine":13,"endColumn":16},{"ruleId":"704","severity":1,"message":"715","line":14,"column":9,"nodeType":"706","messageId":"707","endLine":14,"endColumn":16},{"ruleId":"704","severity":1,"message":"716","line":15,"column":9,"nodeType":"706","messageId":"707","endLine":15,"endColumn":14},{"ruleId":"704","severity":1,"message":"717","line":16,"column":10,"nodeType":"706","messageId":"707","endLine":16,"endColumn":21},{"ruleId":"704","severity":1,"message":"718","line":16,"column":23,"nodeType":"706","messageId":"707","endLine":16,"endColumn":37},{"ruleId":"704","severity":1,"message":"719","line":17,"column":10,"nodeType":"706","messageId":"707","endLine":17,"endColumn":23},{"ruleId":"704","severity":1,"message":"720","line":17,"column":25,"nodeType":"706","messageId":"707","endLine":17,"endColumn":41},{"ruleId":"704","severity":1,"message":"721","line":1,"column":10,"nodeType":"706","messageId":"707","endLine":1,"endColumn":23},{"ruleId":"704","severity":1,"message":"722","line":1,"column":25,"nodeType":"706","messageId":"707","endLine":1,"endColumn":37},{"ruleId":"704","severity":1,"message":"723","line":1,"column":8,"nodeType":"706","messageId":"707","endLine":1,"endColumn":13},{"ruleId":"704","severity":1,"message":"724","line":3,"column":26,"nodeType":"706","messageId":"707","endLine":3,"endColumn":38},{"ruleId":"704","severity":1,"message":"725","line":3,"column":40,"nodeType":"706","messageId":"707","endLine":3,"endColumn":55},{"ruleId":"704","severity":1,"message":"726","line":3,"column":57,"nodeType":"706","messageId":"707","endLine":3,"endColumn":70},{"ruleId":"704","severity":1,"message":"727","line":4,"column":7,"nodeType":"706","messageId":"707","endLine":4,"endColumn":15},{"ruleId":"700","severity":1,"message":"728","line":7,"column":44,"nodeType":"702","messageId":"703","endLine":7,"endColumn":46},{"ruleId":"700","severity":1,"message":"728","line":37,"column":23,"nodeType":"702","messageId":"703","endLine":37,"endColumn":25},{"ruleId":"704","severity":1,"message":"729","line":2,"column":6,"nodeType":"706","messageId":"707","endLine":2,"endColumn":11},{"ruleId":"704","severity":1,"message":"730","line":13,"column":7,"nodeType":"706","messageId":"707","endLine":13,"endColumn":24},{"ruleId":"704","severity":1,"message":"731","line":3,"column":10,"nodeType":"706","messageId":"707","endLine":3,"endColumn":23},{"ruleId":"704","severity":1,"message":"732","line":15,"column":3,"nodeType":"706","messageId":"707","endLine":15,"endColumn":10},{"ruleId":"704","severity":1,"message":"733","line":16,"column":3,"nodeType":"706","messageId":"707","endLine":16,"endColumn":9},{"ruleId":"704","severity":1,"message":"734","line":17,"column":3,"nodeType":"706","messageId":"707","endLine":17,"endColumn":15},{"ruleId":"704","severity":1,"message":"735","line":18,"column":3,"nodeType":"706","messageId":"707","endLine":18,"endColumn":16},{"ruleId":"704","severity":1,"message":"736","line":19,"column":3,"nodeType":"706","messageId":"707","endLine":19,"endColumn":9},{"ruleId":"704","severity":1,"message":"737","line":20,"column":3,"nodeType":"706","messageId":"707","endLine":20,"endColumn":19},{"ruleId":"704","severity":1,"message":"738","line":21,"column":3,"nodeType":"706","messageId":"707","endLine":21,"endColumn":23},{"ruleId":"704","severity":1,"message":"739","line":22,"column":3,"nodeType":"706","messageId":"707","endLine":22,"endColumn":20},{"ruleId":"704","severity":1,"message":"740","line":24,"column":3,"nodeType":"706","messageId":"707","endLine":24,"endColumn":16},{"ruleId":"704","severity":1,"message":"741","line":33,"column":8,"nodeType":"706","messageId":"707","endLine":33,"endColumn":18},{"ruleId":"704","severity":1,"message":"742","line":34,"column":8,"nodeType":"706","messageId":"707","endLine":34,"endColumn":16},{"ruleId":"704","severity":1,"message":"743","line":36,"column":8,"nodeType":"706","messageId":"707","endLine":36,"endColumn":19},{"ruleId":"704","severity":1,"message":"744","line":47,"column":10,"nodeType":"706","messageId":"707","endLine":47,"endColumn":21},{"ruleId":"704","severity":1,"message":"745","line":59,"column":10,"nodeType":"706","messageId":"707","endLine":59,"endColumn":18},{"ruleId":"704","severity":1,"message":"746","line":60,"column":10,"nodeType":"706","messageId":"707","endLine":60,"endColumn":14},{"ruleId":"704","severity":1,"message":"747","line":61,"column":9,"nodeType":"706","messageId":"707","endLine":61,"endColumn":25},{"ruleId":"704","severity":1,"message":"748","line":72,"column":9,"nodeType":"706","messageId":"707","endLine":72,"endColumn":29},{"ruleId":"704","severity":1,"message":"749","line":89,"column":9,"nodeType":"706","messageId":"707","endLine":89,"endColumn":25},{"ruleId":"704","severity":1,"message":"750","line":6,"column":38,"nodeType":"706","messageId":"707","endLine":6,"endColumn":46},{"ruleId":"704","severity":1,"message":"718","line":11,"column":25,"nodeType":"706","messageId":"707","endLine":11,"endColumn":39},{"ruleId":"704","severity":1,"message":"720","line":12,"column":27,"nodeType":"706","messageId":"707","endLine":12,"endColumn":43},{"ruleId":"751","severity":1,"message":"752","line":38,"column":8,"nodeType":"753","endLine":38,"endColumn":10,"suggestions":"754"},{"ruleId":"755","severity":1,"message":"756","line":43,"column":39,"nodeType":"757","messageId":"758","endLine":43,"endColumn":41},{"ruleId":"751","severity":1,"message":"759","line":57,"column":8,"nodeType":"753","endLine":57,"endColumn":19,"suggestions":"760"},{"ruleId":"755","severity":1,"message":"761","line":60,"column":27,"nodeType":"757","messageId":"762","endLine":60,"endColumn":29},{"ruleId":"700","severity":1,"message":"701","line":73,"column":41,"nodeType":"702","messageId":"703","endLine":73,"endColumn":43},{"ruleId":"700","severity":1,"message":"701","line":73,"column":81,"nodeType":"702","messageId":"703","endLine":73,"endColumn":83},{"ruleId":"751","severity":1,"message":"763","line":82,"column":8,"nodeType":"753","endLine":82,"endColumn":14,"suggestions":"764"},{"ruleId":"704","severity":1,"message":"765","line":7,"column":3,"nodeType":"706","messageId":"707","endLine":7,"endColumn":14},{"ruleId":"704","severity":1,"message":"766","line":17,"column":3,"nodeType":"706","messageId":"707","endLine":17,"endColumn":13},{"ruleId":"704","severity":1,"message":"767","line":18,"column":3,"nodeType":"706","messageId":"707","endLine":18,"endColumn":13},{"ruleId":"704","severity":1,"message":"768","line":23,"column":3,"nodeType":"706","messageId":"707","endLine":23,"endColumn":10},{"ruleId":"704","severity":1,"message":"769","line":24,"column":3,"nodeType":"706","messageId":"707","endLine":24,"endColumn":15},{"ruleId":"704","severity":1,"message":"718","line":56,"column":23,"nodeType":"706","messageId":"707","endLine":56,"endColumn":37},{"ruleId":"704","severity":1,"message":"720","line":57,"column":25,"nodeType":"706","messageId":"707","endLine":57,"endColumn":41},{"ruleId":"704","severity":1,"message":"770","line":256,"column":9,"nodeType":"706","messageId":"707","endLine":256,"endColumn":24},{"ruleId":"700","severity":1,"message":"728","line":313,"column":39,"nodeType":"702","messageId":"703","endLine":313,"endColumn":41},{"ruleId":"700","severity":1,"message":"728","line":327,"column":45,"nodeType":"702","messageId":"703","endLine":327,"endColumn":47},{"ruleId":"704","severity":1,"message":"750","line":4,"column":10,"nodeType":"706","messageId":"707","endLine":4,"endColumn":18},{"ruleId":"704","severity":1,"message":"771","line":4,"column":36,"nodeType":"706","messageId":"707","endLine":4,"endColumn":47},{"ruleId":"704","severity":1,"message":"772","line":4,"column":98,"nodeType":"706","messageId":"707","endLine":4,"endColumn":109},{"ruleId":"704","severity":1,"message":"773","line":4,"column":128,"nodeType":"706","messageId":"707","endLine":4,"endColumn":137},{"ruleId":"704","severity":1,"message":"774","line":4,"column":139,"nodeType":"706","messageId":"707","endLine":4,"endColumn":153},{"ruleId":"704","severity":1,"message":"775","line":4,"column":173,"nodeType":"706","messageId":"707","endLine":4,"endColumn":188},{"ruleId":"704","severity":1,"message":"776","line":4,"column":272,"nodeType":"706","messageId":"707","endLine":4,"endColumn":284},{"ruleId":"704","severity":1,"message":"777","line":4,"column":286,"nodeType":"706","messageId":"707","endLine":4,"endColumn":298},{"ruleId":"704","severity":1,"message":"778","line":6,"column":10,"nodeType":"706","messageId":"707","endLine":6,"endColumn":18},{"ruleId":"704","severity":1,"message":"779","line":6,"column":20,"nodeType":"706","messageId":"707","endLine":6,"endColumn":25},{"ruleId":"704","severity":1,"message":"780","line":6,"column":27,"nodeType":"706","messageId":"707","endLine":6,"endColumn":35},{"ruleId":"704","severity":1,"message":"781","line":6,"column":95,"nodeType":"706","messageId":"707","endLine":6,"endColumn":107},{"ruleId":"704","severity":1,"message":"782","line":6,"column":109,"nodeType":"706","messageId":"707","endLine":6,"endColumn":115},{"ruleId":"704","severity":1,"message":"783","line":6,"column":130,"nodeType":"706","messageId":"707","endLine":6,"endColumn":140},{"ruleId":"704","severity":1,"message":"784","line":6,"column":154,"nodeType":"706","messageId":"707","endLine":6,"endColumn":165},{"ruleId":"704","severity":1,"message":"718","line":18,"column":25,"nodeType":"706","messageId":"707","endLine":18,"endColumn":39},{"ruleId":"704","severity":1,"message":"720","line":19,"column":27,"nodeType":"706","messageId":"707","endLine":19,"endColumn":43},{"ruleId":"751","severity":1,"message":"785","line":77,"column":8,"nodeType":"753","endLine":77,"endColumn":10,"suggestions":"786"},{"ruleId":"751","severity":1,"message":"787","line":88,"column":8,"nodeType":"753","endLine":88,"endColumn":29,"suggestions":"788"},{"ruleId":"704","severity":1,"message":"771","line":4,"column":26,"nodeType":"706","messageId":"707","endLine":4,"endColumn":37},{"ruleId":"704","severity":1,"message":"772","line":4,"column":39,"nodeType":"706","messageId":"707","endLine":4,"endColumn":50},{"ruleId":"704","severity":1,"message":"789","line":4,"column":52,"nodeType":"706","messageId":"707","endLine":4,"endColumn":68},{"ruleId":"704","severity":1,"message":"773","line":4,"column":70,"nodeType":"706","messageId":"707","endLine":4,"endColumn":79},{"ruleId":"704","severity":1,"message":"774","line":4,"column":81,"nodeType":"706","messageId":"707","endLine":4,"endColumn":95},{"ruleId":"704","severity":1,"message":"775","line":4,"column":115,"nodeType":"706","messageId":"707","endLine":4,"endColumn":130},{"ruleId":"704","severity":1,"message":"776","line":4,"column":224,"nodeType":"706","messageId":"707","endLine":4,"endColumn":236},{"ruleId":"704","severity":1,"message":"777","line":4,"column":238,"nodeType":"706","messageId":"707","endLine":4,"endColumn":250},{"ruleId":"704","severity":1,"message":"783","line":6,"column":72,"nodeType":"706","messageId":"707","endLine":6,"endColumn":82},{"ruleId":"704","severity":1,"message":"790","line":8,"column":8,"nodeType":"706","messageId":"707","endLine":8,"endColumn":14},{"ruleId":"704","severity":1,"message":"791","line":10,"column":10,"nodeType":"706","messageId":"707","endLine":10,"endColumn":16},{"ruleId":"704","severity":1,"message":"718","line":17,"column":25,"nodeType":"706","messageId":"707","endLine":17,"endColumn":39},{"ruleId":"704","severity":1,"message":"720","line":18,"column":27,"nodeType":"706","messageId":"707","endLine":18,"endColumn":43},{"ruleId":"751","severity":1,"message":"792","line":67,"column":8,"nodeType":"753","endLine":67,"endColumn":10,"suggestions":"793"},{"ruleId":"751","severity":1,"message":"794","line":81,"column":8,"nodeType":"753","endLine":81,"endColumn":27,"suggestions":"795"},{"ruleId":"704","severity":1,"message":"750","line":6,"column":10,"nodeType":"706","messageId":"707","endLine":6,"endColumn":18},{"ruleId":"704","severity":1,"message":"771","line":6,"column":31,"nodeType":"706","messageId":"707","endLine":6,"endColumn":42},{"ruleId":"704","severity":1,"message":"772","line":6,"column":164,"nodeType":"706","messageId":"707","endLine":6,"endColumn":175},{"ruleId":"704","severity":1,"message":"774","line":6,"column":177,"nodeType":"706","messageId":"707","endLine":6,"endColumn":191},{"ruleId":"704","severity":1,"message":"775","line":6,"column":211,"nodeType":"706","messageId":"707","endLine":6,"endColumn":226},{"ruleId":"704","severity":1,"message":"783","line":7,"column":10,"nodeType":"706","messageId":"707","endLine":7,"endColumn":20},{"ruleId":"704","severity":1,"message":"790","line":9,"column":8,"nodeType":"706","messageId":"707","endLine":9,"endColumn":14},{"ruleId":"704","severity":1,"message":"718","line":28,"column":25,"nodeType":"706","messageId":"707","endLine":28,"endColumn":39},{"ruleId":"704","severity":1,"message":"720","line":29,"column":27,"nodeType":"706","messageId":"707","endLine":29,"endColumn":43},{"ruleId":"704","severity":1,"message":"796","line":30,"column":32,"nodeType":"706","messageId":"707","endLine":30,"endColumn":53},{"ruleId":"704","severity":1,"message":"797","line":31,"column":12,"nodeType":"706","messageId":"707","endLine":31,"endColumn":18},{"ruleId":"704","severity":1,"message":"798","line":31,"column":20,"nodeType":"706","messageId":"707","endLine":31,"endColumn":29},{"ruleId":"704","severity":1,"message":"799","line":32,"column":12,"nodeType":"706","messageId":"707","endLine":32,"endColumn":25},{"ruleId":"704","severity":1,"message":"800","line":32,"column":27,"nodeType":"706","messageId":"707","endLine":32,"endColumn":43},{"ruleId":"751","severity":1,"message":"794","line":75,"column":8,"nodeType":"753","endLine":75,"endColumn":27,"suggestions":"801"},{"ruleId":"704","severity":1,"message":"802","line":6,"column":10,"nodeType":"706","messageId":"707","endLine":6,"endColumn":16},{"ruleId":"704","severity":1,"message":"803","line":6,"column":18,"nodeType":"706","messageId":"707","endLine":6,"endColumn":31},{"ruleId":"704","severity":1,"message":"804","line":6,"column":33,"nodeType":"706","messageId":"707","endLine":6,"endColumn":45},{"ruleId":"704","severity":1,"message":"805","line":6,"column":47,"nodeType":"706","messageId":"707","endLine":6,"endColumn":60},{"ruleId":"704","severity":1,"message":"806","line":6,"column":62,"nodeType":"706","messageId":"707","endLine":6,"endColumn":73},{"ruleId":"704","severity":1,"message":"807","line":6,"column":75,"nodeType":"706","messageId":"707","endLine":6,"endColumn":89},{"ruleId":"704","severity":1,"message":"808","line":6,"column":91,"nodeType":"706","messageId":"707","endLine":6,"endColumn":101},{"ruleId":"704","severity":1,"message":"809","line":6,"column":103,"nodeType":"706","messageId":"707","endLine":6,"endColumn":122},{"ruleId":"704","severity":1,"message":"810","line":6,"column":164,"nodeType":"706","messageId":"707","endLine":6,"endColumn":177},{"ruleId":"704","severity":1,"message":"811","line":6,"column":207,"nodeType":"706","messageId":"707","endLine":6,"endColumn":221},{"ruleId":"704","severity":1,"message":"812","line":6,"column":265,"nodeType":"706","messageId":"707","endLine":6,"endColumn":275},{"ruleId":"704","severity":1,"message":"813","line":6,"column":290,"nodeType":"706","messageId":"707","endLine":6,"endColumn":297},{"ruleId":"704","severity":1,"message":"814","line":6,"column":299,"nodeType":"706","messageId":"707","endLine":6,"endColumn":310},{"ruleId":"704","severity":1,"message":"815","line":6,"column":312,"nodeType":"706","messageId":"707","endLine":6,"endColumn":327},{"ruleId":"704","severity":1,"message":"816","line":6,"column":329,"nodeType":"706","messageId":"707","endLine":6,"endColumn":345},{"ruleId":"704","severity":1,"message":"817","line":6,"column":347,"nodeType":"706","messageId":"707","endLine":6,"endColumn":357},{"ruleId":"704","severity":1,"message":"818","line":6,"column":359,"nodeType":"706","messageId":"707","endLine":6,"endColumn":375},{"ruleId":"704","severity":1,"message":"819","line":6,"column":377,"nodeType":"706","messageId":"707","endLine":6,"endColumn":388},{"ruleId":"704","severity":1,"message":"820","line":6,"column":390,"nodeType":"706","messageId":"707","endLine":6,"endColumn":401},{"ruleId":"704","severity":1,"message":"821","line":6,"column":403,"nodeType":"706","messageId":"707","endLine":6,"endColumn":420},{"ruleId":"704","severity":1,"message":"822","line":6,"column":422,"nodeType":"706","messageId":"707","endLine":6,"endColumn":433},{"ruleId":"704","severity":1,"message":"823","line":6,"column":435,"nodeType":"706","messageId":"707","endLine":6,"endColumn":452},{"ruleId":"704","severity":1,"message":"824","line":6,"column":467,"nodeType":"706","messageId":"707","endLine":6,"endColumn":481},{"ruleId":"704","severity":1,"message":"825","line":6,"column":483,"nodeType":"706","messageId":"707","endLine":6,"endColumn":507},{"ruleId":"704","severity":1,"message":"826","line":6,"column":528,"nodeType":"706","messageId":"707","endLine":6,"endColumn":538},{"ruleId":"704","severity":1,"message":"827","line":6,"column":580,"nodeType":"706","messageId":"707","endLine":6,"endColumn":595},{"ruleId":"704","severity":1,"message":"828","line":6,"column":597,"nodeType":"706","messageId":"707","endLine":6,"endColumn":607},{"ruleId":"704","severity":1,"message":"829","line":6,"column":609,"nodeType":"706","messageId":"707","endLine":6,"endColumn":619},{"ruleId":"704","severity":1,"message":"830","line":6,"column":649,"nodeType":"706","messageId":"707","endLine":6,"endColumn":664},{"ruleId":"704","severity":1,"message":"831","line":6,"column":679,"nodeType":"706","messageId":"707","endLine":6,"endColumn":691},{"ruleId":"704","severity":1,"message":"832","line":6,"column":708,"nodeType":"706","messageId":"707","endLine":6,"endColumn":718},{"ruleId":"704","severity":1,"message":"833","line":6,"column":720,"nodeType":"706","messageId":"707","endLine":6,"endColumn":730},{"ruleId":"704","severity":1,"message":"834","line":6,"column":732,"nodeType":"706","messageId":"707","endLine":6,"endColumn":742},{"ruleId":"704","severity":1,"message":"835","line":6,"column":744,"nodeType":"706","messageId":"707","endLine":6,"endColumn":757},{"ruleId":"704","severity":1,"message":"836","line":6,"column":759,"nodeType":"706","messageId":"707","endLine":6,"endColumn":773},{"ruleId":"704","severity":1,"message":"837","line":6,"column":900,"nodeType":"706","messageId":"707","endLine":6,"endColumn":915},{"ruleId":"704","severity":1,"message":"838","line":6,"column":917,"nodeType":"706","messageId":"707","endLine":6,"endColumn":927},{"ruleId":"704","severity":1,"message":"839","line":6,"column":952,"nodeType":"706","messageId":"707","endLine":6,"endColumn":963},{"ruleId":"704","severity":1,"message":"840","line":6,"column":994,"nodeType":"706","messageId":"707","endLine":6,"endColumn":1001},{"ruleId":"704","severity":1,"message":"841","line":6,"column":1003,"nodeType":"706","messageId":"707","endLine":6,"endColumn":1010},{"ruleId":"704","severity":1,"message":"842","line":8,"column":31,"nodeType":"706","messageId":"707","endLine":8,"endColumn":53},{"ruleId":"704","severity":1,"message":"843","line":9,"column":10,"nodeType":"706","messageId":"707","endLine":9,"endColumn":18},{"ruleId":"704","severity":1,"message":"844","line":12,"column":8,"nodeType":"706","messageId":"707","endLine":12,"endColumn":15},{"ruleId":"704","severity":1,"message":"845","line":13,"column":8,"nodeType":"706","messageId":"707","endLine":13,"endColumn":16},{"ruleId":"704","severity":1,"message":"846","line":14,"column":8,"nodeType":"706","messageId":"707","endLine":14,"endColumn":17},{"ruleId":"704","severity":1,"message":"718","line":23,"column":25,"nodeType":"706","messageId":"707","endLine":23,"endColumn":39},{"ruleId":"704","severity":1,"message":"720","line":24,"column":27,"nodeType":"706","messageId":"707","endLine":24,"endColumn":43},{"ruleId":"704","severity":1,"message":"847","line":32,"column":12,"nodeType":"706","messageId":"707","endLine":32,"endColumn":29},{"ruleId":"751","severity":1,"message":"848","line":43,"column":8,"nodeType":"753","endLine":43,"endColumn":10,"suggestions":"849"},{"ruleId":"704","severity":1,"message":"850","line":58,"column":11,"nodeType":"706","messageId":"707","endLine":58,"endColumn":27},{"ruleId":"704","severity":1,"message":"851","line":61,"column":11,"nodeType":"706","messageId":"707","endLine":61,"endColumn":35},{"ruleId":"700","severity":1,"message":"728","line":72,"column":36,"nodeType":"702","messageId":"703","endLine":72,"endColumn":38},{"ruleId":"700","severity":1,"message":"728","line":72,"column":57,"nodeType":"702","messageId":"703","endLine":72,"endColumn":59},{"ruleId":"704","severity":1,"message":"852","line":99,"column":11,"nodeType":"706","messageId":"707","endLine":99,"endColumn":26},{"ruleId":"704","severity":1,"message":"853","line":104,"column":11,"nodeType":"706","messageId":"707","endLine":104,"endColumn":35},{"ruleId":"704","severity":1,"message":"854","line":108,"column":11,"nodeType":"706","messageId":"707","endLine":108,"endColumn":38},{"ruleId":"704","severity":1,"message":"855","line":6,"column":30,"nodeType":"706","messageId":"707","endLine":6,"endColumn":42},{"ruleId":"704","severity":1,"message":"856","line":6,"column":44,"nodeType":"706","messageId":"707","endLine":6,"endColumn":59},{"ruleId":"704","severity":1,"message":"857","line":6,"column":196,"nodeType":"706","messageId":"707","endLine":6,"endColumn":218},{"ruleId":"704","severity":1,"message":"718","line":15,"column":25,"nodeType":"706","messageId":"707","endLine":15,"endColumn":39},{"ruleId":"704","severity":1,"message":"720","line":16,"column":27,"nodeType":"706","messageId":"707","endLine":16,"endColumn":43},{"ruleId":"704","severity":1,"message":"718","line":14,"column":25,"nodeType":"706","messageId":"707","endLine":14,"endColumn":39},{"ruleId":"704","severity":1,"message":"720","line":15,"column":27,"nodeType":"706","messageId":"707","endLine":15,"endColumn":43},{"ruleId":"751","severity":1,"message":"858","line":27,"column":8,"nodeType":"753","endLine":27,"endColumn":10,"suggestions":"859"},{"ruleId":"751","severity":1,"message":"860","line":36,"column":8,"nodeType":"753","endLine":36,"endColumn":28,"suggestions":"861"},{"ruleId":"755","severity":1,"message":"756","line":131,"column":97,"nodeType":"757","messageId":"758","endLine":131,"endColumn":99},{"ruleId":"700","severity":1,"message":"701","line":132,"column":55,"nodeType":"702","messageId":"703","endLine":132,"endColumn":57},{"ruleId":"700","severity":1,"message":"728","line":147,"column":82,"nodeType":"702","messageId":"703","endLine":147,"endColumn":84},{"ruleId":"704","severity":1,"message":"862","line":7,"column":3,"nodeType":"706","messageId":"707","endLine":7,"endColumn":17},{"ruleId":"704","severity":1,"message":"740","line":8,"column":3,"nodeType":"706","messageId":"707","endLine":8,"endColumn":16},{"ruleId":"704","severity":1,"message":"863","line":15,"column":3,"nodeType":"706","messageId":"707","endLine":15,"endColumn":8},{"ruleId":"704","severity":1,"message":"720","line":33,"column":25,"nodeType":"706","messageId":"707","endLine":33,"endColumn":41},{"ruleId":"704","severity":1,"message":"864","line":37,"column":10,"nodeType":"706","messageId":"707","endLine":37,"endColumn":16},{"ruleId":"704","severity":1,"message":"865","line":37,"column":18,"nodeType":"706","messageId":"707","endLine":37,"endColumn":27},{"ruleId":"704","severity":1,"message":"866","line":49,"column":25,"nodeType":"706","messageId":"707","endLine":49,"endColumn":41},{"ruleId":"704","severity":1,"message":"867","line":80,"column":7,"nodeType":"706","messageId":"707","endLine":80,"endColumn":15},{"ruleId":"704","severity":1,"message":"868","line":2,"column":10,"nodeType":"706","messageId":"707","endLine":2,"endColumn":22},{"ruleId":"704","severity":1,"message":"869","line":2,"column":24,"nodeType":"706","messageId":"707","endLine":2,"endColumn":34},{"ruleId":"704","severity":1,"message":"870","line":2,"column":36,"nodeType":"706","messageId":"707","endLine":2,"endColumn":46},{"ruleId":"704","severity":1,"message":"871","line":5,"column":25,"nodeType":"706","messageId":"707","endLine":5,"endColumn":33},{"ruleId":"704","severity":1,"message":"872","line":6,"column":10,"nodeType":"706","messageId":"707","endLine":6,"endColumn":19},{"ruleId":"704","severity":1,"message":"713","line":2,"column":10,"nodeType":"706","messageId":"707","endLine":2,"endColumn":19},{"ruleId":"704","severity":1,"message":"873","line":2,"column":21,"nodeType":"706","messageId":"707","endLine":2,"endColumn":29},{"ruleId":"704","severity":1,"message":"873","line":1,"column":17,"nodeType":"706","messageId":"707","endLine":1,"endColumn":25},{"ruleId":"704","severity":1,"message":"874","line":2,"column":10,"nodeType":"706","messageId":"707","endLine":2,"endColumn":16},{"ruleId":"704","severity":1,"message":"875","line":3,"column":10,"nodeType":"706","messageId":"707","endLine":3,"endColumn":16},{"ruleId":"704","severity":1,"message":"850","line":15,"column":11,"nodeType":"706","messageId":"707","endLine":15,"endColumn":27},{"ruleId":"876","severity":1,"message":"877","line":21,"column":17,"nodeType":"878","endLine":21,"endColumn":42},{"ruleId":"704","severity":1,"message":"879","line":3,"column":8,"nodeType":"706","messageId":"707","endLine":3,"endColumn":17},{"ruleId":"704","severity":1,"message":"880","line":6,"column":8,"nodeType":"706","messageId":"707","endLine":6,"endColumn":19},{"ruleId":"700","severity":1,"message":"728","line":107,"column":40,"nodeType":"702","messageId":"703","endLine":107,"endColumn":42},{"ruleId":"700","severity":1,"message":"728","line":107,"column":164,"nodeType":"702","messageId":"703","endLine":107,"endColumn":166},{"ruleId":"704","severity":1,"message":"881","line":1,"column":46,"nodeType":"706","messageId":"707","endLine":1,"endColumn":55},{"ruleId":"704","severity":1,"message":"882","line":10,"column":3,"nodeType":"706","messageId":"707","endLine":10,"endColumn":9},{"ruleId":"704","severity":1,"message":"883","line":3,"column":3,"nodeType":"706","messageId":"707","endLine":3,"endColumn":15},{"ruleId":"704","severity":1,"message":"737","line":9,"column":3,"nodeType":"706","messageId":"707","endLine":9,"endColumn":19},{"ruleId":"704","severity":1,"message":"738","line":10,"column":3,"nodeType":"706","messageId":"707","endLine":10,"endColumn":23},{"ruleId":"704","severity":1,"message":"774","line":17,"column":3,"nodeType":"706","messageId":"707","endLine":17,"endColumn":17},{"ruleId":"704","severity":1,"message":"884","line":46,"column":10,"nodeType":"706","messageId":"707","endLine":46,"endColumn":18},{"ruleId":"704","severity":1,"message":"885","line":46,"column":20,"nodeType":"706","messageId":"707","endLine":46,"endColumn":31},{"ruleId":"704","severity":1,"message":"886","line":47,"column":10,"nodeType":"706","messageId":"707","endLine":47,"endColumn":20},{"ruleId":"704","severity":1,"message":"887","line":47,"column":22,"nodeType":"706","messageId":"707","endLine":47,"endColumn":35},{"ruleId":"704","severity":1,"message":"888","line":48,"column":10,"nodeType":"706","messageId":"707","endLine":48,"endColumn":21},{"ruleId":"704","severity":1,"message":"889","line":50,"column":10,"nodeType":"706","messageId":"707","endLine":50,"endColumn":18},{"ruleId":"704","severity":1,"message":"890","line":50,"column":20,"nodeType":"706","messageId":"707","endLine":50,"endColumn":31},{"ruleId":"704","severity":1,"message":"891","line":66,"column":17,"nodeType":"706","messageId":"707","endLine":66,"endColumn":25},{"ruleId":"755","severity":1,"message":"892","line":108,"column":37,"nodeType":"757","messageId":"758","endLine":108,"endColumn":39},{"ruleId":"704","severity":1,"message":"729","line":4,"column":6,"nodeType":"706","messageId":"707","endLine":4,"endColumn":11},{"ruleId":"704","severity":1,"message":"873","line":2,"column":17,"nodeType":"706","messageId":"707","endLine":2,"endColumn":25},{"ruleId":"704","severity":1,"message":"713","line":2,"column":27,"nodeType":"706","messageId":"707","endLine":2,"endColumn":36},{"ruleId":"704","severity":1,"message":"893","line":11,"column":8,"nodeType":"706","messageId":"707","endLine":11,"endColumn":12},{"ruleId":"704","severity":1,"message":"894","line":55,"column":9,"nodeType":"706","messageId":"707","endLine":55,"endColumn":21},{"ruleId":"704","severity":1,"message":"895","line":58,"column":9,"nodeType":"706","messageId":"707","endLine":58,"endColumn":15},{"ruleId":"704","severity":1,"message":"896","line":61,"column":9,"nodeType":"706","messageId":"707","endLine":61,"endColumn":15},{"ruleId":"704","severity":1,"message":"897","line":64,"column":9,"nodeType":"706","messageId":"707","endLine":64,"endColumn":19},{"ruleId":"704","severity":1,"message":"873","line":1,"column":21,"nodeType":"706","messageId":"707","endLine":1,"endColumn":29},{"ruleId":"751","severity":1,"message":"898","line":14,"column":8,"nodeType":"753","endLine":14,"endColumn":32,"suggestions":"899"},{"ruleId":"704","severity":1,"message":"863","line":6,"column":3,"nodeType":"706","messageId":"707","endLine":6,"endColumn":8},{"ruleId":"704","severity":1,"message":"900","line":22,"column":10,"nodeType":"706","messageId":"707","endLine":22,"endColumn":22},{"ruleId":"704","severity":1,"message":"901","line":22,"column":24,"nodeType":"706","messageId":"707","endLine":22,"endColumn":39},{"ruleId":"751","severity":1,"message":"902","line":36,"column":6,"nodeType":"753","endLine":36,"endColumn":8,"suggestions":"903"},{"ruleId":"755","severity":1,"message":"756","line":57,"column":31,"nodeType":"757","messageId":"758","endLine":57,"endColumn":33},{"ruleId":"700","severity":1,"message":"728","line":79,"column":16,"nodeType":"702","messageId":"703","endLine":79,"endColumn":18},{"ruleId":"751","severity":1,"message":"858","line":31,"column":6,"nodeType":"753","endLine":31,"endColumn":8,"suggestions":"904"},{"ruleId":"700","severity":1,"message":"728","line":37,"column":16,"nodeType":"702","messageId":"703","endLine":37,"endColumn":18},{"ruleId":"700","severity":1,"message":"728","line":39,"column":23,"nodeType":"702","messageId":"703","endLine":39,"endColumn":25},{"ruleId":"704","severity":1,"message":"905","line":8,"column":3,"nodeType":"706","messageId":"707","endLine":8,"endColumn":10},{"ruleId":"704","severity":1,"message":"776","line":9,"column":3,"nodeType":"706","messageId":"707","endLine":9,"endColumn":15},{"ruleId":"704","severity":1,"message":"796","line":32,"column":30,"nodeType":"706","messageId":"707","endLine":32,"endColumn":51},{"ruleId":"704","severity":1,"message":"797","line":33,"column":10,"nodeType":"706","messageId":"707","endLine":33,"endColumn":16},{"ruleId":"704","severity":1,"message":"800","line":34,"column":25,"nodeType":"706","messageId":"707","endLine":34,"endColumn":41},{"ruleId":"704","severity":1,"message":"906","line":11,"column":7,"nodeType":"706","messageId":"707","endLine":11,"endColumn":16},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'RouteParams' is defined but never used.","'useLocation' is defined but never used.","'move' is defined but never used.","'NewHeader' is defined but never used.","'Stepper' is defined but never used.","'useEffect' is defined but never used.","'history' is assigned a value but never used.","'session' is assigned a value but never used.","'steps' is assigned a value but never used.","'currentStep' is assigned a value but never used.","'setCurrentStep' is assigned a value but never used.","'completedStep' is assigned a value but never used.","'setCompletedStep' is assigned a value but never used.","'Configuration' is defined but never used.","'PopupRequest' is defined but never used.","'React' is defined but never used.","'detectDevice' is defined but never used.","'fnBrowserDetect' is defined but never used.","'FetchDeepLink' is defined but never used.","'url' is assigned a value but never used.","Expected '===' and instead saw '=='.","'Props' is defined but never used.","'ISALLOWEDSEGMENTS' is assigned a value but never used.","'AiOutlineLeft' is defined but never used.","'Options' is defined but never used.","'Option' is defined but never used.","'ExtraDetails' is defined but never used.","'GenderOptions' is defined but never used.","'Gender' is defined but never used.","'SympChekerParent' is defined but never used.","'SymptomAnalyserTitle' is defined but never used.","'ExclamationCircle' is defined but never used.","'DatePickerBox' is defined but never used.","'SecondPage' is defined but never used.","'Symptoms' is defined but never used.","'SvaasLoader' is defined but never used.","'isHomeClass' is assigned a value but never used.","'pregnant' is assigned a value but never used.","'date' is assigned a value but never used.","'CustomDatePicker' is assigned a value but never used.","'setSecondPageDetails' is assigned a value but never used.","'changeDatePicker' is assigned a value but never used.","'Checkbox' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onlySymptomsNames'. Either include it or remove the dependency array.","ArrayExpression",["907"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'handleCheckBox'. Either include it or remove the dependency array.",["908"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'checkButtonDisability' and 'checkDurationMatch'. Either include them or remove the dependency array.",["909"],"'AboutHeader' is defined but never used.","'InputLabel' is defined but never used.","'InputYears' is defined but never used.","'SubText' is defined but never used.","'SubmitButton' is defined but never used.","'handleBackClick' is assigned a value but never used.","'InputSearch' is defined but never used.","'SearchBlock' is defined but never used.","'SpanCross' is defined but never used.","'SpanSearchIcon' is defined but never used.","'StyleNamefilter' is defined but never used.","'SymptomsData' is defined but never used.","'SymptomsFlex' is defined but never used.","'Bodyache' is defined but never used.","'Fever' is defined but never used.","'Headache' is defined but never used.","'LooseMotions' is defined but never used.","'Nausea' is defined but never used.","'SearchIcon' is defined but never used.","'StomachPain' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllPreMedicalConditions'. Either include it or remove the dependency array.",["910"],"React Hook useEffect has a missing dependency: 'selectedConditions'. Either include it or remove the dependency array.",["911"],"'SelectedSymptoms' is defined but never used.","'Select' is defined but never used.","'values' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllSymptoms'. Either include it or remove the dependency array.",["912"],"React Hook useEffect has a missing dependency: 'selectedSymptoms'. Either include it or remove the dependency array.",["913"],"'setRelatedSymptomsArr' is assigned a value but never used.","'search' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'disableButton' is assigned a value but never used.","'setDisableButton' is assigned a value but never used.",["914"],"'Amount' is defined but never used.","'AttentionCard' is defined but never used.","'AttentionDiv' is defined but never used.","'AttentionText' is defined but never used.","'BookConsult' is defined but never used.","'BookConsultCTA' is defined but never used.","'BottomCard' is defined but never used.","'BottomCardContainer' is defined but never used.","'CardContainer' is defined but never used.","'CardsContainer' is defined but never used.","'ConsultFee' is defined but never used.","'Details' is defined but never used.","'DetailsCard' is defined but never used.","'DetailsCardCont' is defined but never used.","'DetailsContainer' is defined but never used.","'DetailsExp' is defined but never used.","'DetailsLowerPara' is defined but never used.","'DetailsName' is defined but never used.","'DetailsPara' is defined but never used.","'DetailsProfileDiv' is defined but never used.","'DetailsQual' is defined but never used.","'DetailsSpecialist' is defined but never used.","'DocListHeading' is defined but never used.","'DoctorAvailableContainer' is defined but never used.","'DoctorName' is defined but never used.","'HeaderContainer' is defined but never used.","'HeaderIcon' is defined but never used.","'HeaderName' is defined but never used.","'LoaderContainer' is defined but never used.","'LowerDetails' is defined but never used.","'PerConsult' is defined but never used.","'PerSession' is defined but never used.","'ProfileDiv' is defined but never used.","'QualContainer' is defined but never used.","'Qualifications' is defined but never used.","'SplashContainer' is defined but never used.","'SplashDesc' is defined but never used.","'SplashTitle' is defined but never used.","'TopCard' is defined but never used.","'ViewAll' is defined but never used.","'getFindSpecialitiesDoc' is defined but never used.","'HomeIcon' is defined but never used.","'Message' is defined but never used.","'Location' is defined but never used.","'VideoCall' is defined but never used.","'onlineDoctorsList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserOutcome'. Either include it or remove the dependency array.",["915"],"'handleCloseClick' is assigned a value but never used.","'CapitalizeFirstnLastName' is assigned a value but never used.","'handleCardClick' is assigned a value but never used.","'handleViewAllSpecialists' is assigned a value but never used.","'handleBookConsultationClick' is assigned a value but never used.","'AnalyzButton' is defined but never used.","'BottomContainer' is defined but never used.","'SmokeTypeSideContainer' is defined but never used.","React Hook useEffect has a missing dependency: 'arr'. Either include it or remove the dependency array.",["916"],"React Hook useEffect has a missing dependency: 'symptomsDetails'. Either include it or remove the dependency array.",["917"],"'ContentHeading' is defined but never used.","'Input' is defined but never used.","'chatId' is assigned a value but never used.","'setChatId' is assigned a value but never used.","'setAddictDetails' is assigned a value but never used.","'dummyObj' is assigned a value but never used.","'primaryColor' is defined but never used.","'primaryRed' is defined but never used.","'primarySBI' is defined but never used.","'location' is defined but never used.","'getTenant' is defined but never used.","'useState' is defined but never used.","'TiTick' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SearcIcon' is defined but never used.","'CrossSymbol' is defined but never used.","'createRef' is defined but never used.","'Hspace' is defined but never used.","'AppContainer' is defined but never used.","'enableBg' is assigned a value but never used.","'setEnableBg' is assigned a value but never used.","'isSelected' is assigned a value but never used.","'setIsSelected' is assigned a value but never used.","'symptomType' is assigned a value but never used.","'notfound' is assigned a value but never used.","'setNotfound' is assigned a value but never used.","'setPains' is assigned a value but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","'Icon' is defined but never used.","'loadProfiles' is assigned a value but never used.","'goMenu' is assigned a value but never used.","'goCart' is assigned a value but never used.","'goLabsCart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setProgress'. Either include it or remove the dependency array. If 'setProgress' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["918"],"'btnDisableBg' is assigned a value but never used.","'setBtnDisableBg' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'arr' and 'onlySymptomsNames'. Either include them or remove the dependency array.",["919"],["920"],"'Symptom' is defined but never used.","'saveToken' is assigned a value but never used.",{"desc":"921","fix":"922"},{"desc":"923","fix":"924"},{"desc":"925","fix":"926"},{"desc":"927","fix":"928"},{"desc":"929","fix":"930"},{"desc":"931","fix":"932"},{"desc":"933","fix":"934"},{"desc":"933","fix":"935"},{"desc":"936","fix":"937"},{"desc":"938","fix":"939"},{"desc":"940","fix":"941"},{"desc":"942","fix":"943"},{"desc":"944","fix":"945"},{"desc":"938","fix":"946"},"Update the dependencies array to be: [onlySymptomsNames]",{"range":"947","text":"948"},"Update the dependencies array to be: [handleCheckBox, isChecked]",{"range":"949","text":"950"},"Update the dependencies array to be: [checkButtonDisability, checkDurationMatch, data]",{"range":"951","text":"952"},"Update the dependencies array to be: [getAllPreMedicalConditions]",{"range":"953","text":"954"},"Update the dependencies array to be: [searchBarConditions, selectedConditions]",{"range":"955","text":"956"},"Update the dependencies array to be: [getAllSymptoms]",{"range":"957","text":"958"},"Update the dependencies array to be: [searchBarSymptoms, selectedSymptoms]",{"range":"959","text":"960"},{"range":"961","text":"960"},"Update the dependencies array to be: [getUserOutcome]",{"range":"962","text":"963"},"Update the dependencies array to be: [arr]",{"range":"964","text":"965"},"Update the dependencies array to be: [symptomsAttributes, symptomsDetails]",{"range":"966","text":"967"},"Update the dependencies array to be: [startAnalyze, progress, setProgress]",{"range":"968","text":"969"},"Update the dependencies array to be: [arr, onlySymptomsNames]",{"range":"970","text":"971"},{"range":"972","text":"965"},[1770,1772],"[onlySymptomsNames]",[2345,2356],"[handleCheckBox, isChecked]",[3189,3195],"[checkButtonDisability, checkDurationMatch, data]",[4481,4483],"[getAllPreMedicalConditions]",[4879,4900],"[searchBarConditions, selectedConditions]",[3396,3398],"[getAllSymptoms]",[4024,4043],"[searchBarSymptoms, selectedSymptoms]",[3388,3407],[3279,3281],"[getUserOutcome]",[1587,1589],"[arr]",[2095,2115],"[symptomsAttributes, symptomsDetails]",[551,575],"[startAnalyze, progress, setProgress]",[949,951],"[arr, onlySymptomsNames]",[886,888]]