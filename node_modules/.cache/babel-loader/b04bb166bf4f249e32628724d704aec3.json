{"ast":null,"code":"var _jsxFileName = \"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/azure/azureApp.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n// MSAL imports\nimport { MsalProvider } from \"@azure/msal-react\";\nimport { CustomNavigationClient } from \"./navigantion\";\nimport AzureRoute from \"./azureRouting\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AzureApp({\n  pca\n}) {\n  _s();\n  // The next 3 lines are optional. This is how you configure MSAL to take advantage of the router's navigate functions when MSAL redirects between pages in your app\n  const history = useHistory();\n  const navigationClient = new CustomNavigationClient(history);\n  pca.setNavigationClient(navigationClient);\n  return /*#__PURE__*/_jsxDEV(MsalProvider, {\n    instance: pca,\n    children: /*#__PURE__*/_jsxDEV(AzureRoute, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(AzureApp, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n_c = AzureApp;\nexport default AzureApp;\nvar _c;\n$RefreshReg$(_c, \"AzureApp\");","map":{"version":3,"names":["React","useHistory","MsalProvider","CustomNavigationClient","AzureRoute","jsxDEV","_jsxDEV","AzureApp","pca","_s","history","navigationClient","setNavigationClient","instance","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/azure/azureApp.tsx"],"sourcesContent":["\nimport React from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\n// MSAL imports\nimport { MsalProvider } from \"@azure/msal-react\";\nimport { IPublicClientApplication } from \"@azure/msal-browser\";\nimport { CustomNavigationClient } from \"./navigantion\";\nimport AzureRoute from \"./azureRouting\";\n\ntype AppProps = {\n  pca: IPublicClientApplication;\n};\ninterface RouteParams {\n  name: string;\n  // Add other parameters if needed\n}\n\n\nfunction AzureApp({ pca }: AppProps) {\n  // The next 3 lines are optional. This is how you configure MSAL to take advantage of the router's navigate functions when MSAL redirects between pages in your app\n  const history = useHistory();\n  const navigationClient = new CustomNavigationClient(history);\n  pca.setNavigationClient(navigationClient);\n\n  return (\n    <MsalProvider instance={pca}>\n      <AzureRoute />\n    </MsalProvider>\n  );\n}\n\nexport default AzureApp;\n"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAmB,kBAAkB;;AAExD;AACA,SAASC,YAAY,QAAQ,mBAAmB;AAEhD,SAASC,sBAAsB,QAAQ,eAAe;AACtD,OAAOC,UAAU,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWxC,SAASC,QAAQA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACnC;EACA,MAAMC,OAAO,GAAGT,UAAU,CAAC,CAAC;EAC5B,MAAMU,gBAAgB,GAAG,IAAIR,sBAAsB,CAACO,OAAO,CAAC;EAC5DF,GAAG,CAACI,mBAAmB,CAACD,gBAAgB,CAAC;EAEzC,oBACEL,OAAA,CAACJ,YAAY;IAACW,QAAQ,EAAEL,GAAI;IAAAM,QAAA,eAC1BR,OAAA,CAACF,UAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEnB;AAACT,EAAA,CAXQF,QAAQ;EAAA,QAECN,UAAU;AAAA;AAAAkB,EAAA,GAFnBZ,QAAQ;AAajB,eAAeA,QAAQ;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}