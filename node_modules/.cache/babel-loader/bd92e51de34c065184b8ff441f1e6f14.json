{"ast":null,"code":"import axios from\"axios\";//import { clearLocalStorage } from \"@app/utils\";\nimport{msalInstance}from\"../index\";import{loginRequest,azureAuthentication}from\"../modules/azure\";const AZUREAUTHENTICATION=azureAuthentication.run();const baseURL=process.env.REACT_APP_API_URL;const service=axios.create({baseURL});const loginService=axios.create({baseURL});const saveToken=(access_token,refresh_token)=>{localStorage.setItem(\"healthbot_pwa_access_token\",access_token);localStorage.setItem(\"healthbot_pwa_refresh_token\",refresh_token);};// const destroyToken = () => {\n//   clearLocalStorage();\n// };\nservice.interceptors.request.use(async config=>{config.headers[\"x-health-bot-app-name\"]=\"health-bot-app\";const access_token=localStorage.getItem(\"health-bot_pwa_access_token\");if(AZUREAUTHENTICATION){const account=msalInstance.getActiveAccount();const response=await msalInstance.acquireTokenSilent({...loginRequest,account:account//forceRefresh: false,\n});if(response){const bearer=\"Bearer \".concat(response.accessToken);config.headers.Authorization=bearer;}else{config.headers.Authorization=access_token?\"Bearer \".concat(access_token):config.url.includes(\"auth\")?\"test\":\"\";}}else{config.headers.Authorization=access_token?\"Bearer \".concat(access_token):config.url.includes(\"auth\")?\"test\":\"\";}return config;});export{service,loginService};","map":{"version":3,"names":["axios","msalInstance","loginRequest","azureAuthentication","AZUREAUTHENTICATION","run","baseURL","process","env","REACT_APP_API_URL","service","create","loginService","saveToken","access_token","refresh_token","localStorage","setItem","interceptors","request","use","config","headers","getItem","account","getActiveAccount","response","acquireTokenSilent","bearer","concat","accessToken","Authorization","url","includes"],"sources":["/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/@services/interceptor.ts"],"sourcesContent":["import axios from \"axios\";\n//import { clearLocalStorage } from \"@app/utils\";\nimport { msalInstance } from \"../index\";\nimport { loginRequest, azureAuthentication } from \"../modules/azure\";\nconst AZUREAUTHENTICATION: boolean = azureAuthentication.run();\n\nconst baseURL = process.env.REACT_APP_API_URL;\nconst service = axios.create({ baseURL });\nconst loginService = axios.create({ baseURL });\n\nconst saveToken = (access_token: any, refresh_token: any) => {\n  localStorage.setItem(\"healthbot_pwa_access_token\", access_token);\n  localStorage.setItem(\"healthbot_pwa_refresh_token\", refresh_token);\n};\n\n// const destroyToken = () => {\n//   clearLocalStorage();\n// };\n\nservice.interceptors.request.use(async (config: any) => {\n  config.headers[\"x-health-bot-app-name\"] = \"health-bot-app\";\n  const access_token = localStorage.getItem(\"health-bot_pwa_access_token\");\n\n  if (AZUREAUTHENTICATION) {\n    const account = msalInstance.getActiveAccount();\n    const response = await msalInstance.acquireTokenSilent({\n      ...loginRequest,\n      account: account,\n      //forceRefresh: false,\n    });\n    if (response) {\n      const bearer = `Bearer ${response.accessToken}`;\n      config.headers.Authorization = bearer;\n    } else {\n      config.headers.Authorization = access_token\n        ? `Bearer ${access_token}`\n        : config.url.includes(\"auth\")\n        ? \"test\"\n        : \"\";\n    }\n  } else {\n    config.headers.Authorization = access_token\n      ? `Bearer ${access_token}`\n      : config.url.includes(\"auth\")\n      ? \"test\"\n      : \"\";\n  }\n  return config;\n});\n\nexport { service, loginService };\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB;AACA,OAASC,YAAY,KAAQ,UAAU,CACvC,OAASC,YAAY,CAAEC,mBAAmB,KAAQ,kBAAkB,CACpE,KAAM,CAAAC,mBAA4B,CAAGD,mBAAmB,CAACE,GAAG,CAAC,CAAC,CAE9D,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAC7C,KAAM,CAAAC,OAAO,CAAGV,KAAK,CAACW,MAAM,CAAC,CAAEL,OAAQ,CAAC,CAAC,CACzC,KAAM,CAAAM,YAAY,CAAGZ,KAAK,CAACW,MAAM,CAAC,CAAEL,OAAQ,CAAC,CAAC,CAE9C,KAAM,CAAAO,SAAS,CAAGA,CAACC,YAAiB,CAAEC,aAAkB,GAAK,CAC3DC,YAAY,CAACC,OAAO,CAAC,4BAA4B,CAAEH,YAAY,CAAC,CAChEE,YAAY,CAACC,OAAO,CAAC,6BAA6B,CAAEF,aAAa,CAAC,CACpE,CAAC,CAED;AACA;AACA;AAEAL,OAAO,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,KAAO,CAAAC,MAAW,EAAK,CACtDA,MAAM,CAACC,OAAO,CAAC,uBAAuB,CAAC,CAAG,gBAAgB,CAC1D,KAAM,CAAAR,YAAY,CAAGE,YAAY,CAACO,OAAO,CAAC,6BAA6B,CAAC,CAExE,GAAInB,mBAAmB,CAAE,CACvB,KAAM,CAAAoB,OAAO,CAAGvB,YAAY,CAACwB,gBAAgB,CAAC,CAAC,CAC/C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAzB,YAAY,CAAC0B,kBAAkB,CAAC,CACrD,GAAGzB,YAAY,CACfsB,OAAO,CAAEA,OACT;AACF,CAAC,CAAC,CACF,GAAIE,QAAQ,CAAE,CACZ,KAAM,CAAAE,MAAM,WAAAC,MAAA,CAAaH,QAAQ,CAACI,WAAW,CAAE,CAC/CT,MAAM,CAACC,OAAO,CAACS,aAAa,CAAGH,MAAM,CACvC,CAAC,IAAM,CACLP,MAAM,CAACC,OAAO,CAACS,aAAa,CAAGjB,YAAY,WAAAe,MAAA,CAC7Bf,YAAY,EACtBO,MAAM,CAACW,GAAG,CAACC,QAAQ,CAAC,MAAM,CAAC,CAC3B,MAAM,CACN,EAAE,CACR,CACF,CAAC,IAAM,CACLZ,MAAM,CAACC,OAAO,CAACS,aAAa,CAAGjB,YAAY,WAAAe,MAAA,CAC7Bf,YAAY,EACtBO,MAAM,CAACW,GAAG,CAACC,QAAQ,CAAC,MAAM,CAAC,CAC3B,MAAM,CACN,EAAE,CACR,CACA,MAAO,CAAAZ,MAAM,CACf,CAAC,CAAC,CAEF,OAASX,OAAO,CAAEE,YAAY"},"metadata":{},"sourceType":"module"}