{"ast":null,"code":"export default function VALIDATEDDEEPLINK(url) {\n  let pathurl = url.pathname.toLowerCase();\n  let pathstring = url.pathname;\n  const ALLOWEDURLS = [`${process.env.REACT_APP_HOMEPAGE}/homescreen`, `${process.env.REACT_APP_HOMEPAGE}/appointments`, `${process.env.REACT_APP_HOMEPAGE}/me`, `${process.env.REACT_APP_HOMEPAGE}/doctor/appointment/`];\n  const ALLOWEDSTRINGS = [];\n  let ISALLOWEDSEGMENTS = ALLOWEDSTRINGS.find(val => {\n    //val = val.toLowerCase();\n    return pathstring.includes(val);\n  }) ? true : false;\n  let ISALLOWEDURL = ALLOWEDURLS.find(val => {\n    val = val.toLowerCase();\n    return pathurl.includes(val);\n  }) ? true : false;\n\n  // console.log(\"path\", path)\n  // console.log(\"ISRESTRICTEDURLS\", ISRESTRICTEDURLS)\n  // console.log(\"ISBLOCKEDSEGMENTS\", ISBLOCKEDSEGMENTS)\n\n  if (ISALLOWEDURL) {\n    return true;\n  } else {\n    return false;\n  }\n}\n_c = VALIDATEDDEEPLINK;\nvar _c;\n$RefreshReg$(_c, \"VALIDATEDDEEPLINK\");","map":{"version":3,"names":["VALIDATEDDEEPLINK","url","pathurl","pathname","toLowerCase","pathstring","ALLOWEDURLS","process","env","REACT_APP_HOMEPAGE","ALLOWEDSTRINGS","ISALLOWEDSEGMENTS","find","val","includes","ISALLOWEDURL","_c","$RefreshReg$"],"sources":["/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/deeplink.config.ts"],"sourcesContent":["export default function VALIDATEDDEEPLINK(url: any) {\n  let pathurl = url.pathname.toLowerCase();\n  let pathstring = url.pathname;\n\n  const ALLOWEDURLS = [\n    `${process.env.REACT_APP_HOMEPAGE}/homescreen`,\n    `${process.env.REACT_APP_HOMEPAGE}/appointments`,\n    `${process.env.REACT_APP_HOMEPAGE}/me`,\n    `${process.env.REACT_APP_HOMEPAGE}/doctor/appointment/`,\n  ];\n  const ALLOWEDSTRINGS = [];\n\n  let ISALLOWEDSEGMENTS = ALLOWEDSTRINGS.find((val: string) => {\n    //val = val.toLowerCase();\n    return pathstring.includes(val);\n  })\n    ? true\n    : false;\n\n  let ISALLOWEDURL = ALLOWEDURLS.find((val: string) => {\n    val = val.toLowerCase();\n    return pathurl.includes(val);\n  })\n    ? true\n    : false;\n\n  // console.log(\"path\", path)\n  // console.log(\"ISRESTRICTEDURLS\", ISRESTRICTEDURLS)\n  // console.log(\"ISBLOCKEDSEGMENTS\", ISBLOCKEDSEGMENTS)\n\n  if (ISALLOWEDURL) {\n    return true;\n  } else {\n    return false;\n  }\n}\n"],"mappings":"AAAA,eAAe,SAASA,iBAAiBA,CAACC,GAAQ,EAAE;EAClD,IAAIC,OAAO,GAAGD,GAAG,CAACE,QAAQ,CAACC,WAAW,CAAC,CAAC;EACxC,IAAIC,UAAU,GAAGJ,GAAG,CAACE,QAAQ;EAE7B,MAAMG,WAAW,GAAG,CACjB,GAAEC,OAAO,CAACC,GAAG,CAACC,kBAAmB,aAAY,EAC7C,GAAEF,OAAO,CAACC,GAAG,CAACC,kBAAmB,eAAc,EAC/C,GAAEF,OAAO,CAACC,GAAG,CAACC,kBAAmB,KAAI,EACrC,GAAEF,OAAO,CAACC,GAAG,CAACC,kBAAmB,sBAAqB,CACxD;EACD,MAAMC,cAAc,GAAG,EAAE;EAEzB,IAAIC,iBAAiB,GAAGD,cAAc,CAACE,IAAI,CAAEC,GAAW,IAAK;IAC3D;IACA,OAAOR,UAAU,CAACS,QAAQ,CAACD,GAAG,CAAC;EACjC,CAAC,CAAC,GACE,IAAI,GACJ,KAAK;EAET,IAAIE,YAAY,GAAGT,WAAW,CAACM,IAAI,CAAEC,GAAW,IAAK;IACnDA,GAAG,GAAGA,GAAG,CAACT,WAAW,CAAC,CAAC;IACvB,OAAOF,OAAO,CAACY,QAAQ,CAACD,GAAG,CAAC;EAC9B,CAAC,CAAC,GACE,IAAI,GACJ,KAAK;;EAET;EACA;EACA;;EAEA,IAAIE,YAAY,EAAE;IAChB,OAAO,IAAI;EACb,CAAC,MAAM;IACL,OAAO,KAAK;EACd;AACF;AAACC,EAAA,GAnCuBhB,iBAAiB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}