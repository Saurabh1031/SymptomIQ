{"ast":null,"code":"var _jsxFileName = \"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/outcome/outcome.tsx\",\n  _s = $RefreshSig$();\n//@ts-nocheck\nimport { useHistory } from \"react-router\";\nimport NewHeader from \"../../components/svaas-header\";\nimport Stepper from \"@app/components/stepper/Stepper\";\nimport { useEffect, useState } from \"react\";\nimport { BottomContainer, ButtonContainer, Card, CardDescription, CardTitle, CauseHeading, CausesContainer, CloseTest, Description, DiseaseName, DoctorIconWrapper, Emergency, EmergencyDiv, EmergencyText, IconContainer, IconWrapper, LogoWrapper, MainContainer, RetakeTest, SideContainer, SidenavContainer, SpecialityContainer, SpecialityDiv, SpecialityTag, SpecialityTitle, SplashBody, SplashSliderContainer, StepperContainer, TitleText } from \"./outcome-components\";\nimport { Bacteria, DoctorIcon, HalfCircle, HalfCircleBg } from \"@app/assets/icons\";\nimport { getDoctorUsingFetch, get_chat_results } from \"@app/@services\";\nimport ErrorPage from \"@app/components/error-page/error-page\";\nimport SideNav from \"@app/components/side-nav/side-nav\";\nimport Slider from \"react-slick\";\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport LeavingMidway from \"@app/components/leaving-popup/leaving-popup\";\nimport LoaderScreen from \"@app/components/loader-screen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Outcome = () => {\n  _s();\n  var _userData$emergency, _userData$condtions, _userData$condtions$c, _userData$specialitie;\n  const history = useHistory();\n  const steps = [\"About\", \"Symptoms\", \"History\", \"Outcome\"];\n  const [currentStep, setCurrentStep] = useState(4);\n  const [completedStep, setCompletedStep] = useState(true);\n  const [userData, setUserData] = useState({});\n  const [count, setCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [errorScreen, setErrorScreen] = useState(false);\n  const [showAboutDisease, setShowAboutDisease] = useState(false);\n  const [diseaseName, setDiseaseName] = useState(\"\");\n  const [diseaseDesc, setDiseaseDesc] = useState(\"\");\n  const [onlineDoctorsList, setOnlineDoctorsList] = useState([]);\n  const [specialization, setSpecialization] = useState();\n  const [leavingMidway, setLeavingMidway] = useState(false);\n  const [startAnalyze, setStartAnalyze] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const userType = localStorage.getItem(\"userType\") || \"\";\n  const userId = localStorage.getItem(\"userid\") || \"\";\n  const someone_else_gender = localStorage.getItem(\"someone_else_gender\") || \"\";\n  useEffect(() => {\n    getUserOutcome();\n    //getDoctorsList();\n  }, []);\n  const sliderProfile = {\n    infinite: true,\n    dots: true,\n    slidesToShow: 2,\n    slidesToScroll: 1,\n    speed: 300,\n    autoplay: false,\n    autoplaySpeed: 4000\n  };\n  const handleRetakeTest = () => {\n    history.push({\n      pathname: \"/home\"\n    });\n  };\n  const handleCloseClick = () => {\n    setLeavingMidway(true);\n  };\n  const CapitalizeFirstnLastName = (firstname, lastname) => {\n    let firstLetter = firstname && firstname.length >= 1 && firstname[0].toUpperCase();\n    let lastLetter = lastname && lastname.length >= 1 && lastname[0].toUpperCase();\n    return `${firstLetter}${lastLetter}`;\n  };\n  const getUserOutcome = async () => {\n    setLoading(true);\n    setStartAnalyze(true);\n    setProgress(0);\n    setErrorScreen(false);\n    await get_chat_results().then(res => {\n      if (res && (res.status == 201 || res.status == 200)) {\n        var _res$data, _res$data$condtions, _res$data$condtions$c, _res$data2;\n        setUserData(res.data);\n        setCount((_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$condtions = _res$data.condtions) === null || _res$data$condtions === void 0 ? void 0 : (_res$data$condtions$c = _res$data$condtions.conditions) === null || _res$data$condtions$c === void 0 ? void 0 : _res$data$condtions$c.length);\n        getDoctorsList((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.specialities);\n        setLoading(false);\n        setStartAnalyze(false);\n        setProgress(0);\n      } else {\n        setLoading(false);\n        setStartAnalyze(false);\n        setProgress(0);\n        setErrorScreen(true);\n        //console.log(\"API failed\");\n      }\n    });\n  };\n  const getDoctorsList = async specializations => {\n    var _data$getDoctors, _data$getDoctors2, _onlineDoctors;\n    const data = await getDoctorUsingFetch(specializations[0]);\n    let onlineDoctors = (data === null || data === void 0 ? void 0 : (_data$getDoctors = data.getDoctors) === null || _data$getDoctors === void 0 ? void 0 : _data$getDoctors.data) && (data === null || data === void 0 ? void 0 : (_data$getDoctors2 = data.getDoctors) === null || _data$getDoctors2 === void 0 ? void 0 : _data$getDoctors2.data.filter(doctor => (doctor === null || doctor === void 0 ? void 0 : doctor.consultationType.toLowerCase()) === \"online\"));\n    onlineDoctors = ((_onlineDoctors = onlineDoctors) === null || _onlineDoctors === void 0 ? void 0 : _onlineDoctors.length) > 2 ? onlineDoctors.splice(0, 3) : onlineDoctors;\n    setOnlineDoctorsList(onlineDoctors);\n    setSpecialization(specializations[0]);\n    // getFindSpecialitiesDoc().then((res) => {\n    //     console.log(\"doctors data \", res);\n    // })\n  };\n  //console.log(\"onlinedoctorsList: \", onlineDoctorsList);\n  const handleCardClick = data => {\n    setDiseaseName(data === null || data === void 0 ? void 0 : data.condition_name);\n    setDiseaseDesc(data === null || data === void 0 ? void 0 : data.long_description);\n    setShowAboutDisease(true);\n  };\n  const handleViewAllSpecialists = () => {\n    sessionStorage.clear();\n    window.location.href = `${process.env.REACT_APP_HOST}app/svaasportal/doctors?specialization=${specialization}&fromPage=healthBot&profile=${userId}`;\n  };\n  const handleBookConsultationClick = doctorDetails => {\n    sessionStorage.clear();\n    const id = (doctorDetails === null || doctorDetails === void 0 ? void 0 : doctorDetails.erxDoctorId) || 0;\n    window.location.href = `${process.env.REACT_APP_HOST}app/svaasportal/doctors/doctorDetails/${id}?fromPage=healthBot&bookAgain=true&profile=${userId}`;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewHeader, {\n      className: \"specialities\",\n      title: \"SymptomIQ\",\n      showBackButton: true,\n      onBack: () => {\n        history.push({\n          pathname: \"/history\"\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StepperContainer, {\n      children: /*#__PURE__*/_jsxDEV(Stepper, {\n        steps: steps,\n        currentStep: currentStep,\n        completedStep: completedStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), errorScreen ? /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this) : loading ? /*#__PURE__*/_jsxDEV(LoaderScreen, {\n      startAnalyze: startAnalyze,\n      setStartAnalyze: setStartAnalyze,\n      setProgress: setProgress,\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MainContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TitleText, {\n          children: userType === \"myself\" ? \"Based on your selected symptoms, it is possible that you may be experiencing any of the below conditions:\" : someone_else_gender === \"male\" ? \"Based on your selected symptoms, it is possible that he may be experiencing any of the below conditions:\" : someone_else_gender === \"female\" ? \"Based on your selected symptoms, it is possible that she may be experiencing any of the below conditions:\" : \"Based on your selected symptoms, it is possible that they may be experiencing any of the below conditions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }, this), (userData === null || userData === void 0 ? void 0 : (_userData$emergency = userData.emergency) === null || _userData$emergency === void 0 ? void 0 : _userData$emergency.toUpperCase()) === \"YES\" ? /*#__PURE__*/_jsxDEV(Emergency, {\n          children: [/*#__PURE__*/_jsxDEV(EmergencyDiv, {\n            children: /*#__PURE__*/_jsxDEV(EmergencyText, {\n              children: \"Some of the symptoms you mentioned can be caused by serious medical conditions. It is recommended to visit a hospital or speak with a healthcare professional as soon as you can to rule out any potential emergencies and receive appropriate treatment immediately.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(IconContainer, {\n            children: /*#__PURE__*/_jsxDEV(HalfCircle, {\n              strokeColor: \"#F4939A\",\n              fillColor: \"#F4939A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 33\n        }, this) : null, /*#__PURE__*/_jsxDEV(CausesContainer, {\n          children: [/*#__PURE__*/_jsxDEV(CauseHeading, {\n            children: [\"Possible Causes (\", count, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(SplashSliderContainer, {\n            children: /*#__PURE__*/_jsxDEV(Slider, {\n              ...sliderProfile,\n              children: userData === null || userData === void 0 ? void 0 : (_userData$condtions = userData.condtions) === null || _userData$condtions === void 0 ? void 0 : (_userData$condtions$c = _userData$condtions.conditions) === null || _userData$condtions$c === void 0 ? void 0 : _userData$condtions$c.map(data => {\n                let description = data.short_description || \"\";\n                if (description.length > 50) {\n                  description = description.substring(0, 50) + \"...\";\n                }\n                return /*#__PURE__*/_jsxDEV(Card, {\n                  onClick: () => {/* handleCardClick(data) */},\n                  children: /*#__PURE__*/_jsxDEV(SplashBody, {\n                    children: [/*#__PURE__*/_jsxDEV(LogoWrapper, {\n                      children: /*#__PURE__*/_jsxDEV(Bacteria, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 172,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(CardTitle, {\n                      children: data.condition_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(CardDescription, {\n                      children: description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(SpecialityContainer, {\n          children: [/*#__PURE__*/_jsxDEV(SpecialityTitle, {\n            children: \"Speciality to Consult\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 33\n          }, this), userData !== null && userData !== void 0 && userData.specialities && userData !== null && userData !== void 0 && (_userData$specialitie = userData.specialities) !== null && _userData$specialitie !== void 0 && _userData$specialitie.length ? /*#__PURE__*/_jsxDEV(SpecialityDiv, {\n            children: [/*#__PURE__*/_jsxDEV(IconWrapper, {\n              children: /*#__PURE__*/_jsxDEV(HalfCircleBg, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(DoctorIconWrapper, {\n              children: /*#__PURE__*/_jsxDEV(DoctorIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(SpecialityTag, {\n              children: userData.specialities[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 37\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(BottomContainer, {\n        children: /*#__PURE__*/_jsxDEV(ButtonContainer, {\n          children: [/*#__PURE__*/_jsxDEV(RetakeTest, {\n            onClick: handleRetakeTest,\n            children: \"Retake Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(CloseTest, {\n            onClick: () => {},\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true), showAboutDisease ? /*#__PURE__*/_jsxDEV(SidenavContainer, {\n      children: /*#__PURE__*/_jsxDEV(SideNav, {\n        className: \"closeClassName\",\n        maxHeight: \"100%\",\n        minHeight: \"70%\",\n        isSpaceNeeded: true,\n        onClose: () => {\n          setShowAboutDisease(false);\n        },\n        title: \"\",\n        closeClassName: \"open\",\n        children: /*#__PURE__*/_jsxDEV(SideContainer, {\n          children: [/*#__PURE__*/_jsxDEV(DiseaseName, {\n            children: diseaseName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Description, {\n            children: diseaseDesc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }, this) : null, leavingMidway ? /*#__PURE__*/_jsxDEV(LeavingMidway, {\n      onclose: setLeavingMidway\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true);\n};\n_s(Outcome, \"gOZ6pYufqucNlPdf757sczWnzok=\", false, function () {\n  return [useHistory];\n});\n_c = Outcome;\nexport default Outcome;\nvar _c;\n$RefreshReg$(_c, \"Outcome\");","map":{"version":3,"names":["useHistory","NewHeader","Stepper","useEffect","useState","BottomContainer","ButtonContainer","Card","CardDescription","CardTitle","CauseHeading","CausesContainer","CloseTest","Description","DiseaseName","DoctorIconWrapper","Emergency","EmergencyDiv","EmergencyText","IconContainer","IconWrapper","LogoWrapper","MainContainer","RetakeTest","SideContainer","SidenavContainer","SpecialityContainer","SpecialityDiv","SpecialityTag","SpecialityTitle","SplashBody","SplashSliderContainer","StepperContainer","TitleText","Bacteria","DoctorIcon","HalfCircle","HalfCircleBg","getDoctorUsingFetch","get_chat_results","ErrorPage","SideNav","Slider","LeavingMidway","LoaderScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","Outcome","_s","_userData$emergency","_userData$condtions","_userData$condtions$c","_userData$specialitie","history","steps","currentStep","setCurrentStep","completedStep","setCompletedStep","userData","setUserData","count","setCount","loading","setLoading","errorScreen","setErrorScreen","showAboutDisease","setShowAboutDisease","diseaseName","setDiseaseName","diseaseDesc","setDiseaseDesc","onlineDoctorsList","setOnlineDoctorsList","specialization","setSpecialization","leavingMidway","setLeavingMidway","startAnalyze","setStartAnalyze","progress","setProgress","userType","localStorage","getItem","userId","someone_else_gender","getUserOutcome","sliderProfile","infinite","dots","slidesToShow","slidesToScroll","speed","autoplay","autoplaySpeed","handleRetakeTest","push","pathname","handleCloseClick","CapitalizeFirstnLastName","firstname","lastname","firstLetter","length","toUpperCase","lastLetter","then","res","status","_res$data","_res$data$condtions","_res$data$condtions$c","_res$data2","data","condtions","conditions","getDoctorsList","specialities","specializations","_data$getDoctors","_data$getDoctors2","_onlineDoctors","onlineDoctors","getDoctors","filter","doctor","consultationType","toLowerCase","splice","handleCardClick","condition_name","long_description","handleViewAllSpecialists","sessionStorage","clear","window","location","href","process","env","REACT_APP_HOST","handleBookConsultationClick","doctorDetails","id","erxDoctorId","children","className","title","showBackButton","onBack","fileName","_jsxFileName","lineNumber","columnNumber","emergency","strokeColor","fillColor","map","description","short_description","substring","onClick","maxHeight","minHeight","isSpaceNeeded","onClose","closeClassName","onclose","_c","$RefreshReg$"],"sources":["/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/outcome/outcome.tsx"],"sourcesContent":["//@ts-nocheck\nimport { useHistory } from \"react-router\";\nimport NewHeader from \"../../components/svaas-header\"\nimport Stepper from \"@app/components/stepper/Stepper\";\nimport { useEffect, useState } from \"react\";\nimport { Amount, AttentionCard, AttentionDiv, AttentionText, BookConsult, BookConsultCTA, BottomCard, BottomCardContainer, BottomContainer, ButtonContainer, Card, CardContainer, CardDescription, CardTitle, CardsContainer, CauseHeading, CausesContainer, CloseTest, ConsultFee, Description, Details, DetailsCard, DetailsCardCont, DetailsContainer, DetailsExp, DetailsLowerPara, DetailsName, DetailsPara, DetailsProfileDiv, DetailsQual, DetailsSpecialist, DiseaseName, DocListHeading, DoctorAvailableContainer, DoctorIconWrapper, DoctorName, Emergency, EmergencyDiv, EmergencyText, HeaderContainer, HeaderIcon, HeaderName, IconContainer, IconWrapper, LoaderContainer, LogoWrapper, LowerDetails, MainContainer, PerConsult, PerSession, ProfileDiv, QualContainer, Qualifications, RetakeTest, SideContainer, SidenavContainer, SpecialityContainer, SpecialityDiv, SpecialityTag, SpecialityTitle, SplashBody, SplashContainer, SplashDesc, SplashSliderContainer, SplashTitle, StepperContainer, TitleText, TopCard, ViewAll } from \"./outcome-components\";\nimport { Bacteria, DoctorIcon, HalfCircle, HalfCircleBg } from \"@app/assets/icons\";\nimport { getDoctorUsingFetch, getFindSpecialitiesDoc, get_chat_results } from \"@app/@services\";\nimport { HomeIcon } from \"@app/assets/icons\";\nimport ErrorPage from \"@app/components/error-page/error-page\";\nimport SideNav from \"@app/components/side-nav/side-nav\";\nimport Message from \"@app/assets/icons/message\";\nimport Location from \"@app/assets/icons/location\";\nimport VideoCall from \"@app/assets/icons/videocall\";\nimport Slider from \"react-slick\";\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport LeavingMidway from \"@app/components/leaving-popup/leaving-popup\";\nimport LoaderScreen from \"@app/components/loader-screen\";\nconst Outcome = () => {\n    const history = useHistory();\n    const steps = [\"About\", \"Symptoms\", \"History\", \"Outcome\"];\n    const [currentStep, setCurrentStep] = useState<number>(4);\n    const [completedStep, setCompletedStep] = useState(true);\n    const [userData, setUserData] = useState<any>({});\n    const [count, setCount] = useState<number>(0);\n    const [loading, setLoading] = useState(false);\n    const [errorScreen, setErrorScreen] = useState<boolean>(false);\n    const [showAboutDisease, setShowAboutDisease] = useState<boolean>(false);\n    const [diseaseName, setDiseaseName] = useState<any>(\"\");\n    const [diseaseDesc, setDiseaseDesc] = useState<any>(\"\");\n    const [onlineDoctorsList, setOnlineDoctorsList] = useState<any>([]);\n    const [specialization, setSpecialization] = useState<any>();\n    const [leavingMidway, setLeavingMidway] = useState<boolean>(false);\n    const [startAnalyze, setStartAnalyze] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const userType = localStorage.getItem(\"userType\") || \"\";\n    const userId = localStorage.getItem(\"userid\") || \"\";\n    const someone_else_gender = localStorage.getItem(\"someone_else_gender\") || \"\";\n    useEffect(() => {\n        getUserOutcome();\n        //getDoctorsList();\n    }, []);\n    const sliderProfile = {\n        infinite: true,\n        dots: true,\n        slidesToShow: 2,\n        slidesToScroll: 1,\n        speed: 300,\n        autoplay: false,\n        autoplaySpeed: 4000,\n    };\n    const handleRetakeTest = () => {\n        history.push({\n            pathname: \"/home\"\n        })\n    }\n    const handleCloseClick = () => {\n        setLeavingMidway(true);\n    }\n    const CapitalizeFirstnLastName = (firstname: string, lastname: string) => {\n        let firstLetter = firstname && firstname.length >= 1 && firstname[0].toUpperCase();\n        let lastLetter = lastname && lastname.length >= 1 && lastname[0].toUpperCase();\n        return `${firstLetter}${lastLetter}`\n    }\n    const getUserOutcome = async () => {\n        setLoading(true);\n        setStartAnalyze(true);\n        setProgress(0);\n        setErrorScreen(false);\n        await get_chat_results().then((res) => {\n            if (res && (res.status == 201 || res.status == 200)) {\n                setUserData(res.data);\n                setCount(res.data?.condtions?.conditions?.length);\n                getDoctorsList(res.data?.specialities);\n                setLoading(false);\n                setStartAnalyze(false);\n                setProgress(0);\n            } else {\n                setLoading(false);\n                setStartAnalyze(false);\n                setProgress(0);\n                setErrorScreen(true);\n                //console.log(\"API failed\");\n            }\n        });\n    };\n    const getDoctorsList = async (specializations: any) => {\n        const data = await getDoctorUsingFetch(specializations[0]);\n        let onlineDoctors = data?.getDoctors?.data && data?.getDoctors?.data.filter((doctor: any) => doctor?.consultationType.toLowerCase() === \"online\")\n        onlineDoctors = onlineDoctors?.length > 2 ? onlineDoctors.splice(0, 3) : onlineDoctors;\n        setOnlineDoctorsList(onlineDoctors);\n        setSpecialization(specializations[0]);\n        // getFindSpecialitiesDoc().then((res) => {\n        //     console.log(\"doctors data \", res);\n        // })\n    }\n    //console.log(\"onlinedoctorsList: \", onlineDoctorsList);\n    const handleCardClick = (data: any) => {\n        setDiseaseName(data?.condition_name);\n        setDiseaseDesc(data?.long_description);\n        setShowAboutDisease(true);\n    }\n    const handleViewAllSpecialists = () => {\n        sessionStorage.clear();\n        window.location.href = `${process.env.REACT_APP_HOST}app/svaasportal/doctors?specialization=${specialization}&fromPage=healthBot&profile=${userId}`;\n    }\n    const handleBookConsultationClick = (doctorDetails: any) => {\n        sessionStorage.clear();\n        const id = doctorDetails?.erxDoctorId || 0;\n        window.location.href = `${process.env.REACT_APP_HOST}app/svaasportal/doctors/doctorDetails/${id}?fromPage=healthBot&bookAgain=true&profile=${userId}`;\n    }\n    return (\n        <>\n            <NewHeader\n                className=\"specialities\"\n                title=\"SymptomIQ\"\n                showBackButton={true}\n                onBack={() => {\n                    history.push({ pathname: \"/history\" });\n                }}\n            />\n            <StepperContainer>\n                <Stepper\n                    steps={steps}\n                    currentStep={currentStep}\n                    completedStep={completedStep}\n                />\n            </StepperContainer>\n            {errorScreen ?\n                <ErrorPage /> : loading ?\n                    <LoaderScreen startAnalyze={startAnalyze} setStartAnalyze={setStartAnalyze} setProgress={setProgress} progress={progress} /> :\n                    <>\n                        <MainContainer>\n                            <TitleText>\n                                {\n                                    userType === \"myself\" ? \"Based on your selected symptoms, it is possible that you may be experiencing any of the below conditions:\" :\n                                        someone_else_gender === \"male\" ? \"Based on your selected symptoms, it is possible that he may be experiencing any of the below conditions:\" :\n                                            someone_else_gender === \"female\" ? \"Based on your selected symptoms, it is possible that she may be experiencing any of the below conditions:\" :\n                                                \"Based on your selected symptoms, it is possible that they may be experiencing any of the below conditions:\"\n                                }\n                            </TitleText>\n                            {userData?.emergency?.toUpperCase() === \"YES\" ? (\n                                <Emergency>\n                                    <EmergencyDiv>\n                                        <EmergencyText>\n                                            Some of the symptoms you mentioned can be caused by serious\n                                            medical conditions. It is recommended to visit a hospital or speak\n                                            with a healthcare professional as soon as you can to rule out\n                                            any potential emergencies and receive appropriate treatment\n                                            immediately.\n                                        </EmergencyText>\n                                    </EmergencyDiv>\n                                    <IconContainer>\n                                        <HalfCircle strokeColor=\"#F4939A\" fillColor=\"#F4939A\" />\n                                    </IconContainer>\n                                </Emergency>\n                            ) : null}\n                            <CausesContainer>\n                                <CauseHeading>Possible Causes ({count})</CauseHeading>\n                                <SplashSliderContainer>\n                                    <Slider {...sliderProfile}>\n                                        {userData?.condtions?.conditions?.map((data: any) => {\n                                            let description = data.short_description || \"\";\n                                            if (description.length > 50) {\n                                                description = description.substring(0, 50) + \"...\";\n                                            }\n                                            return (\n                                                <Card onClick={() => { /* handleCardClick(data) */ }}>\n                                                    <SplashBody>\n                                                        <LogoWrapper>\n                                                            <Bacteria />\n                                                        </LogoWrapper>\n                                                        <CardTitle>{data.condition_name}</CardTitle>\n                                                        <CardDescription>{description}</CardDescription>\n                                                    </SplashBody>\n                                                </Card>\n                                            );\n                                        })}\n                                    </Slider>\n                                </SplashSliderContainer>\n                            </CausesContainer>\n                            <SpecialityContainer>\n                                <SpecialityTitle>Speciality to Consult</SpecialityTitle>\n                                {userData?.specialities && userData?.specialities?.length ?\n                                    <SpecialityDiv>\n                                        <IconWrapper>\n                                            <HalfCircleBg />\n                                        </IconWrapper>\n                                        <DoctorIconWrapper>\n                                            <DoctorIcon />\n                                        </DoctorIconWrapper>\n                                        <SpecialityTag>{userData.specialities[0]}</SpecialityTag>\n                                    </SpecialityDiv> :\n                                    null}\n                            </SpecialityContainer>\n                        </MainContainer>\n                        <BottomContainer>\n                            <ButtonContainer>\n                                <RetakeTest onClick={handleRetakeTest}>Retake Test</RetakeTest>\n                                <CloseTest onClick={() => { }}>Close</CloseTest>\n                            </ButtonContainer>\n                        </BottomContainer>\n                    </>}\n            {showAboutDisease ?\n                <SidenavContainer>\n                    <SideNav\n                        className=\"closeClassName\"\n                        maxHeight=\"100%\"\n                        minHeight=\"70%\"\n                        isSpaceNeeded={true}\n                        onClose={() => {\n                            setShowAboutDisease(false);\n                        }}\n                        title=\"\"\n                        closeClassName={\"open\"}>\n                        <SideContainer>\n                            <DiseaseName>{diseaseName}</DiseaseName>\n                            <Description>{diseaseDesc}</Description>\n                        </SideContainer>\n                    </SideNav>\n                </SidenavContainer> : null}\n            {leavingMidway ?\n                <LeavingMidway onclose={setLeavingMidway} /> : null}\n        </>\n    );\n};\nexport default Outcome;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}