{"ast":null,"code":"/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\n\nimport { BrowserConfigurationAuthError } from '../error/BrowserConfigurationAuthError.js';\nimport { BrowserCacheLocation } from '../utils/BrowserConstants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar BrowserStorage = /** @class */function () {\n  function BrowserStorage(cacheLocation) {\n    this.validateWindowStorage(cacheLocation);\n    this.windowStorage = window[cacheLocation];\n  }\n  BrowserStorage.prototype.validateWindowStorage = function (cacheLocation) {\n    if (cacheLocation !== BrowserCacheLocation.LocalStorage && cacheLocation !== BrowserCacheLocation.SessionStorage) {\n      throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n    }\n    var storageSupported = !!window[cacheLocation];\n    if (!storageSupported) {\n      throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\n    }\n  };\n  BrowserStorage.prototype.getItem = function (key) {\n    return this.windowStorage.getItem(key);\n  };\n  BrowserStorage.prototype.setItem = function (key, value) {\n    this.windowStorage.setItem(key, value);\n  };\n  BrowserStorage.prototype.removeItem = function (key) {\n    this.windowStorage.removeItem(key);\n  };\n  BrowserStorage.prototype.getKeys = function () {\n    return Object.keys(this.windowStorage);\n  };\n  BrowserStorage.prototype.containsKey = function (key) {\n    return this.windowStorage.hasOwnProperty(key);\n  };\n  return BrowserStorage;\n}();\nexport { BrowserStorage };","map":{"version":3,"sources":["../../src/cache/BrowserStorage.ts"],"names":[],"mappings":";;;;;;AAAA;;;;;EAaI,SAAA,cAAA,CAAY,aAAqB,EAAA;IAC7B,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC;IACzC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;EAC7C;EAEO,cAAA,CAAA,SAAA,CAAA,qBAAqB,GAA7B,UAA8B,aAAqB,EAAA;IAC/C,IAAI,aAAa,KAAK,oBAAoB,CAAC,YAAY,IAAI,aAAa,KAAK,oBAAoB,CAAC,cAAc,EAAE;MAC9G,MAAM,6BAA6B,CAAC,8BAA8B,CAAC,aAAa,CAAC;IACpF;IACD,IAAM,gBAAgB,GAAG,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;IAChD,IAAI,CAAC,gBAAgB,EAAE;MACnB,MAAM,6BAA6B,CAAC,8BAA8B,CAAC,aAAa,CAAC;IACpF;GACJ;EAED,cAAA,CAAA,SAAA,CAAA,OAAO,GAAP,UAAQ,GAAW,EAAA;IACf,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC;GACzC;EAED,cAAA,CAAA,SAAA,CAAA,OAAO,GAAP,UAAQ,GAAW,EAAE,KAAa,EAAA;IAC9B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC;GACzC;EAED,cAAA,CAAA,SAAA,CAAA,UAAU,GAAV,UAAW,GAAW,EAAA;IAClB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC;GACrC;EAED,cAAA,CAAA,SAAA,CAAA,OAAO,GAAP,YAAA;IACI,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;GACzC;EAED,cAAA,CAAA,SAAA,CAAA,WAAW,GAAX,UAAY,GAAW,EAAA;IACnB,OAAO,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,CAAC;GAChD;EACL,OAAA,cAAC;AAAD,CAAC,CAAA,CAAA","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\r\nimport { BrowserCacheLocation } from \"../utils/BrowserConstants\";\r\nimport { IWindowStorage } from \"./IWindowStorage\";\r\n\r\nexport class BrowserStorage implements IWindowStorage<string> {\r\n\r\n    private windowStorage: Storage;\r\n\r\n    constructor(cacheLocation: string) {\r\n        this.validateWindowStorage(cacheLocation);\r\n        this.windowStorage = window[cacheLocation];\r\n    }\r\n\r\n    private validateWindowStorage(cacheLocation: string): void {\r\n        if (cacheLocation !== BrowserCacheLocation.LocalStorage && cacheLocation !== BrowserCacheLocation.SessionStorage) {\r\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n        const storageSupported = !!window[cacheLocation];\r\n        if (!storageSupported) {\r\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n    }\r\n\r\n    getItem(key: string): string | null {\r\n        return this.windowStorage.getItem(key);\r\n    }\r\n\r\n    setItem(key: string, value: string): void {\r\n        this.windowStorage.setItem(key, value);\r\n    }\r\n\r\n    removeItem(key: string): void {\r\n        this.windowStorage.removeItem(key);\r\n    }\r\n\r\n    getKeys(): string[] {\r\n        return Object.keys(this.windowStorage);\r\n    }\r\n\r\n    containsKey(key: string): boolean {\r\n        return this.windowStorage.hasOwnProperty(key);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}