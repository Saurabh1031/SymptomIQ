{"ast":null,"code":"/*! @azure/msal-browser v2.38.3 2023-10-27 */\n'use strict';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar MemoryStorage = /** @class */function () {\n  function MemoryStorage() {\n    this.cache = new Map();\n  }\n  MemoryStorage.prototype.getItem = function (key) {\n    return this.cache.get(key) || null;\n  };\n  MemoryStorage.prototype.setItem = function (key, value) {\n    this.cache.set(key, value);\n  };\n  MemoryStorage.prototype.removeItem = function (key) {\n    this.cache.delete(key);\n  };\n  MemoryStorage.prototype.getKeys = function () {\n    var cacheKeys = [];\n    this.cache.forEach(function (value, key) {\n      cacheKeys.push(key);\n    });\n    return cacheKeys;\n  };\n  MemoryStorage.prototype.containsKey = function (key) {\n    return this.cache.has(key);\n  };\n  MemoryStorage.prototype.clear = function () {\n    this.cache.clear();\n  };\n  return MemoryStorage;\n}();\nexport { MemoryStorage };","map":{"version":3,"sources":["../../src/cache/MemoryStorage.ts"],"names":[],"mappings":";;;AAAA;;;;;EAWI,SAAA,aAAA,CAAA,EAAA;IACI,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,CAAA,CAAa;EACpC;EAED,aAAA,CAAA,SAAA,CAAA,OAAO,GAAP,UAAQ,GAAW,EAAA;IACf,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI;GACrC;EAED,aAAA,CAAA,SAAA,CAAA,OAAO,GAAP,UAAQ,GAAW,EAAE,KAAQ,EAAA;IACzB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC;GAC7B;EAED,aAAA,CAAA,SAAA,CAAA,UAAU,GAAV,UAAW,GAAW,EAAA;IAClB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC;GACzB;EAED,aAAA,CAAA,SAAA,CAAA,OAAO,GAAP,YAAA;IACI,IAAM,SAAS,GAAa,EAAE;IAC9B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,KAAQ,EAAE,GAAW,EAAA;MACrC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;KACtB,CAAC;IACF,OAAO,SAAS;GACnB;EAED,aAAA,CAAA,SAAA,CAAA,WAAW,GAAX,UAAY,GAAW,EAAA;IACnB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC;GAC7B;EAED,aAAA,CAAA,SAAA,CAAA,KAAK,GAAL,YAAA;IACI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAA,CAAE;GACrB;EACL,OAAA,aAAC;AAAD,CAAC,CAAA,CAAA","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { IWindowStorage } from \"./IWindowStorage\";\r\n\r\nexport class MemoryStorage<T> implements IWindowStorage<T> {\r\n\r\n    private cache: Map<string, T>;\r\n\r\n    constructor() {\r\n        this.cache = new Map<string, T>();\r\n    }\r\n\r\n    getItem(key: string): T | null {\r\n        return this.cache.get(key) || null;\r\n    }\r\n\r\n    setItem(key: string, value: T): void {\r\n        this.cache.set(key, value);\r\n    }\r\n\r\n    removeItem(key: string): void {\r\n        this.cache.delete(key);\r\n    }\r\n\r\n    getKeys(): string[] {\r\n        const cacheKeys: string[] = [];\r\n        this.cache.forEach((value: T, key: string) => {\r\n            cacheKeys.push(key);\r\n        });\r\n        return cacheKeys;\r\n    }\r\n\r\n    containsKey(key: string): boolean {\r\n        return this.cache.has(key);\r\n    }\r\n\r\n    clear() :void {\r\n        this.cache.clear();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}