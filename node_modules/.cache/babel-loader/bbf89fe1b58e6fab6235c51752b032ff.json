{"ast":null,"code":"/*! @azure/msal-common v13.3.1 2023-10-27 */\n'use strict';\n\nimport { Separators, APP_METADATA } from '../../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * APP_METADATA Cache\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key: appmetadata-<environment>-<client_id>\r\n *\r\n * Value:\r\n * {\r\n *      clientId: client ID of the application\r\n *      environment: entity that issued the token, represented as a full host\r\n *      familyId: Family ID identifier, '1' represents Microsoft Family\r\n * }\r\n */\nvar AppMetadataEntity = /** @class */function () {\n  function AppMetadataEntity() {}\n  /**\r\n   * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\r\n   */\n  AppMetadataEntity.prototype.generateAppMetadataKey = function () {\n    return AppMetadataEntity.generateAppMetadataCacheKey(this.environment, this.clientId);\n  };\n  /**\r\n   * Generate AppMetadata Cache Key\r\n   */\n  AppMetadataEntity.generateAppMetadataCacheKey = function (environment, clientId) {\n    var appMetaDataKeyArray = [APP_METADATA, environment, clientId];\n    return appMetaDataKeyArray.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n  };\n  /**\r\n   * Creates AppMetadataEntity\r\n   * @param clientId\r\n   * @param environment\r\n   * @param familyId\r\n   */\n  AppMetadataEntity.createAppMetadataEntity = function (clientId, environment, familyId) {\n    var appMetadata = new AppMetadataEntity();\n    appMetadata.clientId = clientId;\n    appMetadata.environment = environment;\n    if (familyId) {\n      appMetadata.familyId = familyId;\n    }\n    return appMetadata;\n  };\n  /**\r\n   * Validates an entity: checks for all expected params\r\n   * @param entity\r\n   */\n  AppMetadataEntity.isAppMetadataEntity = function (key, entity) {\n    if (!entity) {\n      return false;\n    }\n    return key.indexOf(APP_METADATA) === 0 && entity.hasOwnProperty(\"clientId\") && entity.hasOwnProperty(\"environment\");\n  };\n  return AppMetadataEntity;\n}();\nexport { AppMetadataEntity };","map":{"version":3,"sources":["../../../src/cache/entities/AppMetadataEntity.ts"],"names":[],"mappings":";;;;;AAAA;;;AAGG;AAIH;;;;;;;;;;;;;AAaG;AACH,IAAA,iBAAA,GAAA,aAAA,YAAA;EAAA,SAAA,iBAAA,CAAA,EAAA,CA0DC;EArDG;;AAEG;EACH,iBAAA,CAAA,SAAA,CAAA,sBAAsB,GAAtB,YAAA;IACI,OAAO,iBAAiB,CAAC,2BAA2B,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC;GACxF;EAED;;AAEG;EACI,iBAAA,CAAA,2BAA2B,GAAlC,UAAmC,WAAmB,EAAE,QAAgB,EAAA;IACpE,IAAM,mBAAmB,GAAkB,CACvC,YAAY,EACZ,WAAW,EACX,QAAQ,CACX;IACD,OAAO,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,WAAW,CAAA,CAAE;GAChF;EAED;;;;;AAKG;EACI,iBAAA,CAAA,uBAAuB,GAA9B,UAA+B,QAAgB,EAAE,WAAmB,EAAE,QAAiB,EAAA;IACnF,IAAM,WAAW,GAAG,IAAI,iBAAiB,CAAA,CAAE;IAE3C,WAAW,CAAC,QAAQ,GAAG,QAAQ;IAC/B,WAAW,CAAC,WAAW,GAAG,WAAW;IACrC,IAAI,QAAQ,EAAE;MACV,WAAW,CAAC,QAAQ,GAAG,QAAQ;IAClC;IAED,OAAO,WAAW;GACrB;EAED;;;AAGG;EACI,iBAAA,CAAA,mBAAmB,GAA1B,UAA2B,GAAW,EAAE,MAAc,EAAA;IAElD,IAAI,CAAC,MAAM,EAAE;MACT,OAAO,KAAK;IACf;IAED,OACI,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,IAC/B,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,IACjC,MAAM,CAAC,cAAc,CAAC,aAAa,CAAC;GAE3C;EACL,OAAC,iBAAA;AAAD,CAAC,CAAA,CAAA","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { APP_METADATA, Separators } from \"../../utils/Constants\";\r\n\r\n/**\r\n * APP_METADATA Cache\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key: appmetadata-<environment>-<client_id>\r\n *\r\n * Value:\r\n * {\r\n *      clientId: client ID of the application\r\n *      environment: entity that issued the token, represented as a full host\r\n *      familyId: Family ID identifier, '1' represents Microsoft Family\r\n * }\r\n */\r\nexport class AppMetadataEntity {\r\n    clientId: string;\r\n    environment: string;\r\n    familyId?: string;\r\n\r\n    /**\r\n     * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\r\n     */\r\n    generateAppMetadataKey(): string {\r\n        return AppMetadataEntity.generateAppMetadataCacheKey(this.environment, this.clientId);\r\n    }\r\n\r\n    /**\r\n     * Generate AppMetadata Cache Key\r\n     */\r\n    static generateAppMetadataCacheKey(environment: string, clientId: string): string {\r\n        const appMetaDataKeyArray: Array<string> = [\r\n            APP_METADATA,\r\n            environment,\r\n            clientId,\r\n        ];\r\n        return appMetaDataKeyArray.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    }\r\n\r\n    /**\r\n     * Creates AppMetadataEntity\r\n     * @param clientId\r\n     * @param environment\r\n     * @param familyId\r\n     */\r\n    static createAppMetadataEntity(clientId: string, environment: string, familyId?: string): AppMetadataEntity {\r\n        const appMetadata = new AppMetadataEntity();\r\n\r\n        appMetadata.clientId = clientId;\r\n        appMetadata.environment = environment;\r\n        if (familyId) {\r\n            appMetadata.familyId = familyId;\r\n        }\r\n\r\n        return appMetadata;\r\n    }\r\n\r\n    /**\r\n     * Validates an entity: checks for all expected params\r\n     * @param entity\r\n     */\r\n    static isAppMetadataEntity(key: string, entity: object): boolean {\r\n\r\n        if (!entity) {\r\n            return false;\r\n        }\r\n\r\n        return (\r\n            key.indexOf(APP_METADATA) === 0 &&\r\n            entity.hasOwnProperty(\"clientId\") &&\r\n            entity.hasOwnProperty(\"environment\")\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}