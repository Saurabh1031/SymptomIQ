{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{Button,FirstRow,HomeContainer,Label,SecondRow,SymptomsAnalyserContainer}from\"./SymptomComponents\";import SymptomsAnalyserSlider from\"./SymptomsAnalyserSlider\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function SymptomsAnalyser(_ref){let{arr,levels,symptomsArr}=_ref;//console.log(\"arr\", arr);\nconst[data,setData]=useState([]);const[symAnalyseSlider,setSymAnalyseSlider]=useState(false);const[btnDisableBg,setBtnDisableBg]=useState(false);const onlySymptomsNames=symptomsArr.map(item=>item.name);//console.log(\"newArr\", newArr);\nuseEffect(()=>{const newArr=[...onlySymptomsNames,...arr];const arrData=newArr.map(a=>{return{label:a,num:null,day:\"\",checked:false};});setData(arrData);},[]);const dayArr=[{label:\"Select\",value:\"\"},{label:\"Days\",value:\"days\"},{label:\"Weeks\",value:\"weeks\"},{label:\"Months\",value:\"months\"}];// const handleCheckBox = (index: any) => {\n//   console.log(\"index\", index);\n// };\n// const handleSelection = (event: any, index: number) => {\n//   setSelectedDuration(event.target.value);\n//   setInputArray((prev: any) => [\n//     ...prev,\n//     { value: inputValue, duration: event.target.value },\n//   ]);\n// };\nconst handleCheckBox=(index,event)=>{let arr=[...data];let aboveData=data[index];//console.log(aboveData[index]);\ndata.map((_,ind)=>{if(ind>0){return arr[ind]={...arr[ind],num:event.target.checked?aboveData.num:\"\",day:event.target.checked?aboveData.day:\"\"};}});setData(arr);console.log(arr);};const selectDuration=(ind,e)=>{let newData=[...data];let selectedData=newData[ind];selectedData.day=e.target.value;newData[ind]=selectedData;const plusObj=newData[ind+1];if(plusObj&&plusObj.checked){newData[ind+1]={...plusObj,day:e.target.value};}setData(newData);};const enableButton=()=>{const val=data.filter(item=>item.num&&item.day);console.log(\"datalen\",data);console.log(\"vallen\",val);if(val.length===data.length){return false;}return true;};return/*#__PURE__*/_jsx(\"div\",{children:symAnalyseSlider?/*#__PURE__*/_jsx(SymptomsAnalyserSlider,{arr:data,levels:levels}):/*#__PURE__*/_jsxs(_Fragment,{children:[data.length>0&&data.map((item,ind)=>/*#__PURE__*/_jsxs(SymptomsAnalyserContainer,{children:[/*#__PURE__*/_jsx(FirstRow,{children:/*#__PURE__*/_jsx(Label,{children:item.label})}),/*#__PURE__*/_jsxs(SecondRow,{className:\"secondrow\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:item.num,onChange:e=>{let newData=[...data];let selectedData=newData[ind];selectedData.num=e.target.value;newData[ind]=selectedData;const plusObj=newData[ind+1];if(plusObj&&plusObj.checked){newData[ind+1]={...plusObj,day:e.target.value};}setData(newData);},style:{width:\"30%\"}}),/*#__PURE__*/_jsx(\"select\",{value:item.day,onChange:e=>{// handleSelection(e, ind);\nselectDuration(ind,e);},children:dayArr.map(opt=>/*#__PURE__*/_jsx(\"option\",{value:opt.value,children:opt.label}))}),ind===0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:e=>handleCheckBox(ind,e)}),/*#__PURE__*/_jsx(\"span\",{children:\"Apply to All\"})]})]})]})),/*#__PURE__*/_jsxs(HomeContainer,{children:[/*#__PURE__*/_jsx(_Fragment,{children:console.log(enableButton())}),/*#__PURE__*/_jsx(Button,{style:{marginTop:\"50px\"},disabled:enableButton(),onClick:()=>setSymAnalyseSlider(true),children:\"Next\"})]})]})});}export default SymptomsAnalyser;","map":{"version":3,"names":["React","useEffect","useState","Button","FirstRow","HomeContainer","Label","SecondRow","SymptomsAnalyserContainer","SymptomsAnalyserSlider","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SymptomsAnalyser","_ref","arr","levels","symptomsArr","data","setData","symAnalyseSlider","setSymAnalyseSlider","btnDisableBg","setBtnDisableBg","onlySymptomsNames","map","item","name","newArr","arrData","a","label","num","day","checked","dayArr","value","handleCheckBox","index","event","aboveData","_","ind","target","console","log","selectDuration","e","newData","selectedData","plusObj","enableButton","val","filter","length","children","className","type","onChange","style","width","opt","marginTop","disabled","onClick"],"sources":["/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/SymptomsAnalyser.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  FirstRow,\n  HomeContainer,\n  Input,\n  Label,\n  SecondRow,\n  SymptomsAnalyserContainer,\n} from \"./SymptomComponents\";\nimport SymptomsAnalyserSlider from \"./SymptomsAnalyserSlider\";\n\ntype ArrProps = {\n  arr: any;\n  levels: any;\n  symptomsArr: any;\n};\nfunction SymptomsAnalyser({ arr, levels, symptomsArr }: ArrProps) {\n  //console.log(\"arr\", arr);\n  const [data, setData] = useState([]);\n  const [symAnalyseSlider, setSymAnalyseSlider] = useState(false);\n  const [btnDisableBg, setBtnDisableBg] = useState(false);\n  const onlySymptomsNames = symptomsArr.map((item: any) => item.name);\n  //console.log(\"newArr\", newArr);\n  useEffect(() => {\n    const newArr = [...onlySymptomsNames, ...arr];\n    const arrData: any = newArr.map((a: any) => {\n      return {\n        label: a,\n        num: null,\n        day: \"\",\n        checked: false,\n      };\n    });\n    setData(arrData);\n  }, []);\n  const dayArr = [\n    { label: \"Select\", value: \"\" },\n    { label: \"Days\", value: \"days\" },\n    { label: \"Weeks\", value: \"weeks\" },\n    { label: \"Months\", value: \"months\" },\n  ];\n  // const handleCheckBox = (index: any) => {\n  //   console.log(\"index\", index);\n  // };\n  // const handleSelection = (event: any, index: number) => {\n  //   setSelectedDuration(event.target.value);\n  //   setInputArray((prev: any) => [\n  //     ...prev,\n  //     { value: inputValue, duration: event.target.value },\n  //   ]);\n  // };\n  const handleCheckBox = (index: number, event: any) => {\n    let arr: any = [...data];\n    let aboveData: any = data[index];\n    //console.log(aboveData[index]);\n    data.map((_, ind: number) => {\n      if (ind > 0) {\n        return (arr[ind] = {\n          ...arr[ind],\n          num: event.target.checked ? aboveData.num : \"\",\n          day: event.target.checked ? aboveData.day : \"\",\n        });\n      }\n    });\n    setData(arr);\n    console.log(arr);\n  };\n  const selectDuration = (ind: any, e: any) => {\n    let newData: any = [...data];\n    let selectedData: any = newData[ind];\n    selectedData.day = e.target.value;\n    newData[ind] = selectedData;\n    const plusObj = newData[ind + 1];\n    if (plusObj && plusObj.checked) {\n      newData[ind + 1] = { ...plusObj, day: e.target.value };\n    }\n    setData(newData);\n  };\n  const enableButton = () => {\n    const val = data.filter((item: any) => item.num && item.day);\n    console.log(\"datalen\", data);\n    console.log(\"vallen\", val);\n    if (val.length === data.length) {\n      return false;\n    }\n    return true;\n  };\n  return (\n    <div>\n      {symAnalyseSlider ? (\n        <SymptomsAnalyserSlider arr={data} levels={levels} />\n      ) : (\n        <>\n          {data.length > 0 &&\n            data.map((item: any, ind: number) => (\n              <SymptomsAnalyserContainer>\n                <FirstRow>\n                  <Label>{item.label}</Label>\n                </FirstRow>\n                <SecondRow className=\"secondrow\">\n                  <input\n                    type=\"number\"\n                    value={item.num}\n                    onChange={(e) => {\n                      let newData: any = [...data];\n                      let selectedData: any = newData[ind];\n                      selectedData.num = e.target.value;\n                      newData[ind] = selectedData;\n                      const plusObj = newData[ind + 1];\n                      if (plusObj && plusObj.checked) {\n                        newData[ind + 1] = { ...plusObj, day: e.target.value };\n                      }\n                      setData(newData);\n                    }}\n                    style={{ width: \"30%\" }}\n                  />\n                  <select\n                    value={item.day}\n                    onChange={(e) => {\n                      // handleSelection(e, ind);\n                      selectDuration(ind, e);\n                    }}\n                  >\n                    {dayArr.map((opt) => (\n                      <option value={opt.value}>{opt.label}</option>\n                    ))}\n                  </select>\n                  {ind === 0 && (\n                    <div>\n                      <input\n                        type=\"checkbox\"\n                        onChange={(e) => handleCheckBox(ind, e)}\n                      />\n                      <span>Apply to All</span>\n                    </div>\n                  )}\n                </SecondRow>\n              </SymptomsAnalyserContainer>\n            ))}\n          <HomeContainer>\n            <>{console.log(enableButton())}</>\n            <Button\n              style={{ marginTop: \"50px\" }}\n              disabled={enableButton()}\n              onClick={() => setSymAnalyseSlider(true)}\n            >\n              Next\n            </Button>\n          </HomeContainer>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default SymptomsAnalyser;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}