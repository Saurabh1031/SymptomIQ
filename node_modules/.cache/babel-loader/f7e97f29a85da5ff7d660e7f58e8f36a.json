{"ast":null,"code":"import React from\"react\";import ReactDOM from\"react-dom\";import\"./index.css\";import reportWebVitals from\"./reportWebVitals\";import{PublicClientApplication,EventType}from\"@azure/msal-browser\";import{azureAuthentication,msalConfig}from\"./modules/azure\";import AzureApp from\"./modules/azure/azureApp\";import App from\"./App\";import{jsx as _jsx}from\"react/jsx-runtime\";export const msalInstance=new PublicClientApplication(msalConfig);const AZUREAUTHENTICATION=azureAuthentication.run();//bridge?name=sandeep&dob=14/01/1990&gender=male&userid=123\nconst queryParams=new URLSearchParams(window.location.search);const name=queryParams.get('name')||\"\";const dob=queryParams.get('dob')||\"\";const gender=queryParams.get('gender')||\"\";const userid=queryParams.get('userid')||\"\";const svaasToken=queryParams.get('svaasToken')||\"\";//console.log(\"userid: \", userid);\n//console.log(\"window.location.search \", window.location.search);\nif(name!=\"\"&&dob!=\"\"&&gender!=\"\"&&userid!=\"\"&&svaasToken!=\"\"){localStorage.setItem('name',name);localStorage.setItem('dob',dob);localStorage.setItem('gender',gender);localStorage.setItem('userid',userid);localStorage.setItem('svaasToken',atob(svaasToken));}if(AZUREAUTHENTICATION){// Account selection logic is app dependent. Adjust as needed for different use cases.\n// console.log(\"msalConfig \", msalConfig);\n// console.log(\"msalInstance \", msalInstance);\nconst accounts=msalInstance.getAllAccounts();if(accounts.length>0){msalInstance.setActiveAccount(accounts[0]);}msalInstance.addEventCallback(event=>{if(event.eventType===EventType.LOGIN_SUCCESS&&event.payload){const payload=event.payload;const account=payload.account;msalInstance.setActiveAccount(account);}});}ReactDOM.render(/*#__PURE__*/_jsx(React.StrictMode,{children:AZUREAUTHENTICATION?/*#__PURE__*/_jsx(AzureApp,{pca:msalInstance}):/*#__PURE__*/_jsx(App,{})}),document.getElementById(\"root\"));reportWebVitals();","map":{"version":3,"names":["React","ReactDOM","reportWebVitals","PublicClientApplication","EventType","azureAuthentication","msalConfig","AzureApp","App","jsx","_jsx","msalInstance","AZUREAUTHENTICATION","run","queryParams","URLSearchParams","window","location","search","name","get","dob","gender","userid","svaasToken","localStorage","setItem","atob","accounts","getAllAccounts","length","setActiveAccount","addEventCallback","event","eventType","LOGIN_SUCCESS","payload","account","render","StrictMode","children","pca","document","getElementById"],"sources":["/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/index.tsx"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {\n  PublicClientApplication,\n  EventType,\n  EventMessage,\n  AuthenticationResult,\n} from \"@azure/msal-browser\";\nimport { azureAuthentication, msalConfig } from \"./modules/azure\";\nimport AzureApp from \"./modules/azure/azureApp\";\nimport App from \"./App\";\n\nexport const msalInstance: any = new PublicClientApplication(msalConfig);\nconst AZUREAUTHENTICATION: boolean = azureAuthentication.run();\n//bridge?name=sandeep&dob=14/01/1990&gender=male&userid=123\nconst queryParams = new URLSearchParams(window.location.search);\nconst name = queryParams.get('name') || \"\";\nconst dob = queryParams.get('dob') || \"\"\nconst gender = queryParams.get('gender') || \"\";\nconst userid = queryParams.get('userid') || \"\";\nconst svaasToken = queryParams.get('svaasToken') || \"\";\n//console.log(\"userid: \", userid);\n//console.log(\"window.location.search \", window.location.search);\nif (name != \"\" && dob != \"\" && gender != \"\" && userid != \"\" && svaasToken != \"\") {\n  localStorage.setItem('name', name);\n  localStorage.setItem('dob', dob);\n  localStorage.setItem('gender', gender);\n  localStorage.setItem('userid', userid);\n  localStorage.setItem('svaasToken', atob(svaasToken));\n}\nif (AZUREAUTHENTICATION) {\n  // Account selection logic is app dependent. Adjust as needed for different use cases.\n  // console.log(\"msalConfig \", msalConfig);\n  // console.log(\"msalInstance \", msalInstance);\n  const accounts = msalInstance.getAllAccounts();\n  if (accounts.length > 0) {\n    msalInstance.setActiveAccount(accounts[0]);\n  }\n\n  msalInstance.addEventCallback((event: EventMessage) => {\n    if (event.eventType === EventType.LOGIN_SUCCESS && event.payload) {\n      const payload = event.payload as AuthenticationResult;\n      const account = payload.account;\n      msalInstance.setActiveAccount(account);\n    }\n  });\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    {AZUREAUTHENTICATION ? <AzureApp pca={msalInstance} /> : <App />}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,WAAW,CAChC,MAAO,aAAa,CACpB,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAC/C,OACEC,uBAAuB,CACvBC,SAAS,KAGJ,qBAAqB,CAC5B,OAASC,mBAAmB,CAAEC,UAAU,KAAQ,iBAAiB,CACjE,MAAO,CAAAC,QAAQ,KAAM,0BAA0B,CAC/C,MAAO,CAAAC,GAAG,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExB,MAAO,MAAM,CAAAC,YAAiB,CAAG,GAAI,CAAAR,uBAAuB,CAACG,UAAU,CAAC,CACxE,KAAM,CAAAM,mBAA4B,CAAGP,mBAAmB,CAACQ,GAAG,CAAC,CAAC,CAC9D;AACA,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAC/D,KAAM,CAAAC,IAAI,CAAGL,WAAW,CAACM,GAAG,CAAC,MAAM,CAAC,EAAI,EAAE,CAC1C,KAAM,CAAAC,GAAG,CAAGP,WAAW,CAACM,GAAG,CAAC,KAAK,CAAC,EAAI,EAAE,CACxC,KAAM,CAAAE,MAAM,CAAGR,WAAW,CAACM,GAAG,CAAC,QAAQ,CAAC,EAAI,EAAE,CAC9C,KAAM,CAAAG,MAAM,CAAGT,WAAW,CAACM,GAAG,CAAC,QAAQ,CAAC,EAAI,EAAE,CAC9C,KAAM,CAAAI,UAAU,CAAGV,WAAW,CAACM,GAAG,CAAC,YAAY,CAAC,EAAI,EAAE,CACtD;AACA;AACA,GAAID,IAAI,EAAI,EAAE,EAAIE,GAAG,EAAI,EAAE,EAAIC,MAAM,EAAI,EAAE,EAAIC,MAAM,EAAI,EAAE,EAAIC,UAAU,EAAI,EAAE,CAAE,CAC/EC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEP,IAAI,CAAC,CAClCM,YAAY,CAACC,OAAO,CAAC,KAAK,CAAEL,GAAG,CAAC,CAChCI,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAEJ,MAAM,CAAC,CACtCG,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAEH,MAAM,CAAC,CACtCE,YAAY,CAACC,OAAO,CAAC,YAAY,CAAEC,IAAI,CAACH,UAAU,CAAC,CAAC,CACtD,CACA,GAAIZ,mBAAmB,CAAE,CACvB;AACA;AACA;AACA,KAAM,CAAAgB,QAAQ,CAAGjB,YAAY,CAACkB,cAAc,CAAC,CAAC,CAC9C,GAAID,QAAQ,CAACE,MAAM,CAAG,CAAC,CAAE,CACvBnB,YAAY,CAACoB,gBAAgB,CAACH,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC5C,CAEAjB,YAAY,CAACqB,gBAAgB,CAAEC,KAAmB,EAAK,CACrD,GAAIA,KAAK,CAACC,SAAS,GAAK9B,SAAS,CAAC+B,aAAa,EAAIF,KAAK,CAACG,OAAO,CAAE,CAChE,KAAM,CAAAA,OAAO,CAAGH,KAAK,CAACG,OAA+B,CACrD,KAAM,CAAAC,OAAO,CAAGD,OAAO,CAACC,OAAO,CAC/B1B,YAAY,CAACoB,gBAAgB,CAACM,OAAO,CAAC,CACxC,CACF,CAAC,CAAC,CACJ,CAEApC,QAAQ,CAACqC,MAAM,cACb5B,IAAA,CAACV,KAAK,CAACuC,UAAU,EAAAC,QAAA,CACd5B,mBAAmB,cAAGF,IAAA,CAACH,QAAQ,EAACkC,GAAG,CAAE9B,YAAa,CAAE,CAAC,cAAGD,IAAA,CAACF,GAAG,GAAE,CAAC,CAChD,CAAC,CACnBkC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC,CACDzC,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module"}