{"ast":null,"code":"//@ts-nocheck\nimport{useHistory}from\"react-router\";import NewHeader from\"../../components/svaas-header\";import Stepper from\"@app/components/stepper/Stepper\";import{useEffect,useState}from\"react\";import{BottomContainer,ButtonContainer,Card,CardDescription,CardTitle,CauseHeading,CausesContainer,CloseTest,Description,DiseaseName,DoctorIconWrapper,Emergency,EmergencyDiv,EmergencyText,IconContainer,IconWrapper,LogoWrapper,MainContainer,RetakeTest,SideContainer,SidenavContainer,SpecialityContainer,SpecialityDiv,SpecialityTag,SpecialityTitle,SplashBody,SplashSliderContainer,StepperContainer,TitleText}from\"./outcome-components\";import{Bacteria,DoctorIcon,HalfCircle,HalfCircleBg}from\"@app/assets/icons\";import{getDoctorUsingFetch,get_chat_results}from\"@app/@services\";import ErrorPage from\"@app/components/error-page/error-page\";import SideNav from\"@app/components/side-nav/side-nav\";import Slider from\"react-slick\";import'slick-carousel/slick/slick.css';import'slick-carousel/slick/slick-theme.css';import LeavingMidway from\"@app/components/leaving-popup/leaving-popup\";import LoaderScreen from\"@app/components/loader-screen\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const Outcome=()=>{var _userData$emergency,_userData$condtions,_userData$condtions$c,_userData$specialitie;const history=useHistory();const steps=[\"About\",\"Symptoms\",\"History\",\"Outcome\"];const[currentStep,setCurrentStep]=useState(4);const[completedStep,setCompletedStep]=useState(true);const[userData,setUserData]=useState({});const[count,setCount]=useState(0);const[loading,setLoading]=useState(false);const[errorScreen,setErrorScreen]=useState(false);const[showAboutDisease,setShowAboutDisease]=useState(false);const[diseaseName,setDiseaseName]=useState(\"\");const[diseaseDesc,setDiseaseDesc]=useState(\"\");const[onlineDoctorsList,setOnlineDoctorsList]=useState([]);const[specialization,setSpecialization]=useState();const[leavingMidway,setLeavingMidway]=useState(false);const[startAnalyze,setStartAnalyze]=useState(false);const[progress,setProgress]=useState(0);const userType=localStorage.getItem(\"userType\")||\"\";const userId=localStorage.getItem(\"userid\")||\"\";const someone_else_gender=localStorage.getItem(\"someone_else_gender\")||\"\";useEffect(()=>{getUserOutcome();//getDoctorsList();\n},[]);const sliderProfile={infinite:true,dots:true,slidesToShow:2,slidesToScroll:1,speed:300,autoplay:false,autoplaySpeed:4000};const handleRetakeTest=()=>{history.push({pathname:\"/home\"});};const handleCloseClick=()=>{setLeavingMidway(true);};const CapitalizeFirstnLastName=(firstname,lastname)=>{let firstLetter=firstname&&firstname.length>=1&&firstname[0].toUpperCase();let lastLetter=lastname&&lastname.length>=1&&lastname[0].toUpperCase();return\"\".concat(firstLetter).concat(lastLetter);};const getUserOutcome=async()=>{setLoading(true);setStartAnalyze(true);setProgress(0);setErrorScreen(false);await get_chat_results().then(res=>{if(res&&(res.status==201||res.status==200)){var _res$data,_res$data$condtions,_res$data$condtions$c,_res$data2;setUserData(res.data);setCount((_res$data=res.data)===null||_res$data===void 0?void 0:(_res$data$condtions=_res$data.condtions)===null||_res$data$condtions===void 0?void 0:(_res$data$condtions$c=_res$data$condtions.conditions)===null||_res$data$condtions$c===void 0?void 0:_res$data$condtions$c.length);getDoctorsList((_res$data2=res.data)===null||_res$data2===void 0?void 0:_res$data2.specialities);setLoading(false);setStartAnalyze(false);setProgress(0);}else{setLoading(false);setStartAnalyze(false);setProgress(0);setErrorScreen(true);//console.log(\"API failed\");\n}});};const getDoctorsList=async specializations=>{var _data$getDoctors,_data$getDoctors2,_onlineDoctors;const data=await getDoctorUsingFetch(specializations[0]);let onlineDoctors=(data===null||data===void 0?void 0:(_data$getDoctors=data.getDoctors)===null||_data$getDoctors===void 0?void 0:_data$getDoctors.data)&&(data===null||data===void 0?void 0:(_data$getDoctors2=data.getDoctors)===null||_data$getDoctors2===void 0?void 0:_data$getDoctors2.data.filter(doctor=>(doctor===null||doctor===void 0?void 0:doctor.consultationType.toLowerCase())===\"online\"));onlineDoctors=((_onlineDoctors=onlineDoctors)===null||_onlineDoctors===void 0?void 0:_onlineDoctors.length)>2?onlineDoctors.splice(0,3):onlineDoctors;setOnlineDoctorsList(onlineDoctors);setSpecialization(specializations[0]);// getFindSpecialitiesDoc().then((res) => {\n//     console.log(\"doctors data \", res);\n// })\n};//console.log(\"onlinedoctorsList: \", onlineDoctorsList);\nconst handleCardClick=data=>{setDiseaseName(data===null||data===void 0?void 0:data.condition_name);setDiseaseDesc(data===null||data===void 0?void 0:data.long_description);setShowAboutDisease(true);};const handleViewAllSpecialists=()=>{sessionStorage.clear();window.location.href=\"\".concat(process.env.REACT_APP_HOST,\"app/svaasportal/doctors?specialization=\").concat(specialization,\"&fromPage=healthBot&profile=\").concat(userId);};const handleBookConsultationClick=doctorDetails=>{sessionStorage.clear();const id=(doctorDetails===null||doctorDetails===void 0?void 0:doctorDetails.erxDoctorId)||0;window.location.href=\"\".concat(process.env.REACT_APP_HOST,\"app/svaasportal/doctors/doctorDetails/\").concat(id,\"?fromPage=healthBot&bookAgain=true&profile=\").concat(userId);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(NewHeader,{className:\"specialities\",title:\"SymptomIQ\",showBackButton:true,onBack:()=>{history.push({pathname:\"/history\"});}}),/*#__PURE__*/_jsx(StepperContainer,{children:/*#__PURE__*/_jsx(Stepper,{steps:steps,currentStep:currentStep,completedStep:completedStep})}),errorScreen?/*#__PURE__*/_jsx(ErrorPage,{}):loading?/*#__PURE__*/_jsx(LoaderScreen,{startAnalyze:startAnalyze,setStartAnalyze:setStartAnalyze,setProgress:setProgress,progress:progress}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(MainContainer,{children:[/*#__PURE__*/_jsx(TitleText,{children:userType===\"myself\"?\"Based on your selected symptoms, it is possible that you may be experiencing any of the below conditions:\":someone_else_gender===\"male\"?\"Based on your selected symptoms, it is possible that he may be experiencing any of the below conditions:\":someone_else_gender===\"female\"?\"Based on your selected symptoms, it is possible that she may be experiencing any of the below conditions:\":\"Based on your selected symptoms, it is possible that they may be experiencing any of the below conditions:\"}),(userData===null||userData===void 0?void 0:(_userData$emergency=userData.emergency)===null||_userData$emergency===void 0?void 0:_userData$emergency.toUpperCase())===\"YES\"?/*#__PURE__*/_jsxs(Emergency,{children:[/*#__PURE__*/_jsx(EmergencyDiv,{children:/*#__PURE__*/_jsx(EmergencyText,{children:\"Some of the symptoms you mentioned can be caused by serious medical conditions. It is recommended to visit a hospital or speak with a healthcare professional as soon as you can to rule out any potential emergencies and receive appropriate treatment immediately.\"})}),/*#__PURE__*/_jsx(IconContainer,{children:/*#__PURE__*/_jsx(HalfCircle,{strokeColor:\"#F4939A\",fillColor:\"#F4939A\"})})]}):null,/*#__PURE__*/_jsxs(CausesContainer,{children:[/*#__PURE__*/_jsxs(CauseHeading,{children:[\"Possible Causes (\",count,\")\"]}),/*#__PURE__*/_jsx(SplashSliderContainer,{children:/*#__PURE__*/_jsx(Slider,{...sliderProfile,children:userData===null||userData===void 0?void 0:(_userData$condtions=userData.condtions)===null||_userData$condtions===void 0?void 0:(_userData$condtions$c=_userData$condtions.conditions)===null||_userData$condtions$c===void 0?void 0:_userData$condtions$c.map(data=>{let description=data.short_description||\"\";if(description.length>50){description=description.substring(0,50)+\"...\";}return/*#__PURE__*/_jsx(Card,{onClick:()=>{/* handleCardClick(data) */},children:/*#__PURE__*/_jsxs(SplashBody,{children:[/*#__PURE__*/_jsx(LogoWrapper,{children:/*#__PURE__*/_jsx(Bacteria,{})}),/*#__PURE__*/_jsx(CardTitle,{children:data.condition_name}),/*#__PURE__*/_jsx(CardDescription,{children:description})]})});})})})]}),/*#__PURE__*/_jsxs(SpecialityContainer,{children:[/*#__PURE__*/_jsx(SpecialityTitle,{children:\"Speciality to Consult\"}),userData!==null&&userData!==void 0&&userData.specialities&&userData!==null&&userData!==void 0&&(_userData$specialitie=userData.specialities)!==null&&_userData$specialitie!==void 0&&_userData$specialitie.length?/*#__PURE__*/_jsxs(SpecialityDiv,{children:[/*#__PURE__*/_jsx(IconWrapper,{children:/*#__PURE__*/_jsx(HalfCircleBg,{})}),/*#__PURE__*/_jsx(DoctorIconWrapper,{children:/*#__PURE__*/_jsx(DoctorIcon,{})}),/*#__PURE__*/_jsx(SpecialityTag,{children:userData.specialities[0]})]}):null]})]}),/*#__PURE__*/_jsx(BottomContainer,{children:/*#__PURE__*/_jsxs(ButtonContainer,{children:[/*#__PURE__*/_jsx(RetakeTest,{onClick:handleRetakeTest,children:\"Retake Test\"}),/*#__PURE__*/_jsx(CloseTest,{onClick:()=>{},children:\"Close\"})]})})]}),showAboutDisease?/*#__PURE__*/_jsx(SidenavContainer,{children:/*#__PURE__*/_jsx(SideNav,{className:\"closeClassName\",maxHeight:\"100%\",minHeight:\"70%\",isSpaceNeeded:true,onClose:()=>{setShowAboutDisease(false);},title:\"\",closeClassName:\"open\",children:/*#__PURE__*/_jsxs(SideContainer,{children:[/*#__PURE__*/_jsx(DiseaseName,{children:diseaseName}),/*#__PURE__*/_jsx(Description,{children:diseaseDesc})]})})}):null,leavingMidway?/*#__PURE__*/_jsx(LeavingMidway,{onclose:setLeavingMidway}):null]});};export default Outcome;","map":{"version":3,"names":["useHistory","NewHeader","Stepper","useEffect","useState","BottomContainer","ButtonContainer","Card","CardDescription","CardTitle","CauseHeading","CausesContainer","CloseTest","Description","DiseaseName","DoctorIconWrapper","Emergency","EmergencyDiv","EmergencyText","IconContainer","IconWrapper","LogoWrapper","MainContainer","RetakeTest","SideContainer","SidenavContainer","SpecialityContainer","SpecialityDiv","SpecialityTag","SpecialityTitle","SplashBody","SplashSliderContainer","StepperContainer","TitleText","Bacteria","DoctorIcon","HalfCircle","HalfCircleBg","getDoctorUsingFetch","get_chat_results","ErrorPage","SideNav","Slider","LeavingMidway","LoaderScreen","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Outcome","_userData$emergency","_userData$condtions","_userData$condtions$c","_userData$specialitie","history","steps","currentStep","setCurrentStep","completedStep","setCompletedStep","userData","setUserData","count","setCount","loading","setLoading","errorScreen","setErrorScreen","showAboutDisease","setShowAboutDisease","diseaseName","setDiseaseName","diseaseDesc","setDiseaseDesc","onlineDoctorsList","setOnlineDoctorsList","specialization","setSpecialization","leavingMidway","setLeavingMidway","startAnalyze","setStartAnalyze","progress","setProgress","userType","localStorage","getItem","userId","someone_else_gender","getUserOutcome","sliderProfile","infinite","dots","slidesToShow","slidesToScroll","speed","autoplay","autoplaySpeed","handleRetakeTest","push","pathname","handleCloseClick","CapitalizeFirstnLastName","firstname","lastname","firstLetter","length","toUpperCase","lastLetter","concat","then","res","status","_res$data","_res$data$condtions","_res$data$condtions$c","_res$data2","data","condtions","conditions","getDoctorsList","specialities","specializations","_data$getDoctors","_data$getDoctors2","_onlineDoctors","onlineDoctors","getDoctors","filter","doctor","consultationType","toLowerCase","splice","handleCardClick","condition_name","long_description","handleViewAllSpecialists","sessionStorage","clear","window","location","href","process","env","REACT_APP_HOST","handleBookConsultationClick","doctorDetails","id","erxDoctorId","children","className","title","showBackButton","onBack","emergency","strokeColor","fillColor","map","description","short_description","substring","onClick","maxHeight","minHeight","isSpaceNeeded","onClose","closeClassName","onclose"],"sources":["/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/modules/outcome/outcome.tsx"],"sourcesContent":["//@ts-nocheck\nimport { useHistory } from \"react-router\";\nimport NewHeader from \"../../components/svaas-header\"\nimport Stepper from \"@app/components/stepper/Stepper\";\nimport { useEffect, useState } from \"react\";\nimport { Amount, AttentionCard, AttentionDiv, AttentionText, BookConsult, BookConsultCTA, BottomCard, BottomCardContainer, BottomContainer, ButtonContainer, Card, CardContainer, CardDescription, CardTitle, CardsContainer, CauseHeading, CausesContainer, CloseTest, ConsultFee, Description, Details, DetailsCard, DetailsCardCont, DetailsContainer, DetailsExp, DetailsLowerPara, DetailsName, DetailsPara, DetailsProfileDiv, DetailsQual, DetailsSpecialist, DiseaseName, DocListHeading, DoctorAvailableContainer, DoctorIconWrapper, DoctorName, Emergency, EmergencyDiv, EmergencyText, HeaderContainer, HeaderIcon, HeaderName, IconContainer, IconWrapper, LoaderContainer, LogoWrapper, LowerDetails, MainContainer, PerConsult, PerSession, ProfileDiv, QualContainer, Qualifications, RetakeTest, SideContainer, SidenavContainer, SpecialityContainer, SpecialityDiv, SpecialityTag, SpecialityTitle, SplashBody, SplashContainer, SplashDesc, SplashSliderContainer, SplashTitle, StepperContainer, TitleText, TopCard, ViewAll } from \"./outcome-components\";\nimport { Bacteria, DoctorIcon, HalfCircle, HalfCircleBg } from \"@app/assets/icons\";\nimport { getDoctorUsingFetch, getFindSpecialitiesDoc, get_chat_results } from \"@app/@services\";\nimport { HomeIcon } from \"@app/assets/icons\";\nimport ErrorPage from \"@app/components/error-page/error-page\";\nimport SideNav from \"@app/components/side-nav/side-nav\";\nimport Message from \"@app/assets/icons/message\";\nimport Location from \"@app/assets/icons/location\";\nimport VideoCall from \"@app/assets/icons/videocall\";\nimport Slider from \"react-slick\";\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport LeavingMidway from \"@app/components/leaving-popup/leaving-popup\";\nimport LoaderScreen from \"@app/components/loader-screen\";\nconst Outcome = () => {\n    const history = useHistory();\n    const steps = [\"About\", \"Symptoms\", \"History\", \"Outcome\"];\n    const [currentStep, setCurrentStep] = useState<number>(4);\n    const [completedStep, setCompletedStep] = useState(true);\n    const [userData, setUserData] = useState<any>({});\n    const [count, setCount] = useState<number>(0);\n    const [loading, setLoading] = useState(false);\n    const [errorScreen, setErrorScreen] = useState<boolean>(false);\n    const [showAboutDisease, setShowAboutDisease] = useState<boolean>(false);\n    const [diseaseName, setDiseaseName] = useState<any>(\"\");\n    const [diseaseDesc, setDiseaseDesc] = useState<any>(\"\");\n    const [onlineDoctorsList, setOnlineDoctorsList] = useState<any>([]);\n    const [specialization, setSpecialization] = useState<any>();\n    const [leavingMidway, setLeavingMidway] = useState<boolean>(false);\n    const [startAnalyze, setStartAnalyze] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const userType = localStorage.getItem(\"userType\") || \"\";\n    const userId = localStorage.getItem(\"userid\") || \"\";\n    const someone_else_gender = localStorage.getItem(\"someone_else_gender\") || \"\";\n    useEffect(() => {\n        getUserOutcome();\n        //getDoctorsList();\n    }, []);\n    const sliderProfile = {\n        infinite: true,\n        dots: true,\n        slidesToShow: 2,\n        slidesToScroll: 1,\n        speed: 300,\n        autoplay: false,\n        autoplaySpeed: 4000,\n    };\n    const handleRetakeTest = () => {\n        history.push({\n            pathname: \"/home\"\n        })\n    }\n    const handleCloseClick = () => {\n        setLeavingMidway(true);\n    }\n    const CapitalizeFirstnLastName = (firstname: string, lastname: string) => {\n        let firstLetter = firstname && firstname.length >= 1 && firstname[0].toUpperCase();\n        let lastLetter = lastname && lastname.length >= 1 && lastname[0].toUpperCase();\n        return `${firstLetter}${lastLetter}`\n    }\n    const getUserOutcome = async () => {\n        setLoading(true);\n        setStartAnalyze(true);\n        setProgress(0);\n        setErrorScreen(false);\n        await get_chat_results().then((res) => {\n            if (res && (res.status == 201 || res.status == 200)) {\n                setUserData(res.data);\n                setCount(res.data?.condtions?.conditions?.length);\n                getDoctorsList(res.data?.specialities);\n                setLoading(false);\n                setStartAnalyze(false);\n                setProgress(0);\n            } else {\n                setLoading(false);\n                setStartAnalyze(false);\n                setProgress(0);\n                setErrorScreen(true);\n                //console.log(\"API failed\");\n            }\n        });\n    };\n    const getDoctorsList = async (specializations: any) => {\n        const data = await getDoctorUsingFetch(specializations[0]);\n        let onlineDoctors = data?.getDoctors?.data && data?.getDoctors?.data.filter((doctor: any) => doctor?.consultationType.toLowerCase() === \"online\")\n        onlineDoctors = onlineDoctors?.length > 2 ? onlineDoctors.splice(0, 3) : onlineDoctors;\n        setOnlineDoctorsList(onlineDoctors);\n        setSpecialization(specializations[0]);\n        // getFindSpecialitiesDoc().then((res) => {\n        //     console.log(\"doctors data \", res);\n        // })\n    }\n    //console.log(\"onlinedoctorsList: \", onlineDoctorsList);\n    const handleCardClick = (data: any) => {\n        setDiseaseName(data?.condition_name);\n        setDiseaseDesc(data?.long_description);\n        setShowAboutDisease(true);\n    }\n    const handleViewAllSpecialists = () => {\n        sessionStorage.clear();\n        window.location.href = `${process.env.REACT_APP_HOST}app/svaasportal/doctors?specialization=${specialization}&fromPage=healthBot&profile=${userId}`;\n    }\n    const handleBookConsultationClick = (doctorDetails: any) => {\n        sessionStorage.clear();\n        const id = doctorDetails?.erxDoctorId || 0;\n        window.location.href = `${process.env.REACT_APP_HOST}app/svaasportal/doctors/doctorDetails/${id}?fromPage=healthBot&bookAgain=true&profile=${userId}`;\n    }\n    return (\n        <>\n            <NewHeader\n                className=\"specialities\"\n                title=\"SymptomIQ\"\n                showBackButton={true}\n                onBack={() => {\n                    history.push({ pathname: \"/history\" });\n                }}\n            />\n            <StepperContainer>\n                <Stepper\n                    steps={steps}\n                    currentStep={currentStep}\n                    completedStep={completedStep}\n                />\n            </StepperContainer>\n            {errorScreen ?\n                <ErrorPage /> : loading ?\n                    <LoaderScreen startAnalyze={startAnalyze} setStartAnalyze={setStartAnalyze} setProgress={setProgress} progress={progress} /> :\n                    <>\n                        <MainContainer>\n                            <TitleText>\n                                {\n                                    userType === \"myself\" ? \"Based on your selected symptoms, it is possible that you may be experiencing any of the below conditions:\" :\n                                        someone_else_gender === \"male\" ? \"Based on your selected symptoms, it is possible that he may be experiencing any of the below conditions:\" :\n                                            someone_else_gender === \"female\" ? \"Based on your selected symptoms, it is possible that she may be experiencing any of the below conditions:\" :\n                                                \"Based on your selected symptoms, it is possible that they may be experiencing any of the below conditions:\"\n                                }\n                            </TitleText>\n                            {userData?.emergency?.toUpperCase() === \"YES\" ? (\n                                <Emergency>\n                                    <EmergencyDiv>\n                                        <EmergencyText>\n                                            Some of the symptoms you mentioned can be caused by serious\n                                            medical conditions. It is recommended to visit a hospital or speak\n                                            with a healthcare professional as soon as you can to rule out\n                                            any potential emergencies and receive appropriate treatment\n                                            immediately.\n                                        </EmergencyText>\n                                    </EmergencyDiv>\n                                    <IconContainer>\n                                        <HalfCircle strokeColor=\"#F4939A\" fillColor=\"#F4939A\" />\n                                    </IconContainer>\n                                </Emergency>\n                            ) : null}\n                            <CausesContainer>\n                                <CauseHeading>Possible Causes ({count})</CauseHeading>\n                                <SplashSliderContainer>\n                                    <Slider {...sliderProfile}>\n                                        {userData?.condtions?.conditions?.map((data: any) => {\n                                            let description = data.short_description || \"\";\n                                            if (description.length > 50) {\n                                                description = description.substring(0, 50) + \"...\";\n                                            }\n                                            return (\n                                                <Card onClick={() => { /* handleCardClick(data) */ }}>\n                                                    <SplashBody>\n                                                        <LogoWrapper>\n                                                            <Bacteria />\n                                                        </LogoWrapper>\n                                                        <CardTitle>{data.condition_name}</CardTitle>\n                                                        <CardDescription>{description}</CardDescription>\n                                                    </SplashBody>\n                                                </Card>\n                                            );\n                                        })}\n                                    </Slider>\n                                </SplashSliderContainer>\n                            </CausesContainer>\n                            <SpecialityContainer>\n                                <SpecialityTitle>Speciality to Consult</SpecialityTitle>\n                                {userData?.specialities && userData?.specialities?.length ?\n                                    <SpecialityDiv>\n                                        <IconWrapper>\n                                            <HalfCircleBg />\n                                        </IconWrapper>\n                                        <DoctorIconWrapper>\n                                            <DoctorIcon />\n                                        </DoctorIconWrapper>\n                                        <SpecialityTag>{userData.specialities[0]}</SpecialityTag>\n                                    </SpecialityDiv> :\n                                    null}\n                            </SpecialityContainer>\n                        </MainContainer>\n                        <BottomContainer>\n                            <ButtonContainer>\n                                <RetakeTest onClick={handleRetakeTest}>Retake Test</RetakeTest>\n                                <CloseTest onClick={() => { }}>Close</CloseTest>\n                            </ButtonContainer>\n                        </BottomContainer>\n                    </>}\n            {showAboutDisease ?\n                <SidenavContainer>\n                    <SideNav\n                        className=\"closeClassName\"\n                        maxHeight=\"100%\"\n                        minHeight=\"70%\"\n                        isSpaceNeeded={true}\n                        onClose={() => {\n                            setShowAboutDisease(false);\n                        }}\n                        title=\"\"\n                        closeClassName={\"open\"}>\n                        <SideContainer>\n                            <DiseaseName>{diseaseName}</DiseaseName>\n                            <Description>{diseaseDesc}</Description>\n                        </SideContainer>\n                    </SideNav>\n                </SidenavContainer> : null}\n            {leavingMidway ?\n                <LeavingMidway onclose={setLeavingMidway} /> : null}\n        </>\n    );\n};\nexport default Outcome;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}