{"ast":null,"code":"var _jsxFileName = \"/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/loader-screen/loader-screen.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport AnalyzingImage from \"../../assets/images/Analyzing.png\";\nimport { HeaderText, Image, ImageContainer, ProgressBar, ProgressContainer } from \"./loader-screen-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoaderScreen = ({\n  startAnalyze,\n  progress,\n  setStartAnalyze,\n  setProgress\n}) => {\n  _s();\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (startAnalyze && progress < 95) {\n        setProgress(progress + 1);\n      }\n    }, 300);\n    return () => clearInterval(interval);\n  }, [startAnalyze, progress]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ImageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: AnalyzingImage,\n        alt: \"analyzing image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ProgressContainer, {\n        children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n          style: {\n            width: `${progress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(HeaderText, {\n        children: \"Analyzing your symptoms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(LoaderScreen, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = LoaderScreen;\nexport default LoaderScreen;\nvar _c;\n$RefreshReg$(_c, \"LoaderScreen\");","map":{"version":3,"names":["useEffect","AnalyzingImage","HeaderText","Image","ImageContainer","ProgressBar","ProgressContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","LoaderScreen","startAnalyze","progress","setStartAnalyze","setProgress","_s","interval","setInterval","clearInterval","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","width","_c","$RefreshReg$"],"sources":["/home/saurabhtiwari/Downloads/githubclone-IQ/SymptomIQ/src/components/loader-screen/loader-screen.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport AnalyzingImage from \"../../assets/images/Analyzing.png\";\nimport { HeaderText, Image, ImageContainer, ProgressBar, ProgressContainer } from \"./loader-screen-components\";\nconst LoaderScreen = ({ startAnalyze, progress, setStartAnalyze, setProgress }) => {\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if (startAnalyze && progress < 95) {\n                setProgress(progress + 1);\n            }\n        }, 300);\n\n        return () => clearInterval(interval);\n    }, [startAnalyze, progress]);\n\n    return <>\n        <ImageContainer>\n            <Image src={AnalyzingImage} alt=\"analyzing image\" />\n            <ProgressContainer>\n                <ProgressBar style={{ width: `${progress}%` }}></ProgressBar>\n            </ProgressContainer>\n            <HeaderText>Analyzing your symptoms</HeaderText>\n        </ImageContainer>\n    </>;\n}\nexport default LoaderScreen;"],"mappings":";;AAAA,SAASA,SAAS,QAAkB,OAAO;AAC3C,OAAOC,cAAc,MAAM,mCAAmC;AAC9D,SAASC,UAAU,EAAEC,KAAK,EAAEC,cAAc,EAAEC,WAAW,EAAEC,iBAAiB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC/G,MAAMC,YAAY,GAAGA,CAAC;EAAEC,YAAY;EAAEC,QAAQ;EAAEC,eAAe;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAE/EhB,SAAS,CAAC,MAAM;IACZ,MAAMiB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B,IAAIN,YAAY,IAAIC,QAAQ,GAAG,EAAE,EAAE;QAC/BE,WAAW,CAACF,QAAQ,GAAG,CAAC,CAAC;MAC7B;IACJ,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAMM,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACL,YAAY,EAAEC,QAAQ,CAAC,CAAC;EAE5B,oBAAOL,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACHZ,OAAA,CAACJ,cAAc;MAAAgB,QAAA,gBACXZ,OAAA,CAACL,KAAK;QAACkB,GAAG,EAAEpB,cAAe;QAACqB,GAAG,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpDlB,OAAA,CAACF,iBAAiB;QAAAc,QAAA,eACdZ,OAAA,CAACH,WAAW;UAACsB,KAAK,EAAE;YAAEC,KAAK,EAAG,GAAEf,QAAS;UAAG;QAAE;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACpBlB,OAAA,CAACN,UAAU;QAAAkB,QAAA,EAAC;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EAAC,gBACnB,CAAC;AACP,CAAC;AAAAV,EAAA,CArBKL,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAsBlB,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}